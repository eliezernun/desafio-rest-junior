{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"q-pa-md\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_icon = _resolveComponent(\"q-icon\");\n  const _component_q_input = _resolveComponent(\"q-input\");\n  const _component_q_td = _resolveComponent(\"q-td\");\n  const _component_q_btn = _resolveComponent(\"q-btn\");\n  const _component_q_tr = _resolveComponent(\"q-tr\");\n  const _component_q_table = _resolveComponent(\"q-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_q_table, {\n    rows: $setup.rows,\n    columns: $setup.columns,\n    \"visible-columns\": $setup.visibleColumns,\n    \"row-key\": \"name\"\n  }, {\n    top: _withCtx(() => [_createVNode(_component_q_input, {\n      outlined: \"\",\n      label: \"Buscar cliente\"\n    }, {\n      append: _withCtx(() => [_createVNode(_component_q_icon, {\n        name: \"search\",\n        onClick: _cache[0] || (_cache[0] = $event => _ctx.nome - _ctx.cliente),\n        class: \"cursor-pointer\"\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    \"body-cell\": _withCtx(props => [_createVNode(_component_q_tr, {\n      props: props\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(props.cols, col => {\n        return _openBlock(), _createBlock(_component_q_td, {\n          key: col.name,\n          props: props\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(props.value), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"]);\n      }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_q_td, {\n        \"auto-width\": \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_q_btn, {\n          onClick: $event => $setup.editarCliente(props.col),\n          icon: \"edit\",\n          class: \"q-mr-xs\"\n        }, null, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_q_btn, {\n          onClick: $event => $setup.excluirCliente(props.rol),\n          icon: \"delete\",\n          class: \"q-mr-xs\"\n        }, null, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_q_btn, {\n          onClick: $event => $setup.exibirMaisInformacoes(props.row),\n          icon: \"info\"\n        }, null, 8 /* PROPS */, [\"onClick\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"rows\", \"columns\", \"visible-columns\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_q_table","rows","$setup","columns","visibleColumns","top","_withCtx","_component_q_input","outlined","label","append","_component_q_icon","name","onClick","_cache","$event","_ctx","nome","cliente","_","props","_component_q_tr","default","_Fragment","_renderList","cols","col","_createBlock","_component_q_td","key","_createTextVNode","_toDisplayString","value","_component_q_btn","editarCliente","icon","excluirCliente","rol","exibirMaisInformacoes","row"],"sources":["C:\\Users\\PC01\\Documents\\Desafio_Eliezer_Embracon\\front_end\\desafio\\src\\components\\TabelaClientes.vue"],"sourcesContent":["<template>\n  <div class=\"q-pa-md\">\n    <q-table\n     \n      :rows=\"rows\"\n      :columns=\"columns\"\n      :visible-columns=\"visibleColumns\"\n      row-key=\"name\"\n      >\n\n\n      <template v-slot:top>\n        <q-input outlined label=\"Buscar cliente\"  >\n\n          <template v-slot:append>\n            <q-icon name=\"search\" @click=\"nome-cliente\" class=\"cursor-pointer\" />\n          </template>\n\n         </q-input>\n      </template>\n      \n      <template v-slot:body-cell=\"props\">\n        <q-tr :props=\"props\">\n          <q-td\n            v-for=\"col in props.cols\"\n            :key=\"col.name\"\n            :props=\"props\"\n          >\n          {{ props.value }}\n          </q-td>\n      \n          <q-td auto-width>\n            <q-btn @click=\"editarCliente(props.col )\" icon=\"edit\" class=\"q-mr-xs\" />\n            <q-btn @click=\"excluirCliente(props.rol)\" icon=\"delete\" class=\"q-mr-xs\" />\n            <q-btn @click=\"exibirMaisInformacoes(props.row)\" icon=\"info\" />\n          </q-td>\n        </q-tr>\n      </template>\n\n    </q-table>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\n\nconst columns = [ \n{\n    name: 'name',\n    label: 'Nome Sobrenome',\n    align: 'left',\n    field: row => row.name,\n    format: val => `${val}`,\n    sortable: true\n  },\n  { name: 'email', align: 'center', label: 'Email', field: 'email'},\n  { name: 'telefone', align: 'center', label: 'Telefone', field: 'telefone' },\n  { name: 'cep', align: 'center', label: 'Cep', field: 'cep'},  \n]\n\nconst rows = [\n  {\n    name: 'Letícia Reis',email: 'le@gmail.com',telefone: '(15) 99876-3456',cep: '18.044-000',\n  },\n  {\n    name:'Jordan Bellford',email: 'jordi@gmail.com',telefone: '(15) 99765-4352',cep: '18.190-000'\n  }\n]\n\nconst editarCliente = (cliente) => {\n      // Lógica para editar o cliente\n      console.log('Editar:', cliente);\n    }\n\n    const excluirCliente = (cliente) => {\n      // Lógica para excluir o cliente\n      console.log('Excluir:', cliente);\n    }\n\n    const exibirMaisInformacoes = (cliente) => {\n      // Lógica para exibir mais informações do cliente\n      console.log('Mais Informações:', cliente);\n    }\n\n\nexport default {\n  setup () {\n    return {\n      visibleColumns: ref(['name', 'email', 'telefone', 'cep']),\n      columns,\n      rows,\n      editarCliente,\n      excluirCliente,\n      exibirMaisInformacoes\n    }\n  }\n}\n\n\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;;;;;;;uBAApBC,mBAAA,CAuCM,OAvCNC,UAuCM,GAtCJC,YAAA,CAqCUC,kBAAA;IAnCPC,IAAI,EAAEC,MAAA,CAAAD,IAAI;IACVE,OAAO,EAAED,MAAA,CAAAC,OAAO;IAChB,iBAAe,EAAED,MAAA,CAAAE,cAAc;IAChC,SAAO,EAAC;;IAISC,GAAG,EAAAC,QAAA,CAClB,MAMW,CANXP,YAAA,CAMWQ,kBAAA;MANFC,QAAQ,EAAR,EAAQ;MAACC,KAAK,EAAC;;MAELC,MAAM,EAAAJ,QAAA,CACrB,MAAqE,CAArEP,YAAA,CAAqEY,iBAAA;QAA7DC,IAAI,EAAC,QAAQ;QAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,IAAI,GAACD,IAAA,CAAAE,OAAO;QAAEtB,KAAK,EAAC;;MAf9DuB,CAAA;;IAqBuB,WAAS,EAAAb,QAAA,CAejBc,KAfwB,KAC/BrB,YAAA,CAcOsB,eAAA;MAdAD,KAAK,EAAEA;IAAK;MAtB3BE,OAAA,EAAAhB,QAAA,CAwBY,MAAyB,E,kBAD3BT,mBAAA,CAMO0B,SAAA,QA7BjBC,WAAA,CAwB0BJ,KAAK,CAACK,IAAI,EAAjBC,GAAG;6BADZC,YAAA,CAMOC,eAAA;UAJJC,GAAG,EAAEH,GAAG,CAACd,IAAI;UACbQ,KAAK,EAAEA;;UA1BpBE,OAAA,EAAAhB,QAAA,CA4BU,MAAiB,CA5B3BwB,gBAAA,CAAAC,gBAAA,CA4BaX,KAAK,CAACY,KAAK,iB;UA5BxBb,CAAA;;sCA+BUpB,YAAA,CAIO6B,eAAA;QAJD,YAAU,EAAV;MAAU;QA/B1BN,OAAA,EAAAhB,QAAA,CAgCY,MAAwE,CAAxEP,YAAA,CAAwEkC,gBAAA;UAAhEpB,OAAK,EAAAE,MAAA,IAAEb,MAAA,CAAAgC,aAAa,CAACd,KAAK,CAACM,GAAG;UAAIS,IAAI,EAAC,MAAM;UAACvC,KAAK,EAAC;8CAC5DG,YAAA,CAA0EkC,gBAAA;UAAlEpB,OAAK,EAAAE,MAAA,IAAEb,MAAA,CAAAkC,cAAc,CAAChB,KAAK,CAACiB,GAAG;UAAGF,IAAI,EAAC,QAAQ;UAACvC,KAAK,EAAC;8CAC9DG,YAAA,CAA+DkC,gBAAA;UAAvDpB,OAAK,EAAAE,MAAA,IAAEb,MAAA,CAAAoC,qBAAqB,CAAClB,KAAK,CAACmB,GAAG;UAAGJ,IAAI,EAAC;;QAlClEhB,CAAA;;MAAAA,CAAA;;IAAAA,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}