{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"q-pa-md\"\n};\nconst _hoisted_2 = {\n  class: \"text-left\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_th = _resolveComponent(\"q-th\");\n  const _component_q_tr = _resolveComponent(\"q-tr\");\n  const _component_q_btn = _resolveComponent(\"q-btn\");\n  const _component_q_td = _resolveComponent(\"q-td\");\n  const _component_q_table = _resolveComponent(\"q-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_q_table, {\n    flat: \"\",\n    bordered: \"\",\n    title: \"Treats\",\n    rows: $setup.rows,\n    columns: $setup.columns,\n    \"row-key\": \"name\"\n  }, {\n    header: _withCtx(props => [_createVNode(_component_q_tr, {\n      props: props\n    }, {\n      default: _withCtx(() => [_createVNode(_component_q_th, {\n        \"auto-width\": \"\"\n      }), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(props.cols, col => {\n        return _openBlock(), _createBlock(_component_q_th, {\n          key: col.name,\n          props: props\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(col.label), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"])]),\n    body: _withCtx(props => [_createVNode(_component_q_tr, {\n      props: props\n    }, {\n      default: _withCtx(() => [_createVNode(_component_q_td, {\n        \"auto-width\": \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_q_btn, {\n          size: \"sm\",\n          color: \"accent\",\n          round: \"\",\n          dense: \"\",\n          onClick: $event => props.expand = !props.expand,\n          icon: props.expand ? 'remove' : 'add'\n        }, null, 8 /* PROPS */, [\"onClick\", \"icon\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(props.cols, col => {\n        return _openBlock(), _createBlock(_component_q_td, {\n          key: col.name,\n          props: props\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(col.value), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"]), _withDirectives(_createVNode(_component_q_tr, {\n      props: props\n    }, {\n      default: _withCtx(() => [_createVNode(_component_q_td, {\n        colspan: \"100%\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, \"This is expand slot for row above: \" + _toDisplayString(props.row.name) + \".\", 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"]), [[_vShow, props.expand]])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"rows\", \"columns\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_q_table","flat","bordered","title","rows","$setup","columns","header","_withCtx","props","_component_q_tr","default","_component_q_th","_Fragment","_renderList","cols","col","_createBlock","key","name","_createTextVNode","_toDisplayString","label","_","body","_component_q_td","_component_q_btn","size","color","round","dense","onClick","$event","expand","icon","value","colspan","_createElementVNode","_hoisted_2","row"],"sources":["C:\\Users\\PC01\\Documents\\Desafio_Eliezer_Embracon\\front_end\\desafio\\src\\components\\TabelaClientes.vue"],"sourcesContent":["<template>\n  <div class=\"q-pa-md\">\n    <q-table\n      flat bordered\n      title=\"Treats\"\n      :rows=\"rows\"\n      :columns=\"columns\"\n      row-key=\"name\"\n    >\n\n      <template v-slot:header=\"props\">\n        <q-tr :props=\"props\">\n          <q-th auto-width />\n          <q-th\n            v-for=\"col in props.cols\"\n            :key=\"col.name\"\n            :props=\"props\"\n          >\n            {{ col.label }}\n          </q-th>\n        </q-tr>\n      </template>\n\n      <template v-slot:body=\"props\">\n        <q-tr :props=\"props\">\n          <q-td auto-width>\n            <q-btn size=\"sm\" color=\"accent\" round dense @click=\"props.expand = !props.expand\" :icon=\"props.expand ? 'remove' : 'add'\" />\n          </q-td>\n          <q-td\n            v-for=\"col in props.cols\"\n            :key=\"col.name\"\n            :props=\"props\"\n          >\n            {{ col.value }}\n          </q-td>\n        </q-tr>\n        <q-tr v-show=\"props.expand\" :props=\"props\">\n          <q-td colspan=\"100%\">\n            <div class=\"text-left\">This is expand slot for row above: {{ props.row.name }}.</div>\n          </q-td>\n        </q-tr>\n      </template>\n\n    </q-table>\n  </div>\n</template>\n\n<script>\nconst columns = [\n  {\n    name: 'name',\n    required: true,\n    label: 'Dessert (100g serving)',\n    align: 'left',\n    field: row => row.name,\n    format: val => `${val}`,\n    sortable: true\n  },\n  { name: 'calories', align: 'center', label: 'Calories', field: 'calories', sortable: true },\n  { name: 'fat', label: 'Fat (g)', field: 'fat', sortable: true },\n  { name: 'carbs', label: 'Carbs (g)', field: 'carbs' },\n  { name: 'protein', label: 'Protein (g)', field: 'protein' },\n  { name: 'sodium', label: 'Sodium (mg)', field: 'sodium' },\n  { name: 'calcium', label: 'Calcium (%)', field: 'calcium', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) },\n  { name: 'iron', label: 'Iron (%)', field: 'iron', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) }\n]\n\nconst rows = [\n  {\n    name: 'Frozen Yogurt',\n    calories: 159,\n    fat: 6.0,\n    carbs: 24,\n    protein: 4.0,\n    sodium: 87,\n    calcium: '14%',\n    iron: '1%'\n  },\n  {\n    name: 'Ice cream sandwich',\n    calories: 237,\n    fat: 9.0,\n    carbs: 37,\n    protein: 4.3,\n    sodium: 129,\n    calcium: '8%',\n    iron: '1%'\n  },\n  {\n    name: 'Eclair',\n    calories: 262,\n    fat: 16.0,\n    carbs: 23,\n    protein: 6.0,\n    sodium: 337,\n    calcium: '6%',\n    iron: '7%'\n  },\n  {\n    name: 'Cupcake',\n    calories: 305,\n    fat: 3.7,\n    carbs: 67,\n    protein: 4.3,\n    sodium: 413,\n    calcium: '3%',\n    iron: '8%'\n  },\n  {\n    name: 'Gingerbread',\n    calories: 356,\n    fat: 16.0,\n    carbs: 49,\n    protein: 3.9,\n    sodium: 327,\n    calcium: '7%',\n    iron: '16%'\n  },\n  {\n    name: 'Jelly bean',\n    calories: 375,\n    fat: 0.0,\n    carbs: 94,\n    protein: 0.0,\n    sodium: 50,\n    calcium: '0%',\n    iron: '0%'\n  },\n  {\n    name: 'Lollipop',\n    calories: 392,\n    fat: 0.2,\n    carbs: 98,\n    protein: 0,\n    sodium: 38,\n    calcium: '0%',\n    iron: '2%'\n  },\n  {\n    name: 'Honeycomb',\n    calories: 408,\n    fat: 3.2,\n    carbs: 87,\n    protein: 6.5,\n    sodium: 562,\n    calcium: '0%',\n    iron: '45%'\n  },\n  {\n    name: 'Donut',\n    calories: 452,\n    fat: 25.0,\n    carbs: 51,\n    protein: 4.9,\n    sodium: 326,\n    calcium: '2%',\n    iron: '22%'\n  },\n  {\n    name: 'KitKat',\n    calories: 518,\n    fat: 26.0,\n    carbs: 65,\n    protein: 7,\n    sodium: 54,\n    calcium: '12%',\n    iron: '6%'\n  }\n]\n\nexport default {\n  setup () {\n    return {\n      columns,\n      rows\n    }\n  }\n}\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;EAqCLA,KAAK,EAAC;AAAW;;;;;;;uBArChCC,mBAAA,CA2CM,OA3CNC,UA2CM,GA1CJC,YAAA,CAyCUC,kBAAA;IAxCRC,IAAI,EAAJ,EAAI;IAACC,QAAQ,EAAR,EAAQ;IACbC,KAAK,EAAC,QAAQ;IACbC,IAAI,EAAEC,MAAA,CAAAD,IAAI;IACVE,OAAO,EAAED,MAAA,CAAAC,OAAO;IACjB,SAAO,EAAC;;IAGSC,MAAM,EAAAC,QAAA,CAUdC,KAVqB,KAC5BV,YAAA,CASOW,eAAA;MATAD,KAAK,EAAEA;IAAK;MAX3BE,OAAA,EAAAH,QAAA,CAYU,MAAmB,CAAnBT,YAAA,CAAmBa,eAAA;QAAb,YAAU,EAAV;MAAU,K,kBAChBf,mBAAA,CAMOgB,SAAA,QAnBjBC,WAAA,CAc0BL,KAAK,CAACM,IAAI,EAAjBC,GAAG;6BADZC,YAAA,CAMOL,eAAA;UAJJM,GAAG,EAAEF,GAAG,CAACG,IAAI;UACbV,KAAK,EAAEA;;UAhBpBE,OAAA,EAAAH,QAAA,CAkBY,MAAe,CAlB3BY,gBAAA,CAAAC,gBAAA,CAkBeL,GAAG,CAACM,KAAK,iB;UAlBxBC,CAAA;;;MAAAA,CAAA;;IAuBuBC,IAAI,EAAAhB,QAAA,CAYZC,KAZmB,KAC1BV,YAAA,CAWOW,eAAA;MAXAD,KAAK,EAAEA;IAAK;MAxB3BE,OAAA,EAAAH,QAAA,CAyBU,MAEO,CAFPT,YAAA,CAEO0B,eAAA;QAFD,YAAU,EAAV;MAAU;QAzB1Bd,OAAA,EAAAH,QAAA,CA0BY,MAA4H,CAA5HT,YAAA,CAA4H2B,gBAAA;UAArHC,IAAI,EAAC,IAAI;UAACC,KAAK,EAAC,QAAQ;UAACC,KAAK,EAAL,EAAK;UAACC,KAAK,EAAL,EAAK;UAAEC,OAAK,EAAAC,MAAA,IAAEvB,KAAK,CAACwB,MAAM,IAAIxB,KAAK,CAACwB,MAAM;UAAGC,IAAI,EAAEzB,KAAK,CAACwB,MAAM;;QA1BjHV,CAAA;uDA4BU1B,mBAAA,CAMOgB,SAAA,QAlCjBC,WAAA,CA6B0BL,KAAK,CAACM,IAAI,EAAjBC,GAAG;6BADZC,YAAA,CAMOQ,eAAA;UAJJP,GAAG,EAAEF,GAAG,CAACG,IAAI;UACbV,KAAK,EAAEA;;UA/BpBE,OAAA,EAAAH,QAAA,CAiCY,MAAe,CAjC3BY,gBAAA,CAAAC,gBAAA,CAiCeL,GAAG,CAACmB,KAAK,iB;UAjCxBZ,CAAA;;;MAAAA,CAAA;oEAoCQxB,YAAA,CAIOW,eAAA;MAJsBD,KAAK,EAAEA;IAAK;MApCjDE,OAAA,EAAAH,QAAA,CAqCU,MAEO,CAFPT,YAAA,CAEO0B,eAAA;QAFDW,OAAO,EAAC;MAAM;QArC9BzB,OAAA,EAAAH,QAAA,CAsCY,MAAqF,CAArF6B,mBAAA,CAAqF,OAArFC,UAAqF,EAA9D,qCAAmC,GAAAjB,gBAAA,CAAGZ,KAAK,CAAC8B,GAAG,CAACpB,IAAI,IAAG,GAAC,gB;QAtC3FI,CAAA;;MAAAA,CAAA;8DAoCsBd,KAAK,CAACwB,MAAM,E;IApClCV,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}