{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { api } from '@/boot/axios';\nimport useQuasar from 'quasar/src/composables/use-quasar.js';\n;\nimport { ref, onMounted } from 'vue';\nimport { router } from 'vue-router';\nimport { useRoute } from 'vue-router';\nexport default {\n  __name: 'FormularioCliente',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const $q = useQuasar();\n    const nome = ref(null);\n    const sobrenome = ref(null);\n    const email = ref(null);\n    const telefone = ref(null);\n    const cep = ref(null);\n    const route = useRoute();\n    const clientId = ref('');\n    const buscarCliente = async clientId => {\n      try {\n        const response = await api.get(`/clientes/${clientId.value}`);\n        const dadosCliente = response.data;\n        nome.value = dadosCliente.nome, sobrenome.value = dadosCliente.sobrenome, email.value = dadosCliente.email, telefone.value = dadosCliente.telefone, cep.value = dadosCliente.endereco.cep.replace(\"-\", \"\");\n      } catch (error) {\n        console.error('Erro ao buscar cliente:', error);\n      }\n    };\n    const onSubmit = async () => {\n      if (clientId.value != null) {\n        await editarCliente();\n      } else {\n        await criarCliente();\n      }\n    };\n    const editarCliente = async () => {\n      try {\n        await api.put(`/clientes/${clientId.value}`, {\n          nome: nome.value,\n          sobrenome: sobrenome.value,\n          email: email.value,\n          telefone: telefone.value,\n          cep: cep.value\n        });\n        notificarSucesso('Cliente editado com sucesso');\n        limparCampos();\n      } catch (error) {\n        notificarErro('Erro ao editar cliente');\n      }\n    };\n    const criarCliente = async () => {\n      try {\n        await api.post(`/clientes`, {\n          nome: nome.value,\n          sobrenome: sobrenome.value,\n          email: email.value,\n          telefone: telefone.value,\n          cep: cep.value\n        });\n        notificarSucesso('Cliente criado com sucesso');\n        limparCampos();\n        router.push('/clientes/lista');\n      } catch (error) {\n        notificarErro('Erro ao criar cliente');\n      }\n    };\n    const notificarSucesso = mensagem => {\n      $q.notify({\n        color: 'green-4',\n        textColor: 'white',\n        icon: 'cloud_done',\n        message: mensagem\n      });\n    };\n    const notificarErro = mensagem => {\n      $q.notify({\n        color: 'red-5',\n        textColor: 'white',\n        icon: 'warning',\n        message: mensagem\n      });\n    };\n    const limparCampos = () => {\n      nome.value = '';\n      sobrenome.value = '';\n      email.value = '';\n      telefone.value = '';\n      cep.value = '';\n    };\n    onMounted(() => {\n      clientId.value = route.params.id;\n      clientId.value !== undefined && clientId.value !== null && clientId.value !== '' && buscarCliente(clientId);\n    });\n    const __returned__ = {\n      $q,\n      nome,\n      sobrenome,\n      email,\n      telefone,\n      cep,\n      route,\n      clientId,\n      buscarCliente,\n      onSubmit,\n      editarCliente,\n      criarCliente,\n      notificarSucesso,\n      notificarErro,\n      limparCampos,\n      get api() {\n        return api;\n      },\n      get useQuasar() {\n        return useQuasar;\n      },\n      ref,\n      onMounted,\n      get router() {\n        return router;\n      },\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["api","useQuasar","ref","onMounted","router","useRoute","$q","nome","sobrenome","email","telefone","cep","route","clientId","buscarCliente","response","get","value","dadosCliente","data","endereco","replace","error","console","onSubmit","editarCliente","criarCliente","put","notificarSucesso","limparCampos","notificarErro","post","push","mensagem","notify","color","textColor","icon","message","params","id","undefined"],"sources":["C:/Users/PC01/Documents/Desafio_Eliezer_Embracon/front_end/desafio/src/components/FormularioCliente.vue"],"sourcesContent":["<template>\r\n  <div class=\"q-pa-md\">\r\n    <q-form\r\n      @submit=\"onSubmit\"\r\n    >\r\n      <div class=\"row\">\r\n        <div class=\"col-6 q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"nome\"\r\n            label=\"Seu nome *\"\r\n            hint=\"Nome\"\r\n            lazy-rules\r\n            :rules=\"[val => val && val.length > 0 || 'Por favor digite seu nome']\"\r\n          />\r\n        </div>\r\n        <div class=\"col-6 q-pl-xs q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"sobrenome\"\r\n            label=\"Seu sobrenome *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite seu sobrenome'\r\n            ]\"\r\n          />\r\n        </div>\r\n        <div class=\"col-6 q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"email\"\r\n            label=\"Seu email *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite um email vÃ¡lido'\r\n            ]\"\r\n          />\r\n        </div>\r\n        <div class=\"col-3 q-pl-xs q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"telefone\"\r\n            label=\"Seu telefone *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite seu telefone'\r\n            ]\"\r\n          />\r\n        </div>\r\n        <div class=\"col-3 q-pl-xs q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"cep\"\r\n            label=\"Seu CEP *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite seu CEP '\r\n            ]\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <q-btn label=\"Salvar\" type=\"submit\" color=\"primary\"/>\r\n      </div>\r\n    </q-form>\r\n    <div>\r\n      <p>Cliente ID:{{ $route.params.id }}  </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { api } from '@/boot/axios';\r\nimport { useQuasar } from 'quasar';\r\nimport {  ref, onMounted } from 'vue';\r\nimport { router } from 'vue-router';\r\nimport { useRoute } from 'vue-router';\r\n\r\n\r\nconst $q = useQuasar();\r\nconst nome = ref(null);\r\nconst sobrenome = ref(null);\r\nconst email = ref(null);\r\nconst telefone = ref(null);\r\nconst cep = ref(null);\r\nconst route = useRoute();\r\n  \r\nconst clientId = ref('');\r\n\r\nconst buscarCliente = async (clientId) => {\r\n  try {\r\n    const response = await api.get(`/clientes/${clientId.value}`);\r\n    const dadosCliente = response.data;\r\n    \r\n      nome.value =  dadosCliente.nome,\r\n      sobrenome.value = dadosCliente.sobrenome,\r\n      email.value = dadosCliente.email,\r\n      telefone.value = dadosCliente.telefone,\r\n      cep.value = dadosCliente.endereco.cep.replace(\"-\", \"\")\r\n\r\n    \r\n  } catch (error) {\r\n    console.error('Erro ao buscar cliente:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst onSubmit = async () => {\r\n  if (clientId.value != null) {\r\n    await editarCliente();\r\n    \r\n  } else {\r\n    await criarCliente();\r\n  }\r\n};\r\n\r\nconst editarCliente = async () => {\r\n  try {\r\n    await api.put(`/clientes/${clientId.value}`, {\r\n      nome: nome.value,\r\n      sobrenome: sobrenome.value,\r\n      email: email.value,\r\n      telefone: telefone.value,\r\n      cep: cep.value\r\n    });\r\n\r\n    notificarSucesso('Cliente editado com sucesso');\r\n    limparCampos();\r\n\r\n  } catch (error) {\r\n    notificarErro('Erro ao editar cliente');\r\n  }\r\n};\r\n\r\nconst criarCliente = async () => {\r\n  try {\r\n    await api.post(`/clientes`, {\r\n      nome: nome.value,\r\n      sobrenome: sobrenome.value,\r\n      email: email.value,\r\n      telefone: telefone.value,\r\n      cep: cep.value\r\n    });\r\n\r\n    notificarSucesso('Cliente criado com sucesso');\r\n    limparCampos();\r\n    router.push('/clientes/lista');\r\n\r\n  } catch (error) {\r\n    notificarErro('Erro ao criar cliente');\r\n  }\r\n};\r\n\r\nconst notificarSucesso = (mensagem) => {\r\n  $q.notify({\r\n    color: 'green-4',\r\n    textColor: 'white',\r\n    icon: 'cloud_done',\r\n    message: mensagem\r\n  });\r\n};\r\n\r\nconst notificarErro = (mensagem) => {\r\n  $q.notify({\r\n    color: 'red-5',\r\n    textColor: 'white',\r\n    icon: 'warning',\r\n    message: mensagem\r\n  });\r\n};\r\n\r\nconst limparCampos = () => {\r\n  nome.value = '';\r\n  sobrenome.value = '';\r\n  email.value = '';\r\n  telefone.value = '';\r\n  cep.value = '';\r\n};\r\n\r\n\r\n\r\nonMounted(() => {\r\n  \r\n  clientId.value = route.params.id;\r\n  clientId.value !== undefined && clientId.value !== null && clientId.value !== '' && buscarCliente(clientId);\r\n});\r\n\r\n\r\n\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}