{"ast":null,"code":"import { ref } from 'vue';\nconst columns = [{\n  name: 'name',\n  required: true,\n  label: 'Dessert (100g serving)',\n  align: 'left',\n  field: row => row.name,\n  format: val => `${val}`,\n  sortable: true\n}, {\n  name: 'calories',\n  align: 'center',\n  label: 'Email',\n  field: 'calories',\n  sortable: true\n}, {\n  name: 'fat',\n  label: 'Telefone',\n  field: 'fat',\n  sortable: true\n}, {\n  name: 'carbs',\n  label: 'Cep',\n  field: 'carbs'\n}];\nconst rows = [{\n  name: 'Frozen Yogurt',\n  calories: 159,\n  fat: 6.0,\n  carbs: 24\n}, {\n  name: 'Ice cream sandwich',\n  calories: 237,\n  fat: 9.0,\n  carbs: 37\n}];\nexport default {\n  setup() {\n    return {\n      visibleColumns: ref(['calories', 'desc', 'fat', 'carbs']),\n      columns,\n      rows,\n      text: ref(''),\n      ph: ref(''),\n      dense: ref(false)\n    };\n  }\n};","map":{"version":3,"names":["ref","columns","name","required","label","align","field","row","format","val","sortable","rows","calories","fat","carbs","setup","visibleColumns","text","ph","dense"],"sources":["C:\\Users\\PC01\\Documents\\Desafio_Eliezer_Embracon\\front_end\\desafio\\src\\components\\TabelaClientes.vue"],"sourcesContent":["<template>\n  <div class=\"q-pa-md\">\n    <q-table\n      flat bordered\n      :rows=\"rows\"\n      :columns=\"columns\"\n      row-key=\"name\"\n      :visible-columns=\"visibleColumns\">\n\n\n      <template v-slot:top>\n        <q-input outlined label=\"Buscar cliente\"  >\n\n          <template v-slot:append>\n            <q-icon name=\"search\" @click=\"nome-cliente\" class=\"cursor-pointer\" />\n          </template>\n\n         </q-input>\n      </template>\n\n    </q-table>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\n\nconst columns = [\n  {\n    name: 'name',\n    required: true,\n    label: 'Dessert (100g serving)',\n    align: 'left',\n    field: row => row.name,\n    format: val => `${val}`,\n    sortable: true\n  },\n  { name: 'calories', align: 'center', label: 'Email', field: 'calories', sortable: true },\n  { name: 'fat', label: 'Telefone', field: 'fat', sortable: true },\n  { name: 'carbs', label: 'Cep', field: 'carbs' }\n]\n\nconst rows = [\n  {\n    name: 'Frozen Yogurt',\n    calories: 159,\n    fat: 6.0,\n    carbs: 24,\n   \n  },\n  {\n    name: 'Ice cream sandwich',\n    calories: 237,\n    fat: 9.0,\n    carbs: 37,\n  }\n]\n\nexport default {\n  setup () {\n    return {\n      visibleColumns: ref([ 'calories', 'desc', 'fat', 'carbs' ]),\n      columns,\n      rows,\n      text: ref(''),\n      ph: ref(''),\n      dense: ref(false)\n    }\n  }\n}\n\n\n</script>\n"],"mappings":"AAyBA,SAASA,GAAE,QAAS,KAAI;AAExB,MAAMC,OAAM,GAAI,CACd;EACEC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,IAAI;EACdC,KAAK,EAAE,wBAAwB;EAC/BC,KAAK,EAAE,MAAM;EACbC,KAAK,EAAEC,GAAE,IAAKA,GAAG,CAACL,IAAI;EACtBM,MAAM,EAAEC,GAAE,IAAM,GAAEA,GAAI,EAAC;EACvBC,QAAQ,EAAE;AACZ,CAAC,EACD;EAAER,IAAI,EAAE,UAAU;EAAEG,KAAK,EAAE,QAAQ;EAAED,KAAK,EAAE,OAAO;EAAEE,KAAK,EAAE,UAAU;EAAEI,QAAQ,EAAE;AAAK,CAAC,EACxF;EAAER,IAAI,EAAE,KAAK;EAAEE,KAAK,EAAE,UAAU;EAAEE,KAAK,EAAE,KAAK;EAAEI,QAAQ,EAAE;AAAK,CAAC,EAChE;EAAER,IAAI,EAAE,OAAO;EAAEE,KAAK,EAAE,KAAK;EAAEE,KAAK,EAAE;AAAQ,EAChD;AAEA,MAAMK,IAAG,GAAI,CACX;EACET,IAAI,EAAE,eAAe;EACrBU,QAAQ,EAAE,GAAG;EACbC,GAAG,EAAE,GAAG;EACRC,KAAK,EAAE;AAET,CAAC,EACD;EACEZ,IAAI,EAAE,oBAAoB;EAC1BU,QAAQ,EAAE,GAAG;EACbC,GAAG,EAAE,GAAG;EACRC,KAAK,EAAE;AACT,EACF;AAEA,eAAe;EACbC,KAAIA,CAAA,EAAK;IACP,OAAO;MACLC,cAAc,EAAEhB,GAAG,CAAC,CAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,OAAM,CAAG,CAAC;MAC3DC,OAAO;MACPU,IAAI;MACJM,IAAI,EAAEjB,GAAG,CAAC,EAAE,CAAC;MACbkB,EAAE,EAAElB,GAAG,CAAC,EAAE,CAAC;MACXmB,KAAK,EAAEnB,GAAG,CAAC,KAAK;IAClB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}