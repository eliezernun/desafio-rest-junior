{"ast":null,"code":"import { api } from '@/boot/axios';\nimport useQuasar from 'quasar/src/composables/use-quasar.js';\n;\nimport { ref, onMounted, watch } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'FormularioCliente',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const $q = useQuasar();\n    const router = useRouter();\n    const nome = ref(null);\n    const sobrenome = ref(null);\n    const email = ref(null);\n    const telefone = ref(null);\n    const cep = ref(null);\n    const loadClienteDetails = async () => {\n      try {\n        const clienteId = router.params.id; // Obtém o ID do cliente da rota\n        const response = await api.get('/clientes/' + clienteId);\n        nome.value = response.data.nome;\n        sobrenome.value = response.data.sobrenome;\n        email.value = response.data.email;\n        telefone.value = response.data.telefone;\n        cep.value = response.data.cep;\n      } catch (error) {\n        console.log('Erro ao carregar detalhes do cliente:', error);\n      }\n    };\n    const onSubmit = async () => {\n      try {\n        await api.post(\"/clientes\", {\n          nome: nome.value,\n          sobrenome: sobrenome.value,\n          email: email.value,\n          telefone: telefone.value,\n          cep: cep.value\n        });\n        $q.notify({\n          color: 'green-4',\n          textColor: 'white',\n          icon: 'cloud_done',\n          message: 'Cliente salvo com sucesso'\n        });\n        nome.value = '';\n        sobrenome.value = '';\n        email.value = '';\n        telefone.value = '';\n        cep.value = '';\n      } catch (error) {\n        $q.notify({\n          color: 'red-5',\n          textColor: 'white',\n          icon: 'warning',\n          message: 'Erro ao salvar cliente'\n        });\n      }\n    };\n    const __returned__ = {\n      $q,\n      router,\n      nome,\n      sobrenome,\n      email,\n      telefone,\n      cep,\n      loadClienteDetails,\n      onSubmit,\n      get api() {\n        return api;\n      },\n      get useQuasar() {\n        return useQuasar;\n      },\n      ref,\n      onMounted,\n      watch,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["api","useQuasar","ref","onMounted","watch","useRouter","$q","router","nome","sobrenome","email","telefone","cep","loadClienteDetails","clienteId","params","id","response","get","value","data","error","console","log","onSubmit","post","notify","color","textColor","icon","message"],"sources":["C:/Users/PC01/Documents/Desafio_Eliezer_Embracon/front_end/desafio/src/components/FormularioCliente.vue"],"sourcesContent":["<template>\r\n  <div class=\"q-pa-md\">\r\n    <q-form\r\n      @submit=\"onSubmit\"\r\n    >\r\n      <div class=\"row\">\r\n        <div class=\"col-6 q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"nome\"\r\n            label=\"Seu nome *\"\r\n            hint=\"Nome\"\r\n            lazy-rules\r\n            :rules=\"[val => val && val.length > 0 || 'Por favor digite seu nome']\"\r\n          />\r\n        </div>\r\n        <div class=\"col-6 q-pl-xs q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"sobrenome\"\r\n            label=\"Seu sobrenome *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite seu sobrenome'\r\n            ]\"\r\n          />\r\n        </div>\r\n        <div class=\"col-6 q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"email\"\r\n            label=\"Seu email *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite um email válido'\r\n            ]\"\r\n          />\r\n        </div>\r\n        <div class=\"col-3 q-pl-xs q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"telefone\"\r\n            label=\"Seu telefone *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite seu telefone'\r\n            ]\"\r\n          />\r\n        </div>\r\n        <div class=\"col-3 q-pl-xs q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"cep\"\r\n            label=\"Seu CEP *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite seu CEP '\r\n            ]\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <q-btn label=\"Salvar\" type=\"submit\" color=\"primary\"/>\r\n      </div>\r\n    </q-form>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { api } from '@/boot/axios';\r\nimport { useQuasar } from 'quasar';\r\nimport { ref, onMounted, watch } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\n\r\nconst $q = useQuasar();\r\nconst router = useRouter();\r\nconst nome = ref(null);\r\nconst sobrenome = ref(null);\r\nconst email = ref(null);\r\nconst telefone = ref(null);\r\nconst cep = ref(null);\r\n\r\nconst loadClienteDetails = async () => {\r\n  try {\r\n    const clienteId = router.params.id; // Obtém o ID do cliente da rota\r\n    const response = await api.get('/clientes/' + clienteId);\r\n    \r\n    nome.value = response.data.nome;\r\n    sobrenome.value = response.data.sobrenome;\r\n    email.value = response.data.email;\r\n    telefone.value = response.data.telefone;\r\n    cep.value = response.data.cep;\r\n\r\n  } catch (error) {\r\n    console.log('Erro ao carregar detalhes do cliente:', error);\r\n  }\r\n};\r\n\r\nconst onSubmit = async () => {\r\n  try {\r\n    \r\n    await api.post(\"/clientes\", {\r\n      nome: nome.value,\r\n      sobrenome: sobrenome.value,\r\n      email: email.value,\r\n      telefone: telefone.value,\r\n      cep: cep.value\r\n    });\r\n\r\n    $q.notify({\r\n      color: 'green-4',\r\n      textColor: 'white',\r\n      icon: 'cloud_done',\r\n      message: 'Cliente salvo com sucesso'\r\n    });\r\n\r\n    nome.value = '';\r\n    sobrenome.value = '';\r\n    email.value = '';\r\n    telefone.value = '';\r\n    cep.value = '';\r\n\r\n  } catch (error) {\r\n    $q.notify({\r\n      color: 'red-5',\r\n      textColor: 'white',\r\n      icon: 'warning',\r\n      message: 'Erro ao salvar cliente'\r\n    });\r\n  }\r\n};\r\n\r\n\r\n</script>\r\n"],"mappings":"AAuEA,SAASA,GAAG,QAAQ,cAAc;AAClC,OAAOC,SAAS,MAAM,sCAAc;AAAA;AACpC,SAASC,GAAG,EAAEC,SAAS,EAAEC,KAAK,QAAQ,KAAK;AAC3C,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAGtC,MAAMC,EAAE,GAAGL,SAAS,CAAC,CAAC;IACtB,MAAMM,MAAM,GAAGF,SAAS,CAAC,CAAC;IAC1B,MAAMG,IAAI,GAAGN,GAAG,CAAC,IAAI,CAAC;IACtB,MAAMO,SAAS,GAAGP,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMQ,KAAK,GAAGR,GAAG,CAAC,IAAI,CAAC;IACvB,MAAMS,QAAQ,GAAGT,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAMU,GAAG,GAAGV,GAAG,CAAC,IAAI,CAAC;IAErB,MAAMW,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAM,CAACC,EAAE,CAAC,CAAC;QACpC,MAAMC,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,GAAG,CAAC,YAAY,GAAGJ,SAAS,CAAC;QAExDN,IAAI,CAACW,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACZ,IAAI;QAC/BC,SAAS,CAACU,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACX,SAAS;QACzCC,KAAK,CAACS,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACV,KAAK;QACjCC,QAAQ,CAACQ,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACT,QAAQ;QACvCC,GAAG,CAACO,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACR,GAAG;MAE/B,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEF,KAAK,CAAC;MAC7D;IACF,CAAC;IAED,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QAEF,MAAMxB,GAAG,CAACyB,IAAI,CAAC,WAAW,EAAE;UAC1BjB,IAAI,EAAEA,IAAI,CAACW,KAAK;UAChBV,SAAS,EAAEA,SAAS,CAACU,KAAK;UAC1BT,KAAK,EAAEA,KAAK,CAACS,KAAK;UAClBR,QAAQ,EAAEA,QAAQ,CAACQ,KAAK;UACxBP,GAAG,EAAEA,GAAG,CAACO;QACX,CAAC,CAAC;QAEFb,EAAE,CAACoB,MAAM,CAAC;UACRC,KAAK,EAAE,SAAS;UAChBC,SAAS,EAAE,OAAO;UAClBC,IAAI,EAAE,YAAY;UAClBC,OAAO,EAAE;QACX,CAAC,CAAC;QAEFtB,IAAI,CAACW,KAAK,GAAG,EAAE;QACfV,SAAS,CAACU,KAAK,GAAG,EAAE;QACpBT,KAAK,CAACS,KAAK,GAAG,EAAE;QAChBR,QAAQ,CAACQ,KAAK,GAAG,EAAE;QACnBP,GAAG,CAACO,KAAK,GAAG,EAAE;MAEhB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdf,EAAE,CAACoB,MAAM,CAAC;UACRC,KAAK,EAAE,OAAO;UACdC,SAAS,EAAE,OAAO;UAClBC,IAAI,EAAE,SAAS;UACfC,OAAO,EAAE;QACX,CAAC,CAAC;MACJ;IACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}