{"ast":null,"code":"import { api } from '@/boot/axios';\nimport useQuasar from 'quasar/src/composables/use-quasar.js';\n;\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nexport default {\n  __name: 'FormularioCliente',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const $q = useQuasar();\n    const nome = ref(null);\n    const sobrenome = ref(null);\n    const email = ref(null);\n    const telefone = ref(null);\n    const cep = ref(null);\n    const route = useRoute();\n    const clientId = ref('');\n    const buscarCliente = async clie => {\n      try {\n        const response = await api.get(`/clientes/${id}`);\n        const dadosCliente = response.data;\n\n        // Atualize os dados do cliente com base na resposta da API\n        clienteId.value = {\n          id: dadosCliente.id,\n          nome: dadosCliente.nome,\n          sobrenome: dadosCliente.sobrenome,\n          email: dadosCliente.email,\n          telefone: dadosCliente.telefone,\n          cep: dadosCliente.cep\n        };\n      } catch (error) {\n        console.error('Erro ao buscar cliente:', error);\n      }\n    };\n    const onSubmit = async () => {\n      if (clientId.value != null) {\n        try {\n          await api.put(`/clientes/${clientId.value}`, {\n            nome: nome.value,\n            sobrenome: sobrenome.value,\n            email: email.value,\n            telefone: telefone.value,\n            cep: cep.value\n          });\n          $q.notify({\n            color: 'green-4',\n            textColor: 'white',\n            icon: 'cloud_done',\n            message: 'Cliente salvo com sucesso'\n          });\n          nome.value = '';\n          sobrenome.value = '';\n          email.value = '';\n          telefone.value = '';\n          cep.value = '';\n        } catch (error) {\n          $q.notify({\n            color: 'red-5',\n            textColor: 'white',\n            icon: 'warning',\n            message: 'Erro ao salvar cliente'\n          });\n        }\n      } else {\n        try {\n          await api.post(`/clientes`, {\n            nome: nome.value,\n            sobrenome: sobrenome.value,\n            email: email.value,\n            telefone: telefone.value,\n            cep: cep.value\n          });\n          $q.notify({\n            color: 'green-4',\n            textColor: 'white',\n            icon: 'cloud_done',\n            message: 'Cliente salvo com sucesso'\n          });\n          nome.value = '';\n          sobrenome.value = '';\n          email.value = '';\n          telefone.value = '';\n          cep.value = '';\n        } catch (error) {\n          $q.notify({\n            color: 'red-5',\n            textColor: 'white',\n            icon: 'warning',\n            message: 'Erro ao salvar cliente'\n          });\n        }\n      }\n    };\n    onMounted(() => {\n      clientId.value = route.params.id;\n      buscarCliente(clientId);\n    });\n    const __returned__ = {\n      $q,\n      nome,\n      sobrenome,\n      email,\n      telefone,\n      cep,\n      route,\n      clientId,\n      buscarCliente,\n      onSubmit,\n      get api() {\n        return api;\n      },\n      get useQuasar() {\n        return useQuasar;\n      },\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["api","useQuasar","ref","onMounted","useRoute","$q","nome","sobrenome","email","telefone","cep","route","clientId","buscarCliente","clie","response","get","id","dadosCliente","data","clienteId","value","error","console","onSubmit","put","notify","color","textColor","icon","message","post","params"],"sources":["C:/Users/PC01/Documents/Desafio_Eliezer_Embracon/front_end/desafio/src/components/FormularioCliente.vue"],"sourcesContent":["<template>\r\n  <div class=\"q-pa-md\">\r\n    <q-form\r\n      @submit=\"onSubmit\"\r\n    >\r\n      <div class=\"row\">\r\n        <div class=\"col-6 q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"nome\"\r\n            label=\"Seu nome *\"\r\n            hint=\"Nome\"\r\n            lazy-rules\r\n            :rules=\"[val => val && val.length > 0 || 'Por favor digite seu nome']\"\r\n          />\r\n        </div>\r\n        <div class=\"col-6 q-pl-xs q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"sobrenome\"\r\n            label=\"Seu sobrenome *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite seu sobrenome'\r\n            ]\"\r\n          />\r\n        </div>\r\n        <div class=\"col-6 q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"email\"\r\n            label=\"Seu email *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite um email vÃ¡lido'\r\n            ]\"\r\n          />\r\n        </div>\r\n        <div class=\"col-3 q-pl-xs q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"telefone\"\r\n            label=\"Seu telefone *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite seu telefone'\r\n            ]\"\r\n          />\r\n        </div>\r\n        <div class=\"col-3 q-pl-xs q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"cep\"\r\n            label=\"Seu CEP *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite seu CEP '\r\n            ]\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <q-btn label=\"Salvar\" type=\"submit\" color=\"primary\"/>\r\n      </div>\r\n    </q-form>\r\n    <div>\r\n      <p>Cliente ID:{{ $route.params.id }}  </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { api } from '@/boot/axios';\r\nimport { useQuasar } from 'quasar';\r\nimport {  ref, onMounted } from 'vue';\r\n\r\nimport { useRoute } from 'vue-router';\r\n\r\n\r\nconst $q = useQuasar();\r\nconst nome = ref(null);\r\nconst sobrenome = ref(null);\r\nconst email = ref(null);\r\nconst telefone = ref(null);\r\nconst cep = ref(null);\r\nconst route = useRoute();\r\n  \r\nconst clientId = ref('');\r\n\r\nconst buscarCliente = async (clie) => {\r\n  try {\r\n    const response = await api.get(`/clientes/${id}`);\r\n    const dadosCliente = response.data;\r\n    \r\n    // Atualize os dados do cliente com base na resposta da API\r\n    clienteId.value = {\r\n      id: dadosCliente.id,\r\n      nome: dadosCliente.nome,\r\n      sobrenome: dadosCliente.sobrenome,\r\n      email: dadosCliente.email,\r\n      telefone: dadosCliente.telefone,\r\n      cep: dadosCliente.cep,\r\n    };\r\n  } catch (error) {\r\n    console.error('Erro ao buscar cliente:', error);\r\n  }\r\n};\r\n\r\n\r\nconst onSubmit = async () => {\r\n  if(clientId.value != null) {\r\n      try {\r\n      \r\n      await api.put(`/clientes/${clientId.value}`, {\r\n        nome: nome.value,\r\n        sobrenome: sobrenome.value,\r\n        email: email.value,\r\n        telefone: telefone.value,\r\n        cep: cep.value\r\n      });\r\n\r\n      $q.notify({\r\n        color: 'green-4',\r\n        textColor: 'white',\r\n        icon: 'cloud_done',\r\n        message: 'Cliente salvo com sucesso'\r\n      });\r\n\r\n      nome.value = '';\r\n      sobrenome.value = '';\r\n      email.value = '';\r\n      telefone.value = '';\r\n      cep.value = '';\r\n\r\n    } catch (error) {\r\n      $q.notify({\r\n        color: 'red-5',\r\n        textColor: 'white',\r\n        icon: 'warning',\r\n        message: 'Erro ao salvar cliente'\r\n      });\r\n    }\r\n  } else {\r\n    try {\r\n    \r\n    await api.post(`/clientes`, {\r\n      nome: nome.value,\r\n      sobrenome: sobrenome.value,\r\n      email: email.value,\r\n      telefone: telefone.value,\r\n      cep: cep.value\r\n    });\r\n\r\n    $q.notify({\r\n      color: 'green-4',\r\n      textColor: 'white',\r\n      icon: 'cloud_done',\r\n      message: 'Cliente salvo com sucesso'\r\n    });\r\n\r\n    nome.value = '';\r\n    sobrenome.value = '';\r\n    email.value = '';\r\n    telefone.value = '';\r\n    cep.value = '';\r\n\r\n  } catch (error) {\r\n    $q.notify({\r\n      color: 'red-5',\r\n      textColor: 'white',\r\n      icon: 'warning',\r\n      message: 'Erro ao salvar cliente'\r\n    });\r\n  }\r\n  }\r\n \r\n};\r\n\r\nonMounted(() => {\r\n  \r\n  clientId.value = route.params.id;\r\n  buscarCliente(clientId);\r\n});\r\n\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}