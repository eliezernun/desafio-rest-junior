{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { api } from '../boot/axios';\nconst rows = [{\n  name: 'Letícia',\n  sobrenome: 'Reis',\n  email: 'le@gmail.com',\n  telefone: '(15) 99876-3456',\n  cep: '18.044-000'\n}, {\n  name: 'Jordan',\n  sobrenome: 'Bellford',\n  email: 'jordi@gmail.com',\n  telefone: '(15) 99765-4352',\n  cep: '18.190-000'\n}];\nconst editarCliente = cliente => {\n  // Lógica para editar o cliente\n  console.log('Editar:', cliente);\n};\nconst excluirCliente = cliente => {\n  // Lógica para excluir o cliente\n  console.log('Excluir:', cliente);\n};\nconst exibirMaisInformacoes = cliente => {\n  // Lógica para exibir mais informações do cliente\n  console.log('Mais Informações:', cliente);\n};\nconst buscarCliente = () => {\n  // Lógica para buscar o cliente\n  console.log('Buscar cliente');\n};\nexport default {\n  name: 'TabelaClientes',\n  props: {\n    route: {\n      type: String,\n      default: ''\n    }\n  },\n  setup() {\n    const posts = ref([]);\n    const columns = [{\n      name: 'name',\n      label: 'Nome ',\n      align: 'left',\n      field: col => col.name\n    }, {\n      name: 'sobrenome',\n      align: 'center',\n      label: 'Sobrenome',\n      field: 'sobrenome'\n    }, {\n      name: 'email',\n      align: 'center',\n      label: 'Email',\n      field: 'email'\n    }, {\n      name: 'telefone',\n      align: 'center',\n      label: 'Telefone',\n      field: 'telefone'\n    }, {\n      name: 'cep',\n      align: 'center',\n      label: 'Cep',\n      field: 'cep'\n    }];\n    onMounted(() => {\n      getPosts();\n    });\n    const getPosts = async () => {\n      try {\n        const response = await api.get('');\n        console.log(response);\n      } catch (error) {\n        console.log(\" Esse e o erro que está acontecendo: \" + error);\n      }\n    };\n    return {\n      visibleColumns: ref(['name', 'email', 'telefone', 'cep', 'sobrenome']),\n      columns,\n      rows,\n      editarCliente,\n      excluirCliente,\n      exibirMaisInformacoes,\n      buscarCliente,\n      getPosts,\n      posts\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","api","rows","name","sobrenome","email","telefone","cep","editarCliente","cliente","console","log","excluirCliente","exibirMaisInformacoes","buscarCliente","props","route","type","String","default","setup","posts","columns","label","align","field","col","getPosts","response","get","error","visibleColumns"],"sources":["C:\\Users\\PC01\\Documents\\Desafio_Eliezer_Embracon\\front_end\\desafio\\src\\components\\TabelaClientes.vue"],"sourcesContent":["<template>\n  <div class=\"q-pa-md\">\n    <q-table\n      :rows=\"rows\"\n      :columns=\"columns\"\n      :visible-columns=\"visibleColumns\"\n      row-key=\"name\"\n    >\n\n      <template v-slot:top>\n        <q-input outlined label=\"Buscar cliente\">\n          <template v-slot:append>\n            <q-icon name=\"search\" @click=\"buscarCliente\" class=\"cursor-pointer\" />\n          </template>\n        </q-input>\n      </template>\n\n      <template v-slot:body=\"props\">\n        <q-tr :props=\"props\">\n          <q-td v-for=\"col in props.cols\" :key=\"col.name\" :props=\"props\">\n            {{ col.value }}\n          </q-td>\n      \n          <q-td auto-width>\n            <q-btn @click=\"editarCliente(props)\" icon=\"edit\" class=\"q-mr-xs\" />\n            <q-btn @click=\"excluirCliente(props)\" icon=\"delete\" class=\"q-mr-xs\" />\n            <q-btn @click=\"exibirMaisInformacoes(props)\" icon=\"info\" />\n          </q-td>\n        </q-tr>\n      </template>\n\n    </q-table>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { api } from '../boot/axios'\n\nconst rows = [\n  {\n    name: 'Letícia', sobrenome: 'Reis',  email: 'le@gmail.com', telefone: '(15) 99876-3456', cep: '18.044-000',\n  },\n  {\n    name: 'Jordan', sobrenome: 'Bellford', email: 'jordi@gmail.com', telefone: '(15) 99765-4352', cep: '18.190-000'\n  }\n]\n\nconst editarCliente = (cliente) => {\n  // Lógica para editar o cliente\n  console.log('Editar:', cliente);\n}\n\nconst excluirCliente = (cliente) => {\n  // Lógica para excluir o cliente\n  console.log('Excluir:', cliente);\n}\n\nconst exibirMaisInformacoes = (cliente) => {\n  // Lógica para exibir mais informações do cliente\n  console.log('Mais Informações:', cliente);\n}\n\nconst buscarCliente = () => {\n  // Lógica para buscar o cliente\n  console.log('Buscar cliente');\n}\n\nexport default {\n  name: 'TabelaClientes',\n  props: {\n    route: {\n      type: String,\n      default: ''\n    }\n  },\n  setup () {\n\n    const posts = ref([])\n    const columns = [ \n      {\n        name: 'name',\n        label: 'Nome ',\n        align: 'left',\n        field: col => col.name\n      },\n      { name: 'sobrenome', align: 'center', label: 'Sobrenome', field: 'sobrenome'},\n      { name: 'email', align: 'center', label: 'Email', field: 'email'},\n      { name: 'telefone', align: 'center', label: 'Telefone', field: 'telefone' },\n      { name: 'cep', align: 'center', label: 'Cep', field: 'cep'}\n    ]\n\n    onMounted(() => {\n      getPosts()\n    })\n\n    const getPosts = async () => {\n      try {\n        const response = await api.get('')\n        console.log(response);\n      } catch (error) {\n        console.log(\" Esse e o erro que está acontecendo: \" + error);\n      }\n    }\n\n\n    return {\n      visibleColumns: ref(['name', 'email', 'telefone', 'cep', 'sobrenome']),\n      columns,\n      rows,\n      editarCliente,\n      excluirCliente,\n      exibirMaisInformacoes,\n      buscarCliente,\n      getPosts,\n      posts\n    }\n  }\n}\n</script>\n"],"mappings":"AAoCA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAI;AACnC,SAASC,GAAE,QAAS,eAAc;AAElC,MAAMC,IAAG,GAAI,CACX;EACEC,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAE,MAAM;EAAGC,KAAK,EAAE,cAAc;EAAEC,QAAQ,EAAE,iBAAiB;EAAEC,GAAG,EAAE;AAChG,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAE,UAAU;EAAEC,KAAK,EAAE,iBAAiB;EAAEC,QAAQ,EAAE,iBAAiB;EAAEC,GAAG,EAAE;AACrG,EACF;AAEA,MAAMC,aAAY,GAAKC,OAAO,IAAK;EACjC;EACAC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,OAAO,CAAC;AACjC;AAEA,MAAMG,cAAa,GAAKH,OAAO,IAAK;EAClC;EACAC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,OAAO,CAAC;AAClC;AAEA,MAAMI,qBAAoB,GAAKJ,OAAO,IAAK;EACzC;EACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,OAAO,CAAC;AAC3C;AAEA,MAAMK,aAAY,GAAIA,CAAA,KAAM;EAC1B;EACAJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;AAC/B;AAEA,eAAe;EACbR,IAAI,EAAE,gBAAgB;EACtBY,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAIA,CAAA,EAAK;IAEP,MAAMC,KAAI,GAAItB,GAAG,CAAC,EAAE;IACpB,MAAMuB,OAAM,GAAI,CACd;MACEnB,IAAI,EAAE,MAAM;MACZoB,KAAK,EAAE,OAAO;MACdC,KAAK,EAAE,MAAM;MACbC,KAAK,EAAEC,GAAE,IAAKA,GAAG,CAACvB;IACpB,CAAC,EACD;MAAEA,IAAI,EAAE,WAAW;MAAEqB,KAAK,EAAE,QAAQ;MAAED,KAAK,EAAE,WAAW;MAAEE,KAAK,EAAE;IAAW,CAAC,EAC7E;MAAEtB,IAAI,EAAE,OAAO;MAAEqB,KAAK,EAAE,QAAQ;MAAED,KAAK,EAAE,OAAO;MAAEE,KAAK,EAAE;IAAO,CAAC,EACjE;MAAEtB,IAAI,EAAE,UAAU;MAAEqB,KAAK,EAAE,QAAQ;MAAED,KAAK,EAAE,UAAU;MAAEE,KAAK,EAAE;IAAW,CAAC,EAC3E;MAAEtB,IAAI,EAAE,KAAK;MAAEqB,KAAK,EAAE,QAAQ;MAAED,KAAK,EAAE,KAAK;MAAEE,KAAK,EAAE;IAAK,EAC5D;IAEAzB,SAAS,CAAC,MAAM;MACd2B,QAAQ,CAAC;IACX,CAAC;IAED,MAAMA,QAAO,GAAI,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAM3B,GAAG,CAAC4B,GAAG,CAAC,EAAE;QACjCnB,OAAO,CAACC,GAAG,CAACiB,QAAQ,CAAC;MACvB,EAAE,OAAOE,KAAK,EAAE;QACdpB,OAAO,CAACC,GAAG,CAAC,uCAAsC,GAAImB,KAAK,CAAC;MAC9D;IACF;IAGA,OAAO;MACLC,cAAc,EAAEhC,GAAG,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;MACtEuB,OAAO;MACPpB,IAAI;MACJM,aAAa;MACbI,cAAc;MACdC,qBAAqB;MACrBC,aAAa;MACba,QAAQ;MACRN;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}