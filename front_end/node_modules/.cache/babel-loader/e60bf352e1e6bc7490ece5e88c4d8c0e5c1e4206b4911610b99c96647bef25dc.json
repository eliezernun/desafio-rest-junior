{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, ref, computed, watch, onBeforeUpdate, onUpdated, onBeforeUnmount, nextTick, getCurrentInstance } from 'vue';\nimport QField from '../field/QField.js';\nimport QIcon from '../icon/QIcon.js';\nimport QChip from '../chip/QChip.js';\nimport QItem from '../item/QItem.js';\nimport QItemSection from '../item/QItemSection.js';\nimport QItemLabel from '../item/QItemLabel.js';\nimport QMenu from '../menu/QMenu.js';\nimport QDialog from '../dialog/QDialog.js';\nimport useField, { useFieldState, useFieldProps, useFieldEmits, fieldValueIsFilled } from '../../composables/private/use-field.js';\nimport { useVirtualScroll, useVirtualScrollProps } from '../virtual-scroll/use-virtual-scroll.js';\nimport { useFormProps, useFormInputNameAttr } from '../../composables/private/use-form.js';\nimport useKeyComposition from '../../composables/private/use-key-composition.js';\nimport { createComponent } from '../../utils/private/create.js';\nimport { isDeepEqual } from '../../utils/is.js';\nimport { stop, prevent, stopAndPrevent } from '../../utils/event.js';\nimport { normalizeToInterval } from '../../utils/format.js';\nimport { shouldIgnoreKey, isKeyCode } from '../../utils/private/key-composition.js';\nimport { hMergeSlot } from '../../utils/private/render.js';\nconst validateNewValueMode = v => ['add', 'add-unique', 'toggle'].includes(v);\nconst reEscapeList = '.*+?^${}()|[]\\\\';\nconst fieldPropsList = Object.keys(useFieldProps);\nexport default createComponent({\n  name: 'QSelect',\n  inheritAttrs: false,\n  props: {\n    ...useVirtualScrollProps,\n    ...useFormProps,\n    ...useFieldProps,\n    modelValue: {\n      required: true\n    },\n    multiple: Boolean,\n    displayValue: [String, Number],\n    displayValueHtml: Boolean,\n    dropdownIcon: String,\n    options: {\n      type: Array,\n      default: () => []\n    },\n    optionValue: [Function, String],\n    optionLabel: [Function, String],\n    optionDisable: [Function, String],\n    hideSelected: Boolean,\n    hideDropdownIcon: Boolean,\n    fillInput: Boolean,\n    maxValues: [Number, String],\n    optionsDense: Boolean,\n    optionsDark: {\n      type: Boolean,\n      default: null\n    },\n    optionsSelectedClass: String,\n    optionsHtml: Boolean,\n    optionsCover: Boolean,\n    menuShrink: Boolean,\n    menuAnchor: String,\n    menuSelf: String,\n    menuOffset: Array,\n    popupContentClass: String,\n    popupContentStyle: [String, Array, Object],\n    useInput: Boolean,\n    useChips: Boolean,\n    newValueMode: {\n      type: String,\n      validator: validateNewValueMode\n    },\n    mapOptions: Boolean,\n    emitValue: Boolean,\n    inputDebounce: {\n      type: [Number, String],\n      default: 500\n    },\n    inputClass: [Array, String, Object],\n    inputStyle: [Array, String, Object],\n    tabindex: {\n      type: [String, Number],\n      default: 0\n    },\n    autocomplete: String,\n    transitionShow: String,\n    transitionHide: String,\n    transitionDuration: [String, Number],\n    behavior: {\n      type: String,\n      validator: v => ['default', 'menu', 'dialog'].includes(v),\n      default: 'default'\n    },\n    virtualScrollItemSize: {\n      type: [Number, String],\n      default: void 0\n    },\n    onNewValue: Function,\n    onFilter: Function\n  },\n  emits: [...useFieldEmits, 'add', 'remove', 'inputValue', 'newValue', 'keyup', 'keypress', 'keydown', 'filterAbort'],\n  setup(props, {\n    slots,\n    emit\n  }) {\n    const {\n      proxy\n    } = getCurrentInstance();\n    const {\n      $q\n    } = proxy;\n    const menu = ref(false);\n    const dialog = ref(false);\n    const optionIndex = ref(-1);\n    const inputValue = ref('');\n    const dialogFieldFocused = ref(false);\n    const innerLoadingIndicator = ref(false);\n    let filterTimer = null,\n      inputValueTimer = null,\n      innerValueCache,\n      hasDialog,\n      userInputValue,\n      filterId = null,\n      defaultInputValue,\n      transitionShowComputed,\n      searchBuffer,\n      searchBufferExp;\n    const inputRef = ref(null);\n    const targetRef = ref(null);\n    const menuRef = ref(null);\n    const dialogRef = ref(null);\n    const menuContentRef = ref(null);\n    const nameProp = useFormInputNameAttr(props);\n    const onComposition = useKeyComposition(onInput);\n    const virtualScrollLength = computed(() => Array.isArray(props.options) ? props.options.length : 0);\n    const virtualScrollItemSizeComputed = computed(() => props.virtualScrollItemSize === void 0 ? props.optionsDense === true ? 24 : 48 : props.virtualScrollItemSize);\n    const {\n      virtualScrollSliceRange,\n      virtualScrollSliceSizeComputed,\n      localResetVirtualScroll,\n      padVirtualScroll,\n      onVirtualScrollEvt,\n      scrollTo,\n      setVirtualScrollSize\n    } = useVirtualScroll({\n      virtualScrollLength,\n      getVirtualScrollTarget,\n      getVirtualScrollEl,\n      virtualScrollItemSizeComputed\n    });\n    const state = useFieldState();\n    const innerValue = computed(() => {\n      const mapNull = props.mapOptions === true && props.multiple !== true,\n        val = props.modelValue !== void 0 && (props.modelValue !== null || mapNull === true) ? props.multiple === true && Array.isArray(props.modelValue) ? props.modelValue : [props.modelValue] : [];\n      if (props.mapOptions === true && Array.isArray(props.options) === true) {\n        const cache = props.mapOptions === true && innerValueCache !== void 0 ? innerValueCache : [];\n        const values = val.map(v => getOption(v, cache));\n        return props.modelValue === null && mapNull === true ? values.filter(v => v !== null) : values;\n      }\n      return val;\n    });\n    const innerFieldProps = computed(() => {\n      const acc = {};\n      fieldPropsList.forEach(key => {\n        const val = props[key];\n        if (val !== void 0) {\n          acc[key] = val;\n        }\n      });\n      return acc;\n    });\n    const isOptionsDark = computed(() => props.optionsDark === null ? state.isDark.value : props.optionsDark);\n    const hasValue = computed(() => fieldValueIsFilled(innerValue.value));\n    const computedInputClass = computed(() => {\n      let cls = 'q-field__input q-placeholder col';\n      if (props.hideSelected === true || innerValue.value.length === 0) {\n        return [cls, props.inputClass];\n      }\n      cls += ' q-field__input--padding';\n      return props.inputClass === void 0 ? cls : [cls, props.inputClass];\n    });\n    const menuContentClass = computed(() => (props.virtualScrollHorizontal === true ? 'q-virtual-scroll--horizontal' : '') + (props.popupContentClass ? ' ' + props.popupContentClass : ''));\n    const noOptions = computed(() => virtualScrollLength.value === 0);\n    const selectedString = computed(() => innerValue.value.map(opt => getOptionLabel.value(opt)).join(', '));\n    const ariaCurrentValue = computed(() => props.displayValue !== void 0 ? props.displayValue : selectedString.value);\n    const needsHtmlFn = computed(() => props.optionsHtml === true ? () => true : opt => opt !== void 0 && opt !== null && opt.html === true);\n    const valueAsHtml = computed(() => props.displayValueHtml === true || props.displayValue === void 0 && (props.optionsHtml === true || innerValue.value.some(needsHtmlFn.value)));\n    const tabindex = computed(() => state.focused.value === true ? props.tabindex : -1);\n    const comboboxAttrs = computed(() => {\n      const attrs = {\n        tabindex: props.tabindex,\n        role: 'combobox',\n        'aria-label': props.label,\n        'aria-readonly': props.readonly === true ? 'true' : 'false',\n        'aria-autocomplete': props.useInput === true ? 'list' : 'none',\n        'aria-expanded': menu.value === true ? 'true' : 'false',\n        'aria-controls': `${state.targetUid.value}_lb`\n      };\n      if (optionIndex.value >= 0) {\n        attrs['aria-activedescendant'] = `${state.targetUid.value}_${optionIndex.value}`;\n      }\n      return attrs;\n    });\n    const listboxAttrs = computed(() => ({\n      id: `${state.targetUid.value}_lb`,\n      role: 'listbox',\n      'aria-multiselectable': props.multiple === true ? 'true' : 'false'\n    }));\n    const selectedScope = computed(() => {\n      return innerValue.value.map((opt, i) => ({\n        index: i,\n        opt,\n        html: needsHtmlFn.value(opt),\n        selected: true,\n        removeAtIndex: removeAtIndexAndFocus,\n        toggleOption,\n        tabindex: tabindex.value\n      }));\n    });\n    const optionScope = computed(() => {\n      if (virtualScrollLength.value === 0) {\n        return [];\n      }\n      const {\n        from,\n        to\n      } = virtualScrollSliceRange.value;\n      return props.options.slice(from, to).map((opt, i) => {\n        const disable = isOptionDisabled.value(opt) === true;\n        const active = isOptionSelected(opt) === true;\n        const index = from + i;\n        const itemProps = {\n          clickable: true,\n          active,\n          activeClass: computedOptionsSelectedClass.value,\n          manualFocus: true,\n          focused: false,\n          disable,\n          tabindex: -1,\n          dense: props.optionsDense,\n          dark: isOptionsDark.value,\n          role: 'option',\n          'aria-selected': active === true ? 'true' : 'false',\n          id: `${state.targetUid.value}_${index}`,\n          onClick: () => {\n            toggleOption(opt);\n          }\n        };\n        if (disable !== true) {\n          optionIndex.value === index && (itemProps.focused = true);\n          if ($q.platform.is.desktop === true) {\n            itemProps.onMousemove = () => {\n              menu.value === true && setOptionIndex(index);\n            };\n          }\n        }\n        return {\n          index,\n          opt,\n          html: needsHtmlFn.value(opt),\n          label: getOptionLabel.value(opt),\n          selected: itemProps.active,\n          focused: itemProps.focused,\n          toggleOption,\n          setOptionIndex,\n          itemProps\n        };\n      });\n    });\n    const dropdownArrowIcon = computed(() => props.dropdownIcon !== void 0 ? props.dropdownIcon : $q.iconSet.arrow.dropdown);\n    const squaredMenu = computed(() => props.optionsCover === false && props.outlined !== true && props.standout !== true && props.borderless !== true && props.rounded !== true);\n    const computedOptionsSelectedClass = computed(() => props.optionsSelectedClass !== void 0 ? props.optionsSelectedClass : props.color !== void 0 ? `text-${props.color}` : '');\n\n    // returns method to get value of an option;\n    // takes into account 'option-value' prop\n    const getOptionValue = computed(() => getPropValueFn(props.optionValue, 'value'));\n\n    // returns method to get label of an option;\n    // takes into account 'option-label' prop\n    const getOptionLabel = computed(() => getPropValueFn(props.optionLabel, 'label'));\n\n    // returns method to tell if an option is disabled;\n    // takes into account 'option-disable' prop\n    const isOptionDisabled = computed(() => getPropValueFn(props.optionDisable, 'disable'));\n    const innerOptionsValue = computed(() => innerValue.value.map(opt => getOptionValue.value(opt)));\n    const inputControlEvents = computed(() => {\n      const evt = {\n        onInput,\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        onChange: onComposition,\n        onKeydown: onTargetKeydown,\n        onKeyup: onTargetAutocomplete,\n        onKeypress: onTargetKeypress,\n        onFocus: selectInputText,\n        onClick(e) {\n          hasDialog === true && stop(e);\n        }\n      };\n      evt.onCompositionstart = evt.onCompositionupdate = evt.onCompositionend = onComposition;\n      return evt;\n    });\n    watch(innerValue, val => {\n      innerValueCache = val;\n      if (props.useInput === true && props.fillInput === true && props.multiple !== true\n      // Prevent re-entering in filter while filtering\n      // Also prevent clearing inputValue while filtering\n      && state.innerLoading.value !== true && (dialog.value !== true && menu.value !== true || hasValue.value !== true)) {\n        userInputValue !== true && resetInputValue();\n        if (dialog.value === true || menu.value === true) {\n          filter('');\n        }\n      }\n    }, {\n      immediate: true\n    });\n    watch(() => props.fillInput, resetInputValue);\n    watch(menu, updateMenu);\n    watch(virtualScrollLength, rerenderMenu);\n    function getEmittingOptionValue(opt) {\n      return props.emitValue === true ? getOptionValue.value(opt) : opt;\n    }\n    function removeAtIndex(index) {\n      if (index > -1 && index < innerValue.value.length) {\n        if (props.multiple === true) {\n          const model = props.modelValue.slice();\n          emit('remove', {\n            index,\n            value: model.splice(index, 1)[0]\n          });\n          emit('update:modelValue', model);\n        } else {\n          emit('update:modelValue', null);\n        }\n      }\n    }\n    function removeAtIndexAndFocus(index) {\n      removeAtIndex(index);\n      state.focus();\n    }\n    function add(opt, unique) {\n      const val = getEmittingOptionValue(opt);\n      if (props.multiple !== true) {\n        props.fillInput === true && updateInputValue(getOptionLabel.value(opt), true, true);\n        emit('update:modelValue', val);\n        return;\n      }\n      if (innerValue.value.length === 0) {\n        emit('add', {\n          index: 0,\n          value: val\n        });\n        emit('update:modelValue', props.multiple === true ? [val] : val);\n        return;\n      }\n      if (unique === true && isOptionSelected(opt) === true) {\n        return;\n      }\n      if (props.maxValues !== void 0 && props.modelValue.length >= props.maxValues) {\n        return;\n      }\n      const model = props.modelValue.slice();\n      emit('add', {\n        index: model.length,\n        value: val\n      });\n      model.push(val);\n      emit('update:modelValue', model);\n    }\n    function toggleOption(opt, keepOpen) {\n      if (state.editable.value !== true || opt === void 0 || isOptionDisabled.value(opt) === true) {\n        return;\n      }\n      const optValue = getOptionValue.value(opt);\n      if (props.multiple !== true) {\n        if (keepOpen !== true) {\n          updateInputValue(props.fillInput === true ? getOptionLabel.value(opt) : '', true, true);\n          hidePopup();\n        }\n        targetRef.value !== null && targetRef.value.focus();\n        if (innerValue.value.length === 0 || isDeepEqual(getOptionValue.value(innerValue.value[0]), optValue) !== true) {\n          emit('update:modelValue', props.emitValue === true ? optValue : opt);\n        }\n        return;\n      }\n      (hasDialog !== true || dialogFieldFocused.value === true) && state.focus();\n      selectInputText();\n      if (innerValue.value.length === 0) {\n        const val = props.emitValue === true ? optValue : opt;\n        emit('add', {\n          index: 0,\n          value: val\n        });\n        emit('update:modelValue', props.multiple === true ? [val] : val);\n        return;\n      }\n      const model = props.modelValue.slice(),\n        index = innerOptionsValue.value.findIndex(v => isDeepEqual(v, optValue));\n      if (index > -1) {\n        emit('remove', {\n          index,\n          value: model.splice(index, 1)[0]\n        });\n      } else {\n        if (props.maxValues !== void 0 && model.length >= props.maxValues) {\n          return;\n        }\n        const val = props.emitValue === true ? optValue : opt;\n        emit('add', {\n          index: model.length,\n          value: val\n        });\n        model.push(val);\n      }\n      emit('update:modelValue', model);\n    }\n    function setOptionIndex(index) {\n      if ($q.platform.is.desktop !== true) {\n        return;\n      }\n      const val = index > -1 && index < virtualScrollLength.value ? index : -1;\n      if (optionIndex.value !== val) {\n        optionIndex.value = val;\n      }\n    }\n    function moveOptionSelection(offset = 1, skipInputValue) {\n      if (menu.value === true) {\n        let index = optionIndex.value;\n        do {\n          index = normalizeToInterval(index + offset, -1, virtualScrollLength.value - 1);\n        } while (index !== -1 && index !== optionIndex.value && isOptionDisabled.value(props.options[index]) === true);\n        if (optionIndex.value !== index) {\n          setOptionIndex(index);\n          scrollTo(index);\n          if (skipInputValue !== true && props.useInput === true && props.fillInput === true) {\n            setInputValue(index >= 0 ? getOptionLabel.value(props.options[index]) : defaultInputValue, true);\n          }\n        }\n      }\n    }\n    function getOption(value, valueCache) {\n      const fn = opt => isDeepEqual(getOptionValue.value(opt), value);\n      return props.options.find(fn) || valueCache.find(fn) || value;\n    }\n    function getPropValueFn(propValue, defaultVal) {\n      const val = propValue !== void 0 ? propValue : defaultVal;\n      return typeof val === 'function' ? val : opt => opt !== null && typeof opt === 'object' && val in opt ? opt[val] : opt;\n    }\n    function isOptionSelected(opt) {\n      const val = getOptionValue.value(opt);\n      return innerOptionsValue.value.find(v => isDeepEqual(v, val)) !== void 0;\n    }\n    function selectInputText(e) {\n      if (props.useInput === true && targetRef.value !== null && (e === void 0 || targetRef.value === e.target && e.target.value === selectedString.value)) {\n        targetRef.value.select();\n      }\n    }\n    function onTargetKeyup(e) {\n      // if ESC and we have an opened menu\n      // then stop propagation (might be caught by a QDialog\n      // and so it will also close the QDialog, which is wrong)\n      if (isKeyCode(e, 27) === true && menu.value === true) {\n        stop(e);\n        // on ESC we need to close the dialog also\n        hidePopup();\n        resetInputValue();\n      }\n      emit('keyup', e);\n    }\n    function onTargetAutocomplete(e) {\n      const {\n        value\n      } = e.target;\n      if (e.keyCode !== void 0) {\n        onTargetKeyup(e);\n        return;\n      }\n      e.target.value = '';\n      if (filterTimer !== null) {\n        clearTimeout(filterTimer);\n        filterTimer = null;\n      }\n      if (inputValueTimer !== null) {\n        clearTimeout(inputValueTimer);\n        inputValueTimer = null;\n      }\n      resetInputValue();\n      if (typeof value === 'string' && value.length !== 0) {\n        const needle = value.toLocaleLowerCase();\n        const findFn = extractFn => {\n          const option = props.options.find(opt => extractFn.value(opt).toLocaleLowerCase() === needle);\n          if (option === void 0) {\n            return false;\n          }\n          if (innerValue.value.indexOf(option) === -1) {\n            toggleOption(option);\n          } else {\n            hidePopup();\n          }\n          return true;\n        };\n        const fillFn = afterFilter => {\n          if (findFn(getOptionValue) === true) {\n            return;\n          }\n          if (findFn(getOptionLabel) === true || afterFilter === true) {\n            return;\n          }\n          filter(value, true, () => fillFn(true));\n        };\n        fillFn();\n      } else {\n        state.clearValue(e);\n      }\n    }\n    function onTargetKeypress(e) {\n      emit('keypress', e);\n    }\n    function onTargetKeydown(e) {\n      emit('keydown', e);\n      if (shouldIgnoreKey(e) === true) {\n        return;\n      }\n      const newValueModeValid = inputValue.value.length !== 0 && (props.newValueMode !== void 0 || props.onNewValue !== void 0);\n      const tabShouldSelect = e.shiftKey !== true && props.multiple !== true && (optionIndex.value > -1 || newValueModeValid === true);\n\n      // escape\n      if (e.keyCode === 27) {\n        prevent(e); // prevent clearing the inputValue\n        return;\n      }\n\n      // tab\n      if (e.keyCode === 9 && tabShouldSelect === false) {\n        closeMenu();\n        return;\n      }\n      if (e.target === void 0 || e.target.id !== state.targetUid.value || state.editable.value !== true) {\n        return;\n      }\n\n      // down\n      if (e.keyCode === 40 && state.innerLoading.value !== true && menu.value === false) {\n        stopAndPrevent(e);\n        showPopup();\n        return;\n      }\n\n      // backspace\n      if (e.keyCode === 8 && (props.useChips === true || props.clearable === true) && props.hideSelected !== true && inputValue.value.length === 0) {\n        if (props.multiple === true && Array.isArray(props.modelValue) === true) {\n          removeAtIndex(props.modelValue.length - 1);\n        } else if (props.multiple !== true && props.modelValue !== null) {\n          emit('update:modelValue', null);\n        }\n        return;\n      }\n\n      // home, end - 36, 35\n      if ((e.keyCode === 35 || e.keyCode === 36) && (typeof inputValue.value !== 'string' || inputValue.value.length === 0)) {\n        stopAndPrevent(e);\n        optionIndex.value = -1;\n        moveOptionSelection(e.keyCode === 36 ? 1 : -1, props.multiple);\n      }\n\n      // pg up, pg down - 33, 34\n      if ((e.keyCode === 33 || e.keyCode === 34) && virtualScrollSliceSizeComputed.value !== void 0) {\n        stopAndPrevent(e);\n        optionIndex.value = Math.max(-1, Math.min(virtualScrollLength.value, optionIndex.value + (e.keyCode === 33 ? -1 : 1) * virtualScrollSliceSizeComputed.value.view));\n        moveOptionSelection(e.keyCode === 33 ? 1 : -1, props.multiple);\n      }\n\n      // up, down\n      if (e.keyCode === 38 || e.keyCode === 40) {\n        stopAndPrevent(e);\n        moveOptionSelection(e.keyCode === 38 ? -1 : 1, props.multiple);\n      }\n      const optionsLength = virtualScrollLength.value;\n\n      // clear search buffer if expired\n      if (searchBuffer === void 0 || searchBufferExp < Date.now()) {\n        searchBuffer = '';\n      }\n\n      // keyboard search when not having use-input\n      if (optionsLength > 0 && props.useInput !== true && e.key !== void 0 && e.key.length === 1 // printable char\n      && e.altKey === false // not kbd shortcut\n      && e.ctrlKey === false // not kbd shortcut\n      && e.metaKey === false // not kbd shortcut, especially on macOS with Command key\n      && (e.keyCode !== 32 || searchBuffer.length !== 0) // space in middle of search\n      ) {\n        menu.value !== true && showPopup(e);\n        const char = e.key.toLocaleLowerCase(),\n          keyRepeat = searchBuffer.length === 1 && searchBuffer[0] === char;\n        searchBufferExp = Date.now() + 1500;\n        if (keyRepeat === false) {\n          stopAndPrevent(e);\n          searchBuffer += char;\n        }\n        const searchRe = new RegExp('^' + searchBuffer.split('').map(l => reEscapeList.indexOf(l) > -1 ? '\\\\' + l : l).join('.*'), 'i');\n        let index = optionIndex.value;\n        if (keyRepeat === true || index < 0 || searchRe.test(getOptionLabel.value(props.options[index])) !== true) {\n          do {\n            index = normalizeToInterval(index + 1, -1, optionsLength - 1);\n          } while (index !== optionIndex.value && (isOptionDisabled.value(props.options[index]) === true || searchRe.test(getOptionLabel.value(props.options[index])) !== true));\n        }\n        if (optionIndex.value !== index) {\n          nextTick(() => {\n            setOptionIndex(index);\n            scrollTo(index);\n            if (index >= 0 && props.useInput === true && props.fillInput === true) {\n              setInputValue(getOptionLabel.value(props.options[index]), true);\n            }\n          });\n        }\n        return;\n      }\n\n      // enter, space (when not using use-input and not in search), or tab (when not using multiple and option selected)\n      // same target is checked above\n      if (e.keyCode !== 13 && (e.keyCode !== 32 || props.useInput === true || searchBuffer !== '') && (e.keyCode !== 9 || tabShouldSelect === false)) {\n        return;\n      }\n      e.keyCode !== 9 && stopAndPrevent(e);\n      if (optionIndex.value > -1 && optionIndex.value < optionsLength) {\n        toggleOption(props.options[optionIndex.value]);\n        return;\n      }\n      if (newValueModeValid === true) {\n        const done = (val, mode) => {\n          if (mode) {\n            if (validateNewValueMode(mode) !== true) {\n              return;\n            }\n          } else {\n            mode = props.newValueMode;\n          }\n          updateInputValue('', props.multiple !== true, true);\n          if (val === void 0 || val === null) {\n            return;\n          }\n          const fn = mode === 'toggle' ? toggleOption : add;\n          fn(val, mode === 'add-unique');\n          if (props.multiple !== true) {\n            targetRef.value !== null && targetRef.value.focus();\n            hidePopup();\n          }\n        };\n        if (props.onNewValue !== void 0) {\n          emit('newValue', inputValue.value, done);\n        } else {\n          done(inputValue.value);\n        }\n        if (props.multiple !== true) {\n          return;\n        }\n      }\n      if (menu.value === true) {\n        closeMenu();\n      } else if (state.innerLoading.value !== true) {\n        showPopup();\n      }\n    }\n    function getVirtualScrollEl() {\n      return hasDialog === true ? menuContentRef.value : menuRef.value !== null && menuRef.value.contentEl !== null ? menuRef.value.contentEl : void 0;\n    }\n    function getVirtualScrollTarget() {\n      return getVirtualScrollEl();\n    }\n    function getSelection() {\n      if (props.hideSelected === true) {\n        return [];\n      }\n      if (slots['selected-item'] !== void 0) {\n        return selectedScope.value.map(scope => slots['selected-item'](scope)).slice();\n      }\n      if (slots.selected !== void 0) {\n        return [].concat(slots.selected());\n      }\n      if (props.useChips === true) {\n        return selectedScope.value.map((scope, i) => h(QChip, {\n          key: 'option-' + i,\n          removable: state.editable.value === true && isOptionDisabled.value(scope.opt) !== true,\n          dense: true,\n          textColor: props.color,\n          tabindex: tabindex.value,\n          onRemove() {\n            scope.removeAtIndex(i);\n          }\n        }, () => h('span', {\n          class: 'ellipsis',\n          [scope.html === true ? 'innerHTML' : 'textContent']: getOptionLabel.value(scope.opt)\n        })));\n      }\n      return [h('span', {\n        [valueAsHtml.value === true ? 'innerHTML' : 'textContent']: ariaCurrentValue.value\n      })];\n    }\n    function getAllOptions() {\n      if (noOptions.value === true) {\n        return slots['no-option'] !== void 0 ? slots['no-option']({\n          inputValue: inputValue.value\n        }) : void 0;\n      }\n      const fn = slots.option !== void 0 ? slots.option : scope => {\n        return h(QItem, {\n          key: scope.index,\n          ...scope.itemProps\n        }, () => {\n          return h(QItemSection, () => h(QItemLabel, () => h('span', {\n            [scope.html === true ? 'innerHTML' : 'textContent']: scope.label\n          })));\n        });\n      };\n      let options = padVirtualScroll('div', optionScope.value.map(fn));\n      if (slots['before-options'] !== void 0) {\n        options = slots['before-options']().concat(options);\n      }\n      return hMergeSlot(slots['after-options'], options);\n    }\n    function getInput(fromDialog, isTarget) {\n      const attrs = isTarget === true ? {\n        ...comboboxAttrs.value,\n        ...state.splitAttrs.attributes.value\n      } : void 0;\n      const data = {\n        ref: isTarget === true ? targetRef : void 0,\n        key: 'i_t',\n        class: computedInputClass.value,\n        style: props.inputStyle,\n        value: inputValue.value !== void 0 ? inputValue.value : '',\n        // required for Android in order to show ENTER key when in form\n        type: 'search',\n        ...attrs,\n        id: isTarget === true ? state.targetUid.value : void 0,\n        maxlength: props.maxlength,\n        autocomplete: props.autocomplete,\n        'data-autofocus': fromDialog === true || props.autofocus === true || void 0,\n        disabled: props.disable === true,\n        readonly: props.readonly === true,\n        ...inputControlEvents.value\n      };\n      if (fromDialog !== true && hasDialog === true) {\n        if (Array.isArray(data.class) === true) {\n          data.class = [...data.class, 'no-pointer-events'];\n        } else {\n          data.class += ' no-pointer-events';\n        }\n      }\n      return h('input', data);\n    }\n    function onInput(e) {\n      if (filterTimer !== null) {\n        clearTimeout(filterTimer);\n        filterTimer = null;\n      }\n      if (inputValueTimer !== null) {\n        clearTimeout(inputValueTimer);\n        inputValueTimer = null;\n      }\n      if (e && e.target && e.target.qComposing === true) {\n        return;\n      }\n      setInputValue(e.target.value || '');\n      // mark it here as user input so that if updateInputValue is called\n      // before filter is called the indicator is reset\n      userInputValue = true;\n      defaultInputValue = inputValue.value;\n      if (state.focused.value !== true && (hasDialog !== true || dialogFieldFocused.value === true)) {\n        state.focus();\n      }\n      if (props.onFilter !== void 0) {\n        filterTimer = setTimeout(() => {\n          filterTimer = null;\n          filter(inputValue.value);\n        }, props.inputDebounce);\n      }\n    }\n    function setInputValue(val, emitImmediately) {\n      if (inputValue.value !== val) {\n        inputValue.value = val;\n        if (emitImmediately === true || props.inputDebounce === 0 || props.inputDebounce === '0') {\n          emit('inputValue', val);\n        } else {\n          inputValueTimer = setTimeout(() => {\n            inputValueTimer = null;\n            emit('inputValue', val);\n          }, props.inputDebounce);\n        }\n      }\n    }\n    function updateInputValue(val, noFiltering, internal) {\n      userInputValue = internal !== true;\n      if (props.useInput === true) {\n        setInputValue(val, true);\n        if (noFiltering === true || internal !== true) {\n          defaultInputValue = val;\n        }\n        noFiltering !== true && filter(val);\n      }\n    }\n    function filter(val, keepClosed, afterUpdateFn) {\n      if (props.onFilter === void 0 || keepClosed !== true && state.focused.value !== true) {\n        return;\n      }\n      if (state.innerLoading.value === true) {\n        emit('filterAbort');\n      } else {\n        state.innerLoading.value = true;\n        innerLoadingIndicator.value = true;\n      }\n      if (val !== '' && props.multiple !== true && innerValue.value.length !== 0 && userInputValue !== true && val === getOptionLabel.value(innerValue.value[0])) {\n        val = '';\n      }\n      const localFilterId = setTimeout(() => {\n        menu.value === true && (menu.value = false);\n      }, 10);\n      filterId !== null && clearTimeout(filterId);\n      filterId = localFilterId;\n      emit('filter', val, (fn, afterFn) => {\n        if ((keepClosed === true || state.focused.value === true) && filterId === localFilterId) {\n          clearTimeout(filterId);\n          typeof fn === 'function' && fn();\n\n          // hide indicator to allow arrow to animate\n          innerLoadingIndicator.value = false;\n          nextTick(() => {\n            state.innerLoading.value = false;\n            if (state.editable.value === true) {\n              if (keepClosed === true) {\n                menu.value === true && hidePopup();\n              } else if (menu.value === true) {\n                updateMenu(true);\n              } else {\n                menu.value = true;\n              }\n            }\n            typeof afterFn === 'function' && nextTick(() => {\n              afterFn(proxy);\n            });\n            typeof afterUpdateFn === 'function' && nextTick(() => {\n              afterUpdateFn(proxy);\n            });\n          });\n        }\n      }, () => {\n        if (state.focused.value === true && filterId === localFilterId) {\n          clearTimeout(filterId);\n          state.innerLoading.value = false;\n          innerLoadingIndicator.value = false;\n        }\n        menu.value === true && (menu.value = false);\n      });\n    }\n    function getMenu() {\n      return h(QMenu, {\n        ref: menuRef,\n        class: menuContentClass.value,\n        style: props.popupContentStyle,\n        modelValue: menu.value,\n        fit: props.menuShrink !== true,\n        cover: props.optionsCover === true && noOptions.value !== true && props.useInput !== true,\n        anchor: props.menuAnchor,\n        self: props.menuSelf,\n        offset: props.menuOffset,\n        dark: isOptionsDark.value,\n        noParentEvent: true,\n        noRefocus: true,\n        noFocus: true,\n        square: squaredMenu.value,\n        transitionShow: props.transitionShow,\n        transitionHide: props.transitionHide,\n        transitionDuration: props.transitionDuration,\n        separateClosePopup: true,\n        ...listboxAttrs.value,\n        onScrollPassive: onVirtualScrollEvt,\n        onBeforeShow: onControlPopupShow,\n        onBeforeHide: onMenuBeforeHide,\n        onShow: onMenuShow\n      }, getAllOptions);\n    }\n    function onMenuBeforeHide(e) {\n      onControlPopupHide(e);\n      closeMenu();\n    }\n    function onMenuShow() {\n      setVirtualScrollSize();\n    }\n    function onDialogFieldFocus(e) {\n      stop(e);\n      targetRef.value !== null && targetRef.value.focus();\n      dialogFieldFocused.value = true;\n      window.scrollTo(window.pageXOffset || window.scrollX || document.body.scrollLeft || 0, 0);\n    }\n    function onDialogFieldBlur(e) {\n      stop(e);\n      nextTick(() => {\n        dialogFieldFocused.value = false;\n      });\n    }\n    function getDialog() {\n      const content = [h(QField, {\n        class: `col-auto ${state.fieldClass.value}`,\n        ...innerFieldProps.value,\n        for: state.targetUid.value,\n        dark: isOptionsDark.value,\n        square: true,\n        loading: innerLoadingIndicator.value,\n        itemAligned: false,\n        filled: true,\n        stackLabel: inputValue.value.length !== 0,\n        ...state.splitAttrs.listeners.value,\n        onFocus: onDialogFieldFocus,\n        onBlur: onDialogFieldBlur\n      }, {\n        ...slots,\n        rawControl: () => state.getControl(true),\n        before: void 0,\n        after: void 0\n      })];\n      menu.value === true && content.push(h('div', {\n        ref: menuContentRef,\n        class: menuContentClass.value + ' scroll',\n        style: props.popupContentStyle,\n        ...listboxAttrs.value,\n        onClick: prevent,\n        onScrollPassive: onVirtualScrollEvt\n      }, getAllOptions()));\n      return h(QDialog, {\n        ref: dialogRef,\n        modelValue: dialog.value,\n        position: props.useInput === true ? 'top' : void 0,\n        transitionShow: transitionShowComputed,\n        transitionHide: props.transitionHide,\n        transitionDuration: props.transitionDuration,\n        onBeforeShow: onControlPopupShow,\n        onBeforeHide: onDialogBeforeHide,\n        onHide: onDialogHide,\n        onShow: onDialogShow\n      }, () => h('div', {\n        class: 'q-select__dialog' + (isOptionsDark.value === true ? ' q-select__dialog--dark q-dark' : '') + (dialogFieldFocused.value === true ? ' q-select__dialog--focused' : '')\n      }, content));\n    }\n    function onDialogBeforeHide(e) {\n      onControlPopupHide(e);\n      if (dialogRef.value !== null) {\n        dialogRef.value.__updateRefocusTarget(state.rootRef.value.querySelector('.q-field__native > [tabindex]:last-child'));\n      }\n      state.focused.value = false;\n    }\n    function onDialogHide(e) {\n      hidePopup();\n      state.focused.value === false && emit('blur', e);\n      resetInputValue();\n    }\n    function onDialogShow() {\n      const el = document.activeElement;\n      if ((el === null || el.id !== state.targetUid.value) && targetRef.value !== null && targetRef.value !== el) {\n        targetRef.value.focus();\n      }\n      setVirtualScrollSize();\n    }\n    function closeMenu() {\n      if (dialog.value === true) {\n        return;\n      }\n      optionIndex.value = -1;\n      if (menu.value === true) {\n        menu.value = false;\n      }\n      if (state.focused.value === false) {\n        if (filterId !== null) {\n          clearTimeout(filterId);\n          filterId = null;\n        }\n        if (state.innerLoading.value === true) {\n          emit('filterAbort');\n          state.innerLoading.value = false;\n          innerLoadingIndicator.value = false;\n        }\n      }\n    }\n    function showPopup(e) {\n      if (state.editable.value !== true) {\n        return;\n      }\n      if (hasDialog === true) {\n        state.onControlFocusin(e);\n        dialog.value = true;\n        nextTick(() => {\n          state.focus();\n        });\n      } else {\n        state.focus();\n      }\n      if (props.onFilter !== void 0) {\n        filter(inputValue.value);\n      } else if (noOptions.value !== true || slots['no-option'] !== void 0) {\n        menu.value = true;\n      }\n    }\n    function hidePopup() {\n      dialog.value = false;\n      closeMenu();\n    }\n    function resetInputValue() {\n      props.useInput === true && updateInputValue(props.multiple !== true && props.fillInput === true && innerValue.value.length !== 0 ? getOptionLabel.value(innerValue.value[0]) || '' : '', true, true);\n    }\n    function updateMenu(show) {\n      let optionIndex = -1;\n      if (show === true) {\n        if (innerValue.value.length !== 0) {\n          const val = getOptionValue.value(innerValue.value[0]);\n          optionIndex = props.options.findIndex(v => isDeepEqual(getOptionValue.value(v), val));\n        }\n        localResetVirtualScroll(optionIndex);\n      }\n      setOptionIndex(optionIndex);\n    }\n    function rerenderMenu(newLength, oldLength) {\n      if (menu.value === true && state.innerLoading.value === false) {\n        localResetVirtualScroll(-1, true);\n        nextTick(() => {\n          if (menu.value === true && state.innerLoading.value === false) {\n            if (newLength > oldLength) {\n              localResetVirtualScroll();\n            } else {\n              updateMenu(true);\n            }\n          }\n        });\n      }\n    }\n    function updateMenuPosition() {\n      if (dialog.value === false && menuRef.value !== null) {\n        menuRef.value.updatePosition();\n      }\n    }\n    function onControlPopupShow(e) {\n      e !== void 0 && stop(e);\n      emit('popupShow', e);\n      state.hasPopupOpen = true;\n      state.onControlFocusin(e);\n    }\n    function onControlPopupHide(e) {\n      e !== void 0 && stop(e);\n      emit('popupHide', e);\n      state.hasPopupOpen = false;\n      state.onControlFocusout(e);\n    }\n    function updatePreState() {\n      hasDialog = $q.platform.is.mobile !== true && props.behavior !== 'dialog' ? false : props.behavior !== 'menu' && (props.useInput === true ? slots['no-option'] !== void 0 || props.onFilter !== void 0 || noOptions.value === false : true);\n      transitionShowComputed = $q.platform.is.ios === true && hasDialog === true && props.useInput === true ? 'fade' : props.transitionShow;\n    }\n    onBeforeUpdate(updatePreState);\n    onUpdated(updateMenuPosition);\n    updatePreState();\n    onBeforeUnmount(() => {\n      filterTimer !== null && clearTimeout(filterTimer);\n      inputValueTimer !== null && clearTimeout(inputValueTimer);\n    });\n\n    // expose public methods\n    Object.assign(proxy, {\n      showPopup,\n      hidePopup,\n      removeAtIndex,\n      add,\n      toggleOption,\n      getOptionIndex: () => optionIndex.value,\n      setOptionIndex,\n      moveOptionSelection,\n      filter,\n      updateMenuPosition,\n      updateInputValue,\n      isOptionSelected,\n      getEmittingOptionValue,\n      isOptionDisabled: (...args) => isOptionDisabled.value.apply(null, args) === true,\n      getOptionValue: (...args) => getOptionValue.value.apply(null, args),\n      getOptionLabel: (...args) => getOptionLabel.value.apply(null, args)\n    });\n    Object.assign(state, {\n      innerValue,\n      fieldClass: computed(() => `q-select q-field--auto-height q-select--with${props.useInput !== true ? 'out' : ''}-input` + ` q-select--with${props.useChips !== true ? 'out' : ''}-chips` + ` q-select--${props.multiple === true ? 'multiple' : 'single'}`),\n      inputRef,\n      targetRef,\n      hasValue,\n      showPopup,\n      floatingLabel: computed(() => props.hideSelected !== true && hasValue.value === true || typeof inputValue.value === 'number' || inputValue.value.length !== 0 || fieldValueIsFilled(props.displayValue)),\n      getControlChild: () => {\n        if (state.editable.value !== false && (dialog.value === true // dialog always has menu displayed, so need to render it\n        || noOptions.value !== true || slots['no-option'] !== void 0)) {\n          return hasDialog === true ? getDialog() : getMenu();\n        } else if (state.hasPopupOpen === true) {\n          // explicitly set it otherwise TAB will not blur component\n          state.hasPopupOpen = false;\n        }\n      },\n      controlEvents: {\n        onFocusin(e) {\n          state.onControlFocusin(e);\n        },\n        onFocusout(e) {\n          state.onControlFocusout(e, () => {\n            resetInputValue();\n            closeMenu();\n          });\n        },\n        onClick(e) {\n          // label from QField will propagate click on the input\n          prevent(e);\n          if (hasDialog !== true && menu.value === true) {\n            closeMenu();\n            targetRef.value !== null && targetRef.value.focus();\n            return;\n          }\n          showPopup(e);\n        }\n      },\n      getControl: fromDialog => {\n        const child = getSelection();\n        const isTarget = fromDialog === true || dialog.value !== true || hasDialog !== true;\n        if (props.useInput === true) {\n          child.push(getInput(fromDialog, isTarget));\n        }\n        // there can be only one (when dialog is opened the control in dialog should be target)\n        else if (state.editable.value === true) {\n          const attrs = isTarget === true ? comboboxAttrs.value : void 0;\n          child.push(h('input', {\n            ref: isTarget === true ? targetRef : void 0,\n            key: 'd_t',\n            class: 'q-select__focus-target',\n            id: isTarget === true ? state.targetUid.value : void 0,\n            value: ariaCurrentValue.value,\n            readonly: true,\n            'data-autofocus': fromDialog === true || props.autofocus === true || void 0,\n            ...attrs,\n            onKeydown: onTargetKeydown,\n            onKeyup: onTargetKeyup,\n            onKeypress: onTargetKeypress\n          }));\n          if (isTarget === true && typeof props.autocomplete === 'string' && props.autocomplete.length !== 0) {\n            child.push(h('input', {\n              class: 'q-select__autocomplete-input',\n              autocomplete: props.autocomplete,\n              tabindex: -1,\n              onKeyup: onTargetAutocomplete\n            }));\n          }\n        }\n        if (nameProp.value !== void 0 && props.disable !== true && innerOptionsValue.value.length !== 0) {\n          const opts = innerOptionsValue.value.map(value => h('option', {\n            value,\n            selected: true\n          }));\n          child.push(h('select', {\n            class: 'hidden',\n            name: nameProp.value,\n            multiple: props.multiple\n          }, opts));\n        }\n        const attrs = props.useInput === true || isTarget !== true ? void 0 : state.splitAttrs.attributes.value;\n        return h('div', {\n          class: 'q-field__native row items-center',\n          ...attrs,\n          ...state.splitAttrs.listeners.value\n        }, child);\n      },\n      getInnerAppend: () => props.loading !== true && innerLoadingIndicator.value !== true && props.hideDropdownIcon !== true ? [h(QIcon, {\n        class: 'q-select__dropdown-icon' + (menu.value === true ? ' rotate-180' : ''),\n        name: dropdownArrowIcon.value\n      })] : null\n    });\n    return useField(state);\n  }\n});","map":{"version":3,"names":["h","ref","computed","watch","onBeforeUpdate","onUpdated","onBeforeUnmount","nextTick","getCurrentInstance","QField","QIcon","QChip","QItem","QItemSection","QItemLabel","QMenu","QDialog","useField","useFieldState","useFieldProps","useFieldEmits","fieldValueIsFilled","useVirtualScroll","useVirtualScrollProps","useFormProps","useFormInputNameAttr","useKeyComposition","createComponent","isDeepEqual","stop","prevent","stopAndPrevent","normalizeToInterval","shouldIgnoreKey","isKeyCode","hMergeSlot","validateNewValueMode","v","includes","reEscapeList","fieldPropsList","Object","keys","name","inheritAttrs","props","modelValue","required","multiple","Boolean","displayValue","String","Number","displayValueHtml","dropdownIcon","options","type","Array","default","optionValue","Function","optionLabel","optionDisable","hideSelected","hideDropdownIcon","fillInput","maxValues","optionsDense","optionsDark","optionsSelectedClass","optionsHtml","optionsCover","menuShrink","menuAnchor","menuSelf","menuOffset","popupContentClass","popupContentStyle","useInput","useChips","newValueMode","validator","mapOptions","emitValue","inputDebounce","inputClass","inputStyle","tabindex","autocomplete","transitionShow","transitionHide","transitionDuration","behavior","virtualScrollItemSize","onNewValue","onFilter","emits","setup","slots","emit","proxy","$q","menu","dialog","optionIndex","inputValue","dialogFieldFocused","innerLoadingIndicator","filterTimer","inputValueTimer","innerValueCache","hasDialog","userInputValue","filterId","defaultInputValue","transitionShowComputed","searchBuffer","searchBufferExp","inputRef","targetRef","menuRef","dialogRef","menuContentRef","nameProp","onComposition","onInput","virtualScrollLength","isArray","length","virtualScrollItemSizeComputed","virtualScrollSliceRange","virtualScrollSliceSizeComputed","localResetVirtualScroll","padVirtualScroll","onVirtualScrollEvt","scrollTo","setVirtualScrollSize","getVirtualScrollTarget","getVirtualScrollEl","state","innerValue","mapNull","val","cache","values","map","getOption","filter","innerFieldProps","acc","forEach","key","isOptionsDark","isDark","value","hasValue","computedInputClass","cls","menuContentClass","virtualScrollHorizontal","noOptions","selectedString","opt","getOptionLabel","join","ariaCurrentValue","needsHtmlFn","html","valueAsHtml","some","focused","comboboxAttrs","attrs","role","label","readonly","targetUid","listboxAttrs","id","selectedScope","i","index","selected","removeAtIndex","removeAtIndexAndFocus","toggleOption","optionScope","from","to","slice","disable","isOptionDisabled","active","isOptionSelected","itemProps","clickable","activeClass","computedOptionsSelectedClass","manualFocus","dense","dark","onClick","platform","is","desktop","onMousemove","setOptionIndex","dropdownArrowIcon","iconSet","arrow","dropdown","squaredMenu","outlined","standout","borderless","rounded","color","getOptionValue","getPropValueFn","innerOptionsValue","inputControlEvents","evt","onChange","onKeydown","onTargetKeydown","onKeyup","onTargetAutocomplete","onKeypress","onTargetKeypress","onFocus","selectInputText","e","onCompositionstart","onCompositionupdate","onCompositionend","innerLoading","resetInputValue","immediate","updateMenu","rerenderMenu","getEmittingOptionValue","model","splice","focus","add","unique","updateInputValue","push","keepOpen","editable","optValue","hidePopup","findIndex","moveOptionSelection","offset","skipInputValue","setInputValue","valueCache","fn","find","propValue","defaultVal","target","select","onTargetKeyup","keyCode","clearTimeout","needle","toLocaleLowerCase","findFn","extractFn","option","indexOf","fillFn","afterFilter","clearValue","newValueModeValid","tabShouldSelect","shiftKey","closeMenu","showPopup","clearable","Math","max","min","view","optionsLength","Date","now","altKey","ctrlKey","metaKey","char","keyRepeat","searchRe","RegExp","split","l","test","done","mode","contentEl","getSelection","scope","concat","removable","textColor","onRemove","class","getAllOptions","getInput","fromDialog","isTarget","splitAttrs","attributes","data","style","maxlength","autofocus","disabled","qComposing","setTimeout","emitImmediately","noFiltering","internal","keepClosed","afterUpdateFn","localFilterId","afterFn","getMenu","fit","cover","anchor","self","noParentEvent","noRefocus","noFocus","square","separateClosePopup","onScrollPassive","onBeforeShow","onControlPopupShow","onBeforeHide","onMenuBeforeHide","onShow","onMenuShow","onControlPopupHide","onDialogFieldFocus","window","pageXOffset","scrollX","document","body","scrollLeft","onDialogFieldBlur","getDialog","content","fieldClass","for","loading","itemAligned","filled","stackLabel","listeners","onBlur","rawControl","getControl","before","after","position","onDialogBeforeHide","onHide","onDialogHide","onDialogShow","__updateRefocusTarget","rootRef","querySelector","el","activeElement","onControlFocusin","show","newLength","oldLength","updateMenuPosition","updatePosition","hasPopupOpen","onControlFocusout","updatePreState","mobile","ios","assign","getOptionIndex","args","apply","floatingLabel","getControlChild","controlEvents","onFocusin","onFocusout","child","opts","getInnerAppend"],"sources":["C:/Users/PC01/Documents/Desafio_Eliezer_Embracon/front_end/desafio/node_modules/quasar/src/components/select/QSelect.js"],"sourcesContent":["import { h, ref, computed, watch, onBeforeUpdate, onUpdated, onBeforeUnmount, nextTick, getCurrentInstance } from 'vue'\n\nimport QField from '../field/QField.js'\nimport QIcon from '../icon/QIcon.js'\nimport QChip from '../chip/QChip.js'\n\nimport QItem from '../item/QItem.js'\nimport QItemSection from '../item/QItemSection.js'\nimport QItemLabel from '../item/QItemLabel.js'\n\nimport QMenu from '../menu/QMenu.js'\nimport QDialog from '../dialog/QDialog.js'\n\nimport useField, { useFieldState, useFieldProps, useFieldEmits, fieldValueIsFilled } from '../../composables/private/use-field.js'\nimport { useVirtualScroll, useVirtualScrollProps } from '../virtual-scroll/use-virtual-scroll.js'\nimport { useFormProps, useFormInputNameAttr } from '../../composables/private/use-form.js'\nimport useKeyComposition from '../../composables/private/use-key-composition.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { isDeepEqual } from '../../utils/is.js'\nimport { stop, prevent, stopAndPrevent } from '../../utils/event.js'\nimport { normalizeToInterval } from '../../utils/format.js'\nimport { shouldIgnoreKey, isKeyCode } from '../../utils/private/key-composition.js'\nimport { hMergeSlot } from '../../utils/private/render.js'\n\nconst validateNewValueMode = v => [ 'add', 'add-unique', 'toggle' ].includes(v)\nconst reEscapeList = '.*+?^${}()|[]\\\\'\nconst fieldPropsList = Object.keys(useFieldProps)\n\nexport default createComponent({\n  name: 'QSelect',\n\n  inheritAttrs: false,\n\n  props: {\n    ...useVirtualScrollProps,\n    ...useFormProps,\n    ...useFieldProps,\n\n    modelValue: {\n      required: true\n    },\n\n    multiple: Boolean,\n\n    displayValue: [ String, Number ],\n    displayValueHtml: Boolean,\n    dropdownIcon: String,\n\n    options: {\n      type: Array,\n      default: () => []\n    },\n\n    optionValue: [ Function, String ],\n    optionLabel: [ Function, String ],\n    optionDisable: [ Function, String ],\n\n    hideSelected: Boolean,\n    hideDropdownIcon: Boolean,\n    fillInput: Boolean,\n\n    maxValues: [ Number, String ],\n\n    optionsDense: Boolean,\n    optionsDark: {\n      type: Boolean,\n      default: null\n    },\n    optionsSelectedClass: String,\n    optionsHtml: Boolean,\n\n    optionsCover: Boolean,\n\n    menuShrink: Boolean,\n    menuAnchor: String,\n    menuSelf: String,\n    menuOffset: Array,\n\n    popupContentClass: String,\n    popupContentStyle: [ String, Array, Object ],\n\n    useInput: Boolean,\n    useChips: Boolean,\n\n    newValueMode: {\n      type: String,\n      validator: validateNewValueMode\n    },\n\n    mapOptions: Boolean,\n    emitValue: Boolean,\n\n    inputDebounce: {\n      type: [ Number, String ],\n      default: 500\n    },\n\n    inputClass: [ Array, String, Object ],\n    inputStyle: [ Array, String, Object ],\n\n    tabindex: {\n      type: [ String, Number ],\n      default: 0\n    },\n\n    autocomplete: String,\n\n    transitionShow: String,\n    transitionHide: String,\n    transitionDuration: [ String, Number ],\n\n    behavior: {\n      type: String,\n      validator: v => [ 'default', 'menu', 'dialog' ].includes(v),\n      default: 'default'\n    },\n\n    virtualScrollItemSize: {\n      type: [ Number, String ],\n      default: void 0\n    },\n\n    onNewValue: Function,\n    onFilter: Function\n  },\n\n  emits: [\n    ...useFieldEmits,\n    'add', 'remove', 'inputValue', 'newValue',\n    'keyup', 'keypress', 'keydown',\n    'filterAbort'\n  ],\n\n  setup (props, { slots, emit }) {\n    const { proxy } = getCurrentInstance()\n    const { $q } = proxy\n\n    const menu = ref(false)\n    const dialog = ref(false)\n    const optionIndex = ref(-1)\n    const inputValue = ref('')\n    const dialogFieldFocused = ref(false)\n    const innerLoadingIndicator = ref(false)\n\n    let filterTimer = null, inputValueTimer = null,\n      innerValueCache,\n      hasDialog, userInputValue, filterId = null, defaultInputValue,\n      transitionShowComputed, searchBuffer, searchBufferExp\n\n    const inputRef = ref(null)\n    const targetRef = ref(null)\n    const menuRef = ref(null)\n    const dialogRef = ref(null)\n    const menuContentRef = ref(null)\n\n    const nameProp = useFormInputNameAttr(props)\n\n    const onComposition = useKeyComposition(onInput)\n\n    const virtualScrollLength = computed(() => (\n      Array.isArray(props.options)\n        ? props.options.length\n        : 0\n    ))\n\n    const virtualScrollItemSizeComputed = computed(() => (\n      props.virtualScrollItemSize === void 0\n        ? (props.optionsDense === true ? 24 : 48)\n        : props.virtualScrollItemSize\n    ))\n\n    const {\n      virtualScrollSliceRange,\n      virtualScrollSliceSizeComputed,\n      localResetVirtualScroll,\n      padVirtualScroll,\n      onVirtualScrollEvt,\n      scrollTo,\n      setVirtualScrollSize\n    } = useVirtualScroll({\n      virtualScrollLength, getVirtualScrollTarget, getVirtualScrollEl,\n      virtualScrollItemSizeComputed\n    })\n\n    const state = useFieldState()\n\n    const innerValue = computed(() => {\n      const\n        mapNull = props.mapOptions === true && props.multiple !== true,\n        val = props.modelValue !== void 0 && (props.modelValue !== null || mapNull === true)\n          ? (props.multiple === true && Array.isArray(props.modelValue) ? props.modelValue : [ props.modelValue ])\n          : []\n\n      if (props.mapOptions === true && Array.isArray(props.options) === true) {\n        const cache = props.mapOptions === true && innerValueCache !== void 0\n          ? innerValueCache\n          : []\n        const values = val.map(v => getOption(v, cache))\n\n        return props.modelValue === null && mapNull === true\n          ? values.filter(v => v !== null)\n          : values\n      }\n\n      return val\n    })\n\n    const innerFieldProps = computed(() => {\n      const acc = {}\n      fieldPropsList.forEach(key => {\n        const val = props[ key ]\n        if (val !== void 0) {\n          acc[ key ] = val\n        }\n      })\n      return acc\n    })\n\n    const isOptionsDark = computed(() => (\n      props.optionsDark === null\n        ? state.isDark.value\n        : props.optionsDark\n    ))\n\n    const hasValue = computed(() => fieldValueIsFilled(innerValue.value))\n\n    const computedInputClass = computed(() => {\n      let cls = 'q-field__input q-placeholder col'\n\n      if (props.hideSelected === true || innerValue.value.length === 0) {\n        return [ cls, props.inputClass ]\n      }\n\n      cls += ' q-field__input--padding'\n\n      return props.inputClass === void 0\n        ? cls\n        : [ cls, props.inputClass ]\n    })\n\n    const menuContentClass = computed(() =>\n      (props.virtualScrollHorizontal === true ? 'q-virtual-scroll--horizontal' : '')\n      + (props.popupContentClass ? ' ' + props.popupContentClass : '')\n    )\n\n    const noOptions = computed(() => virtualScrollLength.value === 0)\n\n    const selectedString = computed(() =>\n      innerValue.value\n        .map(opt => getOptionLabel.value(opt))\n        .join(', ')\n    )\n\n    const ariaCurrentValue = computed(() => (props.displayValue !== void 0\n      ? props.displayValue\n      : selectedString.value\n    ))\n\n    const needsHtmlFn = computed(() => (\n      props.optionsHtml === true\n        ? () => true\n        : opt => opt !== void 0 && opt !== null && opt.html === true\n    ))\n\n    const valueAsHtml = computed(() => (\n      props.displayValueHtml === true || (\n        props.displayValue === void 0 && (\n          props.optionsHtml === true\n          || innerValue.value.some(needsHtmlFn.value)\n        )\n      )\n    ))\n\n    const tabindex = computed(() => (state.focused.value === true ? props.tabindex : -1))\n\n    const comboboxAttrs = computed(() => {\n      const attrs = {\n        tabindex: props.tabindex,\n        role: 'combobox',\n        'aria-label': props.label,\n        'aria-readonly': props.readonly === true ? 'true' : 'false',\n        'aria-autocomplete': props.useInput === true ? 'list' : 'none',\n        'aria-expanded': menu.value === true ? 'true' : 'false',\n        'aria-controls': `${ state.targetUid.value }_lb`\n      }\n\n      if (optionIndex.value >= 0) {\n        attrs[ 'aria-activedescendant' ] = `${ state.targetUid.value }_${ optionIndex.value }`\n      }\n\n      return attrs\n    })\n\n    const listboxAttrs = computed(() => ({\n      id: `${ state.targetUid.value }_lb`,\n      role: 'listbox',\n      'aria-multiselectable': props.multiple === true ? 'true' : 'false'\n    }))\n\n    const selectedScope = computed(() => {\n      return innerValue.value.map((opt, i) => ({\n        index: i,\n        opt,\n        html: needsHtmlFn.value(opt),\n        selected: true,\n        removeAtIndex: removeAtIndexAndFocus,\n        toggleOption,\n        tabindex: tabindex.value\n      }))\n    })\n\n    const optionScope = computed(() => {\n      if (virtualScrollLength.value === 0) {\n        return []\n      }\n\n      const { from, to } = virtualScrollSliceRange.value\n\n      return props.options.slice(from, to).map((opt, i) => {\n        const disable = isOptionDisabled.value(opt) === true\n        const active = isOptionSelected(opt) === true\n        const index = from + i\n\n        const itemProps = {\n          clickable: true,\n          active,\n          activeClass: computedOptionsSelectedClass.value,\n          manualFocus: true,\n          focused: false,\n          disable,\n          tabindex: -1,\n          dense: props.optionsDense,\n          dark: isOptionsDark.value,\n          role: 'option',\n          'aria-selected': active === true ? 'true' : 'false',\n          id: `${ state.targetUid.value }_${ index }`,\n          onClick: () => { toggleOption(opt) }\n        }\n\n        if (disable !== true) {\n          optionIndex.value === index && (itemProps.focused = true)\n\n          if ($q.platform.is.desktop === true) {\n            itemProps.onMousemove = () => { menu.value === true && setOptionIndex(index) }\n          }\n        }\n\n        return {\n          index,\n          opt,\n          html: needsHtmlFn.value(opt),\n          label: getOptionLabel.value(opt),\n          selected: itemProps.active,\n          focused: itemProps.focused,\n          toggleOption,\n          setOptionIndex,\n          itemProps\n        }\n      })\n    })\n\n    const dropdownArrowIcon = computed(() => (\n      props.dropdownIcon !== void 0\n        ? props.dropdownIcon\n        : $q.iconSet.arrow.dropdown\n    ))\n\n    const squaredMenu = computed(() =>\n      props.optionsCover === false\n      && props.outlined !== true\n      && props.standout !== true\n      && props.borderless !== true\n      && props.rounded !== true\n    )\n\n    const computedOptionsSelectedClass = computed(() => (\n      props.optionsSelectedClass !== void 0\n        ? props.optionsSelectedClass\n        : (props.color !== void 0 ? `text-${ props.color }` : '')\n    ))\n\n    // returns method to get value of an option;\n    // takes into account 'option-value' prop\n    const getOptionValue = computed(() => getPropValueFn(props.optionValue, 'value'))\n\n    // returns method to get label of an option;\n    // takes into account 'option-label' prop\n    const getOptionLabel = computed(() => getPropValueFn(props.optionLabel, 'label'))\n\n    // returns method to tell if an option is disabled;\n    // takes into account 'option-disable' prop\n    const isOptionDisabled = computed(() => getPropValueFn(props.optionDisable, 'disable'))\n\n    const innerOptionsValue = computed(() => innerValue.value.map(opt => getOptionValue.value(opt)))\n\n    const inputControlEvents = computed(() => {\n      const evt = {\n        onInput,\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        onChange: onComposition,\n        onKeydown: onTargetKeydown,\n        onKeyup: onTargetAutocomplete,\n        onKeypress: onTargetKeypress,\n        onFocus: selectInputText,\n        onClick (e) { hasDialog === true && stop(e) }\n      }\n\n      evt.onCompositionstart = evt.onCompositionupdate = evt.onCompositionend = onComposition\n\n      return evt\n    })\n\n    watch(innerValue, val => {\n      innerValueCache = val\n\n      if (\n        props.useInput === true\n        && props.fillInput === true\n        && props.multiple !== true\n        // Prevent re-entering in filter while filtering\n        // Also prevent clearing inputValue while filtering\n        && state.innerLoading.value !== true\n        && ((dialog.value !== true && menu.value !== true) || hasValue.value !== true)\n      ) {\n        userInputValue !== true && resetInputValue()\n        if (dialog.value === true || menu.value === true) {\n          filter('')\n        }\n      }\n    }, { immediate: true })\n\n    watch(() => props.fillInput, resetInputValue)\n\n    watch(menu, updateMenu)\n\n    watch(virtualScrollLength, rerenderMenu)\n\n    function getEmittingOptionValue (opt) {\n      return props.emitValue === true\n        ? getOptionValue.value(opt)\n        : opt\n    }\n\n    function removeAtIndex (index) {\n      if (index > -1 && index < innerValue.value.length) {\n        if (props.multiple === true) {\n          const model = props.modelValue.slice()\n          emit('remove', { index, value: model.splice(index, 1)[ 0 ] })\n          emit('update:modelValue', model)\n        }\n        else {\n          emit('update:modelValue', null)\n        }\n      }\n    }\n\n    function removeAtIndexAndFocus (index) {\n      removeAtIndex(index)\n      state.focus()\n    }\n\n    function add (opt, unique) {\n      const val = getEmittingOptionValue(opt)\n\n      if (props.multiple !== true) {\n        props.fillInput === true && updateInputValue(\n          getOptionLabel.value(opt),\n          true,\n          true\n        )\n\n        emit('update:modelValue', val)\n        return\n      }\n\n      if (innerValue.value.length === 0) {\n        emit('add', { index: 0, value: val })\n        emit('update:modelValue', props.multiple === true ? [ val ] : val)\n        return\n      }\n\n      if (unique === true && isOptionSelected(opt) === true) {\n        return\n      }\n\n      if (props.maxValues !== void 0 && props.modelValue.length >= props.maxValues) {\n        return\n      }\n\n      const model = props.modelValue.slice()\n\n      emit('add', { index: model.length, value: val })\n      model.push(val)\n      emit('update:modelValue', model)\n    }\n\n    function toggleOption (opt, keepOpen) {\n      if (state.editable.value !== true || opt === void 0 || isOptionDisabled.value(opt) === true) {\n        return\n      }\n\n      const optValue = getOptionValue.value(opt)\n\n      if (props.multiple !== true) {\n        if (keepOpen !== true) {\n          updateInputValue(\n            props.fillInput === true ? getOptionLabel.value(opt) : '',\n            true,\n            true\n          )\n\n          hidePopup()\n        }\n\n        targetRef.value !== null && targetRef.value.focus()\n\n        if (\n          innerValue.value.length === 0\n          || isDeepEqual(getOptionValue.value(innerValue.value[ 0 ]), optValue) !== true\n        ) {\n          emit('update:modelValue', props.emitValue === true ? optValue : opt)\n        }\n        return\n      }\n\n      (hasDialog !== true || dialogFieldFocused.value === true) && state.focus()\n\n      selectInputText()\n\n      if (innerValue.value.length === 0) {\n        const val = props.emitValue === true ? optValue : opt\n        emit('add', { index: 0, value: val })\n        emit('update:modelValue', props.multiple === true ? [ val ] : val)\n        return\n      }\n\n      const\n        model = props.modelValue.slice(),\n        index = innerOptionsValue.value.findIndex(v => isDeepEqual(v, optValue))\n\n      if (index > -1) {\n        emit('remove', { index, value: model.splice(index, 1)[ 0 ] })\n      }\n      else {\n        if (props.maxValues !== void 0 && model.length >= props.maxValues) {\n          return\n        }\n\n        const val = props.emitValue === true ? optValue : opt\n\n        emit('add', { index: model.length, value: val })\n        model.push(val)\n      }\n\n      emit('update:modelValue', model)\n    }\n\n    function setOptionIndex (index) {\n      if ($q.platform.is.desktop !== true) { return }\n\n      const val = index > -1 && index < virtualScrollLength.value\n        ? index\n        : -1\n\n      if (optionIndex.value !== val) {\n        optionIndex.value = val\n      }\n    }\n\n    function moveOptionSelection (offset = 1, skipInputValue) {\n      if (menu.value === true) {\n        let index = optionIndex.value\n        do {\n          index = normalizeToInterval(\n            index + offset,\n            -1,\n            virtualScrollLength.value - 1\n          )\n        }\n        while (index !== -1 && index !== optionIndex.value && isOptionDisabled.value(props.options[ index ]) === true)\n\n        if (optionIndex.value !== index) {\n          setOptionIndex(index)\n          scrollTo(index)\n\n          if (skipInputValue !== true && props.useInput === true && props.fillInput === true) {\n            setInputValue(\n              index >= 0\n                ? getOptionLabel.value(props.options[ index ])\n                : defaultInputValue,\n              true\n            )\n          }\n        }\n      }\n    }\n\n    function getOption (value, valueCache) {\n      const fn = opt => isDeepEqual(getOptionValue.value(opt), value)\n      return props.options.find(fn) || valueCache.find(fn) || value\n    }\n\n    function getPropValueFn (propValue, defaultVal) {\n      const val = propValue !== void 0\n        ? propValue\n        : defaultVal\n\n      return typeof val === 'function'\n        ? val\n        : opt => (opt !== null && typeof opt === 'object' && val in opt ? opt[ val ] : opt)\n    }\n\n    function isOptionSelected (opt) {\n      const val = getOptionValue.value(opt)\n      return innerOptionsValue.value.find(v => isDeepEqual(v, val)) !== void 0\n    }\n\n    function selectInputText (e) {\n      if (\n        props.useInput === true\n        && targetRef.value !== null\n        && (e === void 0 || (targetRef.value === e.target && e.target.value === selectedString.value))\n      ) {\n        targetRef.value.select()\n      }\n    }\n\n    function onTargetKeyup (e) {\n      // if ESC and we have an opened menu\n      // then stop propagation (might be caught by a QDialog\n      // and so it will also close the QDialog, which is wrong)\n      if (isKeyCode(e, 27) === true && menu.value === true) {\n        stop(e)\n        // on ESC we need to close the dialog also\n        hidePopup()\n        resetInputValue()\n      }\n\n      emit('keyup', e)\n    }\n\n    function onTargetAutocomplete (e) {\n      const { value } = e.target\n\n      if (e.keyCode !== void 0) {\n        onTargetKeyup(e)\n        return\n      }\n\n      e.target.value = ''\n\n      if (filterTimer !== null) {\n        clearTimeout(filterTimer)\n        filterTimer = null\n      }\n      if (inputValueTimer !== null) {\n        clearTimeout(inputValueTimer)\n        inputValueTimer = null\n      }\n\n      resetInputValue()\n\n      if (typeof value === 'string' && value.length !== 0) {\n        const needle = value.toLocaleLowerCase()\n        const findFn = extractFn => {\n          const option = props.options.find(opt => extractFn.value(opt).toLocaleLowerCase() === needle)\n\n          if (option === void 0) {\n            return false\n          }\n\n          if (innerValue.value.indexOf(option) === -1) {\n            toggleOption(option)\n          }\n          else {\n            hidePopup()\n          }\n\n          return true\n        }\n        const fillFn = afterFilter => {\n          if (findFn(getOptionValue) === true) {\n            return\n          }\n          if (findFn(getOptionLabel) === true || afterFilter === true) {\n            return\n          }\n\n          filter(value, true, () => fillFn(true))\n        }\n\n        fillFn()\n      }\n      else {\n        state.clearValue(e)\n      }\n    }\n\n    function onTargetKeypress (e) {\n      emit('keypress', e)\n    }\n\n    function onTargetKeydown (e) {\n      emit('keydown', e)\n\n      if (shouldIgnoreKey(e) === true) {\n        return\n      }\n\n      const newValueModeValid = inputValue.value.length !== 0\n        && (props.newValueMode !== void 0 || props.onNewValue !== void 0)\n\n      const tabShouldSelect = e.shiftKey !== true\n        && props.multiple !== true\n        && (optionIndex.value > -1 || newValueModeValid === true)\n\n      // escape\n      if (e.keyCode === 27) {\n        prevent(e) // prevent clearing the inputValue\n        return\n      }\n\n      // tab\n      if (e.keyCode === 9 && tabShouldSelect === false) {\n        closeMenu()\n        return\n      }\n\n      if (\n        e.target === void 0\n        || e.target.id !== state.targetUid.value\n        || state.editable.value !== true\n      ) { return }\n\n      // down\n      if (\n        e.keyCode === 40\n        && state.innerLoading.value !== true\n        && menu.value === false\n      ) {\n        stopAndPrevent(e)\n        showPopup()\n        return\n      }\n\n      // backspace\n      if (\n        e.keyCode === 8\n        && (\n          props.useChips === true\n          || props.clearable === true\n        )\n        && props.hideSelected !== true\n        && inputValue.value.length === 0\n      ) {\n        if (props.multiple === true && Array.isArray(props.modelValue) === true) {\n          removeAtIndex(props.modelValue.length - 1)\n        }\n        else if (props.multiple !== true && props.modelValue !== null) {\n          emit('update:modelValue', null)\n        }\n        return\n      }\n\n      // home, end - 36, 35\n      if (\n        (e.keyCode === 35 || e.keyCode === 36)\n        && (typeof inputValue.value !== 'string' || inputValue.value.length === 0)\n      ) {\n        stopAndPrevent(e)\n        optionIndex.value = -1\n        moveOptionSelection(e.keyCode === 36 ? 1 : -1, props.multiple)\n      }\n\n      // pg up, pg down - 33, 34\n      if (\n        (e.keyCode === 33 || e.keyCode === 34)\n        && virtualScrollSliceSizeComputed.value !== void 0\n      ) {\n        stopAndPrevent(e)\n        optionIndex.value = Math.max(\n          -1,\n          Math.min(\n            virtualScrollLength.value,\n            optionIndex.value + (e.keyCode === 33 ? -1 : 1) * virtualScrollSliceSizeComputed.value.view\n          )\n        )\n        moveOptionSelection(e.keyCode === 33 ? 1 : -1, props.multiple)\n      }\n\n      // up, down\n      if (e.keyCode === 38 || e.keyCode === 40) {\n        stopAndPrevent(e)\n        moveOptionSelection(e.keyCode === 38 ? -1 : 1, props.multiple)\n      }\n\n      const optionsLength = virtualScrollLength.value\n\n      // clear search buffer if expired\n      if (searchBuffer === void 0 || searchBufferExp < Date.now()) {\n        searchBuffer = ''\n      }\n\n      // keyboard search when not having use-input\n      if (\n        optionsLength > 0\n        && props.useInput !== true\n        && e.key !== void 0\n        && e.key.length === 1 // printable char\n        && e.altKey === false // not kbd shortcut\n        && e.ctrlKey === false // not kbd shortcut\n        && e.metaKey === false // not kbd shortcut, especially on macOS with Command key\n        && (e.keyCode !== 32 || searchBuffer.length !== 0) // space in middle of search\n      ) {\n        menu.value !== true && showPopup(e)\n\n        const\n          char = e.key.toLocaleLowerCase(),\n          keyRepeat = searchBuffer.length === 1 && searchBuffer[ 0 ] === char\n\n        searchBufferExp = Date.now() + 1500\n        if (keyRepeat === false) {\n          stopAndPrevent(e)\n          searchBuffer += char\n        }\n\n        const searchRe = new RegExp('^' + searchBuffer.split('').map(l => (reEscapeList.indexOf(l) > -1 ? '\\\\' + l : l)).join('.*'), 'i')\n\n        let index = optionIndex.value\n\n        if (keyRepeat === true || index < 0 || searchRe.test(getOptionLabel.value(props.options[ index ])) !== true) {\n          do {\n            index = normalizeToInterval(index + 1, -1, optionsLength - 1)\n          }\n          while (index !== optionIndex.value && (\n            isOptionDisabled.value(props.options[ index ]) === true\n            || searchRe.test(getOptionLabel.value(props.options[ index ])) !== true\n          ))\n        }\n\n        if (optionIndex.value !== index) {\n          nextTick(() => {\n            setOptionIndex(index)\n            scrollTo(index)\n\n            if (index >= 0 && props.useInput === true && props.fillInput === true) {\n              setInputValue(getOptionLabel.value(props.options[ index ]), true)\n            }\n          })\n        }\n\n        return\n      }\n\n      // enter, space (when not using use-input and not in search), or tab (when not using multiple and option selected)\n      // same target is checked above\n      if (\n        e.keyCode !== 13\n        && (e.keyCode !== 32 || props.useInput === true || searchBuffer !== '')\n        && (e.keyCode !== 9 || tabShouldSelect === false)\n      ) { return }\n\n      e.keyCode !== 9 && stopAndPrevent(e)\n\n      if (optionIndex.value > -1 && optionIndex.value < optionsLength) {\n        toggleOption(props.options[ optionIndex.value ])\n        return\n      }\n\n      if (newValueModeValid === true) {\n        const done = (val, mode) => {\n          if (mode) {\n            if (validateNewValueMode(mode) !== true) {\n              return\n            }\n          }\n          else {\n            mode = props.newValueMode\n          }\n\n          updateInputValue('', props.multiple !== true, true)\n\n          if (val === void 0 || val === null) {\n            return\n          }\n\n          const fn = mode === 'toggle' ? toggleOption : add\n          fn(val, mode === 'add-unique')\n\n          if (props.multiple !== true) {\n            targetRef.value !== null && targetRef.value.focus()\n            hidePopup()\n          }\n        }\n\n        if (props.onNewValue !== void 0) {\n          emit('newValue', inputValue.value, done)\n        }\n        else {\n          done(inputValue.value)\n        }\n\n        if (props.multiple !== true) {\n          return\n        }\n      }\n\n      if (menu.value === true) {\n        closeMenu()\n      }\n      else if (state.innerLoading.value !== true) {\n        showPopup()\n      }\n    }\n\n    function getVirtualScrollEl () {\n      return hasDialog === true\n        ? menuContentRef.value\n        : (\n            menuRef.value !== null && menuRef.value.contentEl !== null\n              ? menuRef.value.contentEl\n              : void 0\n          )\n    }\n\n    function getVirtualScrollTarget () {\n      return getVirtualScrollEl()\n    }\n\n    function getSelection () {\n      if (props.hideSelected === true) {\n        return []\n      }\n\n      if (slots[ 'selected-item' ] !== void 0) {\n        return selectedScope.value.map(scope => slots[ 'selected-item' ](scope)).slice()\n      }\n\n      if (slots.selected !== void 0) {\n        return [].concat(slots.selected())\n      }\n\n      if (props.useChips === true) {\n        return selectedScope.value.map((scope, i) => h(QChip, {\n          key: 'option-' + i,\n          removable: state.editable.value === true && isOptionDisabled.value(scope.opt) !== true,\n          dense: true,\n          textColor: props.color,\n          tabindex: tabindex.value,\n          onRemove () { scope.removeAtIndex(i) }\n        }, () => h('span', {\n          class: 'ellipsis',\n          [ scope.html === true ? 'innerHTML' : 'textContent' ]: getOptionLabel.value(scope.opt)\n        })))\n      }\n\n      return [\n        h('span', {\n          [ valueAsHtml.value === true ? 'innerHTML' : 'textContent' ]: ariaCurrentValue.value\n        })\n      ]\n    }\n\n    function getAllOptions () {\n      if (noOptions.value === true) {\n        return slots[ 'no-option' ] !== void 0\n          ? slots[ 'no-option' ]({ inputValue: inputValue.value })\n          : void 0\n      }\n\n      const fn = slots.option !== void 0\n        ? slots.option\n        : scope => {\n          return h(QItem, {\n            key: scope.index,\n            ...scope.itemProps\n          }, () => {\n            return h(\n              QItemSection,\n              () => h(\n                QItemLabel,\n                () => h('span', {\n                  [ scope.html === true ? 'innerHTML' : 'textContent' ]: scope.label\n                })\n              )\n            )\n          })\n        }\n\n      let options = padVirtualScroll('div', optionScope.value.map(fn))\n\n      if (slots[ 'before-options' ] !== void 0) {\n        options = slots[ 'before-options' ]().concat(options)\n      }\n\n      return hMergeSlot(slots[ 'after-options' ], options)\n    }\n\n    function getInput (fromDialog, isTarget) {\n      const attrs = isTarget === true ? { ...comboboxAttrs.value, ...state.splitAttrs.attributes.value } : void 0\n\n      const data = {\n        ref: isTarget === true ? targetRef : void 0,\n        key: 'i_t',\n        class: computedInputClass.value,\n        style: props.inputStyle,\n        value: inputValue.value !== void 0 ? inputValue.value : '',\n        // required for Android in order to show ENTER key when in form\n        type: 'search',\n        ...attrs,\n        id: isTarget === true ? state.targetUid.value : void 0,\n        maxlength: props.maxlength,\n        autocomplete: props.autocomplete,\n        'data-autofocus': fromDialog === true || props.autofocus === true || void 0,\n        disabled: props.disable === true,\n        readonly: props.readonly === true,\n        ...inputControlEvents.value\n      }\n\n      if (fromDialog !== true && hasDialog === true) {\n        if (Array.isArray(data.class) === true) {\n          data.class = [ ...data.class, 'no-pointer-events' ]\n        }\n        else {\n          data.class += ' no-pointer-events'\n        }\n      }\n\n      return h('input', data)\n    }\n\n    function onInput (e) {\n      if (filterTimer !== null) {\n        clearTimeout(filterTimer)\n        filterTimer = null\n      }\n      if (inputValueTimer !== null) {\n        clearTimeout(inputValueTimer)\n        inputValueTimer = null\n      }\n\n      if (e && e.target && e.target.qComposing === true) {\n        return\n      }\n\n      setInputValue(e.target.value || '')\n      // mark it here as user input so that if updateInputValue is called\n      // before filter is called the indicator is reset\n      userInputValue = true\n      defaultInputValue = inputValue.value\n\n      if (\n        state.focused.value !== true\n        && (hasDialog !== true || dialogFieldFocused.value === true)\n      ) {\n        state.focus()\n      }\n\n      if (props.onFilter !== void 0) {\n        filterTimer = setTimeout(() => {\n          filterTimer = null\n          filter(inputValue.value)\n        }, props.inputDebounce)\n      }\n    }\n\n    function setInputValue (val, emitImmediately) {\n      if (inputValue.value !== val) {\n        inputValue.value = val\n\n        if (emitImmediately === true || props.inputDebounce === 0 || props.inputDebounce === '0') {\n          emit('inputValue', val)\n        }\n        else {\n          inputValueTimer = setTimeout(() => {\n            inputValueTimer = null\n            emit('inputValue', val)\n          }, props.inputDebounce)\n        }\n      }\n    }\n\n    function updateInputValue (val, noFiltering, internal) {\n      userInputValue = internal !== true\n\n      if (props.useInput === true) {\n        setInputValue(val, true)\n\n        if (noFiltering === true || internal !== true) {\n          defaultInputValue = val\n        }\n\n        noFiltering !== true && filter(val)\n      }\n    }\n\n    function filter (val, keepClosed, afterUpdateFn) {\n      if (props.onFilter === void 0 || (keepClosed !== true && state.focused.value !== true)) {\n        return\n      }\n\n      if (state.innerLoading.value === true) {\n        emit('filterAbort')\n      }\n      else {\n        state.innerLoading.value = true\n        innerLoadingIndicator.value = true\n      }\n\n      if (\n        val !== ''\n        && props.multiple !== true\n        && innerValue.value.length !== 0\n        && userInputValue !== true\n        && val === getOptionLabel.value(innerValue.value[ 0 ])\n      ) {\n        val = ''\n      }\n\n      const localFilterId = setTimeout(() => {\n        menu.value === true && (menu.value = false)\n      }, 10)\n\n      filterId !== null && clearTimeout(filterId)\n      filterId = localFilterId\n\n      emit(\n        'filter',\n        val,\n        (fn, afterFn) => {\n          if ((keepClosed === true || state.focused.value === true) && filterId === localFilterId) {\n            clearTimeout(filterId)\n\n            typeof fn === 'function' && fn()\n\n            // hide indicator to allow arrow to animate\n            innerLoadingIndicator.value = false\n\n            nextTick(() => {\n              state.innerLoading.value = false\n\n              if (state.editable.value === true) {\n                if (keepClosed === true) {\n                  menu.value === true && hidePopup()\n                }\n                else if (menu.value === true) {\n                  updateMenu(true)\n                }\n                else {\n                  menu.value = true\n                }\n              }\n\n              typeof afterFn === 'function' && nextTick(() => { afterFn(proxy) })\n              typeof afterUpdateFn === 'function' && nextTick(() => { afterUpdateFn(proxy) })\n            })\n          }\n        },\n        () => {\n          if (state.focused.value === true && filterId === localFilterId) {\n            clearTimeout(filterId)\n            state.innerLoading.value = false\n            innerLoadingIndicator.value = false\n          }\n          menu.value === true && (menu.value = false)\n        }\n      )\n    }\n\n    function getMenu () {\n      return h(QMenu, {\n        ref: menuRef,\n        class: menuContentClass.value,\n        style: props.popupContentStyle,\n        modelValue: menu.value,\n        fit: props.menuShrink !== true,\n        cover: props.optionsCover === true && noOptions.value !== true && props.useInput !== true,\n        anchor: props.menuAnchor,\n        self: props.menuSelf,\n        offset: props.menuOffset,\n        dark: isOptionsDark.value,\n        noParentEvent: true,\n        noRefocus: true,\n        noFocus: true,\n        square: squaredMenu.value,\n        transitionShow: props.transitionShow,\n        transitionHide: props.transitionHide,\n        transitionDuration: props.transitionDuration,\n        separateClosePopup: true,\n        ...listboxAttrs.value,\n        onScrollPassive: onVirtualScrollEvt,\n        onBeforeShow: onControlPopupShow,\n        onBeforeHide: onMenuBeforeHide,\n        onShow: onMenuShow\n      }, getAllOptions)\n    }\n\n    function onMenuBeforeHide (e) {\n      onControlPopupHide(e)\n      closeMenu()\n    }\n\n    function onMenuShow () {\n      setVirtualScrollSize()\n    }\n\n    function onDialogFieldFocus (e) {\n      stop(e)\n      targetRef.value !== null && targetRef.value.focus()\n      dialogFieldFocused.value = true\n      window.scrollTo(window.pageXOffset || window.scrollX || document.body.scrollLeft || 0, 0)\n    }\n\n    function onDialogFieldBlur (e) {\n      stop(e)\n      nextTick(() => {\n        dialogFieldFocused.value = false\n      })\n    }\n\n    function getDialog () {\n      const content = [\n        h(QField, {\n          class: `col-auto ${ state.fieldClass.value }`,\n          ...innerFieldProps.value,\n          for: state.targetUid.value,\n          dark: isOptionsDark.value,\n          square: true,\n          loading: innerLoadingIndicator.value,\n          itemAligned: false,\n          filled: true,\n          stackLabel: inputValue.value.length !== 0,\n          ...state.splitAttrs.listeners.value,\n          onFocus: onDialogFieldFocus,\n          onBlur: onDialogFieldBlur\n        }, {\n          ...slots,\n          rawControl: () => state.getControl(true),\n          before: void 0,\n          after: void 0\n        })\n      ]\n\n      menu.value === true && content.push(\n        h('div', {\n          ref: menuContentRef,\n          class: menuContentClass.value + ' scroll',\n          style: props.popupContentStyle,\n          ...listboxAttrs.value,\n          onClick: prevent,\n          onScrollPassive: onVirtualScrollEvt\n        }, getAllOptions())\n      )\n\n      return h(QDialog, {\n        ref: dialogRef,\n        modelValue: dialog.value,\n        position: props.useInput === true ? 'top' : void 0,\n        transitionShow: transitionShowComputed,\n        transitionHide: props.transitionHide,\n        transitionDuration: props.transitionDuration,\n        onBeforeShow: onControlPopupShow,\n        onBeforeHide: onDialogBeforeHide,\n        onHide: onDialogHide,\n        onShow: onDialogShow\n      }, () => h('div', {\n        class: 'q-select__dialog'\n          + (isOptionsDark.value === true ? ' q-select__dialog--dark q-dark' : '')\n          + (dialogFieldFocused.value === true ? ' q-select__dialog--focused' : '')\n      }, content))\n    }\n\n    function onDialogBeforeHide (e) {\n      onControlPopupHide(e)\n\n      if (dialogRef.value !== null) {\n        dialogRef.value.__updateRefocusTarget(\n          state.rootRef.value.querySelector('.q-field__native > [tabindex]:last-child')\n        )\n      }\n\n      state.focused.value = false\n    }\n\n    function onDialogHide (e) {\n      hidePopup()\n      state.focused.value === false && emit('blur', e)\n      resetInputValue()\n    }\n\n    function onDialogShow () {\n      const el = document.activeElement\n      if (\n        (el === null || el.id !== state.targetUid.value)\n        && targetRef.value !== null\n        && targetRef.value !== el\n      ) {\n        targetRef.value.focus()\n      }\n\n      setVirtualScrollSize()\n    }\n\n    function closeMenu () {\n      if (dialog.value === true) {\n        return\n      }\n\n      optionIndex.value = -1\n\n      if (menu.value === true) {\n        menu.value = false\n      }\n\n      if (state.focused.value === false) {\n        if (filterId !== null) {\n          clearTimeout(filterId)\n          filterId = null\n        }\n\n        if (state.innerLoading.value === true) {\n          emit('filterAbort')\n          state.innerLoading.value = false\n          innerLoadingIndicator.value = false\n        }\n      }\n    }\n\n    function showPopup (e) {\n      if (state.editable.value !== true) {\n        return\n      }\n\n      if (hasDialog === true) {\n        state.onControlFocusin(e)\n        dialog.value = true\n        nextTick(() => {\n          state.focus()\n        })\n      }\n      else {\n        state.focus()\n      }\n\n      if (props.onFilter !== void 0) {\n        filter(inputValue.value)\n      }\n      else if (noOptions.value !== true || slots[ 'no-option' ] !== void 0) {\n        menu.value = true\n      }\n    }\n\n    function hidePopup () {\n      dialog.value = false\n      closeMenu()\n    }\n\n    function resetInputValue () {\n      props.useInput === true && updateInputValue(\n        props.multiple !== true && props.fillInput === true && innerValue.value.length !== 0\n          ? getOptionLabel.value(innerValue.value[ 0 ]) || ''\n          : '',\n        true,\n        true\n      )\n    }\n\n    function updateMenu (show) {\n      let optionIndex = -1\n\n      if (show === true) {\n        if (innerValue.value.length !== 0) {\n          const val = getOptionValue.value(innerValue.value[ 0 ])\n          optionIndex = props.options.findIndex(v => isDeepEqual(getOptionValue.value(v), val))\n        }\n\n        localResetVirtualScroll(optionIndex)\n      }\n\n      setOptionIndex(optionIndex)\n    }\n\n    function rerenderMenu (newLength, oldLength) {\n      if (menu.value === true && state.innerLoading.value === false) {\n        localResetVirtualScroll(-1, true)\n\n        nextTick(() => {\n          if (menu.value === true && state.innerLoading.value === false) {\n            if (newLength > oldLength) {\n              localResetVirtualScroll()\n            }\n            else {\n              updateMenu(true)\n            }\n          }\n        })\n      }\n    }\n\n    function updateMenuPosition () {\n      if (dialog.value === false && menuRef.value !== null) {\n        menuRef.value.updatePosition()\n      }\n    }\n\n    function onControlPopupShow (e) {\n      e !== void 0 && stop(e)\n      emit('popupShow', e)\n      state.hasPopupOpen = true\n      state.onControlFocusin(e)\n    }\n\n    function onControlPopupHide (e) {\n      e !== void 0 && stop(e)\n      emit('popupHide', e)\n      state.hasPopupOpen = false\n      state.onControlFocusout(e)\n    }\n\n    function updatePreState () {\n      hasDialog = $q.platform.is.mobile !== true && props.behavior !== 'dialog'\n        ? false\n        : props.behavior !== 'menu' && (\n          props.useInput === true\n            ? slots[ 'no-option' ] !== void 0 || props.onFilter !== void 0 || noOptions.value === false\n            : true\n        )\n\n      transitionShowComputed = $q.platform.is.ios === true && hasDialog === true && props.useInput === true\n        ? 'fade'\n        : props.transitionShow\n    }\n\n    onBeforeUpdate(updatePreState)\n    onUpdated(updateMenuPosition)\n\n    updatePreState()\n\n    onBeforeUnmount(() => {\n      filterTimer !== null && clearTimeout(filterTimer)\n      inputValueTimer !== null && clearTimeout(inputValueTimer)\n    })\n\n    // expose public methods\n    Object.assign(proxy, {\n      showPopup, hidePopup,\n      removeAtIndex, add, toggleOption,\n      getOptionIndex: () => optionIndex.value,\n      setOptionIndex, moveOptionSelection,\n      filter, updateMenuPosition, updateInputValue,\n      isOptionSelected,\n      getEmittingOptionValue,\n      isOptionDisabled: (...args) => isOptionDisabled.value.apply(null, args) === true,\n      getOptionValue: (...args) => getOptionValue.value.apply(null, args),\n      getOptionLabel: (...args) => getOptionLabel.value.apply(null, args)\n    })\n\n    Object.assign(state, {\n      innerValue,\n\n      fieldClass: computed(() =>\n        `q-select q-field--auto-height q-select--with${ props.useInput !== true ? 'out' : '' }-input`\n        + ` q-select--with${ props.useChips !== true ? 'out' : '' }-chips`\n        + ` q-select--${ props.multiple === true ? 'multiple' : 'single' }`\n      ),\n\n      inputRef,\n      targetRef,\n      hasValue,\n      showPopup,\n\n      floatingLabel: computed(() =>\n        (props.hideSelected !== true && hasValue.value === true)\n        || typeof inputValue.value === 'number'\n        || inputValue.value.length !== 0\n        || fieldValueIsFilled(props.displayValue)\n      ),\n\n      getControlChild: () => {\n        if (\n          state.editable.value !== false && (\n            dialog.value === true // dialog always has menu displayed, so need to render it\n            || noOptions.value !== true\n            || slots[ 'no-option' ] !== void 0\n          )\n        ) {\n          return hasDialog === true ? getDialog() : getMenu()\n        }\n        else if (state.hasPopupOpen === true) {\n          // explicitly set it otherwise TAB will not blur component\n          state.hasPopupOpen = false\n        }\n      },\n\n      controlEvents: {\n        onFocusin (e) { state.onControlFocusin(e) },\n        onFocusout (e) {\n          state.onControlFocusout(e, () => {\n            resetInputValue()\n            closeMenu()\n          })\n        },\n        onClick (e) {\n          // label from QField will propagate click on the input\n          prevent(e)\n\n          if (hasDialog !== true && menu.value === true) {\n            closeMenu()\n            targetRef.value !== null && targetRef.value.focus()\n            return\n          }\n\n          showPopup(e)\n        }\n      },\n\n      getControl: fromDialog => {\n        const child = getSelection()\n        const isTarget = fromDialog === true || dialog.value !== true || hasDialog !== true\n\n        if (props.useInput === true) {\n          child.push(getInput(fromDialog, isTarget))\n        }\n        // there can be only one (when dialog is opened the control in dialog should be target)\n        else if (state.editable.value === true) {\n          const attrs = isTarget === true ? comboboxAttrs.value : void 0\n\n          child.push(\n            h('input', {\n              ref: isTarget === true ? targetRef : void 0,\n              key: 'd_t',\n              class: 'q-select__focus-target',\n              id: isTarget === true ? state.targetUid.value : void 0,\n              value: ariaCurrentValue.value,\n              readonly: true,\n              'data-autofocus': fromDialog === true || props.autofocus === true || void 0,\n              ...attrs,\n              onKeydown: onTargetKeydown,\n              onKeyup: onTargetKeyup,\n              onKeypress: onTargetKeypress\n            })\n          )\n\n          if (isTarget === true && typeof props.autocomplete === 'string' && props.autocomplete.length !== 0) {\n            child.push(\n              h('input', {\n                class: 'q-select__autocomplete-input',\n                autocomplete: props.autocomplete,\n                tabindex: -1,\n                onKeyup: onTargetAutocomplete\n              })\n            )\n          }\n        }\n\n        if (nameProp.value !== void 0 && props.disable !== true && innerOptionsValue.value.length !== 0) {\n          const opts = innerOptionsValue.value.map(value => h('option', { value, selected: true }))\n\n          child.push(\n            h('select', {\n              class: 'hidden',\n              name: nameProp.value,\n              multiple: props.multiple\n            }, opts)\n          )\n        }\n\n        const attrs = props.useInput === true || isTarget !== true ? void 0 : state.splitAttrs.attributes.value\n\n        return h('div', {\n          class: 'q-field__native row items-center',\n          ...attrs,\n          ...state.splitAttrs.listeners.value\n        }, child)\n      },\n\n      getInnerAppend: () => (\n        props.loading !== true && innerLoadingIndicator.value !== true && props.hideDropdownIcon !== true\n          ? [\n              h(QIcon, {\n                class: 'q-select__dropdown-icon' + (menu.value === true ? ' rotate-180' : ''),\n                name: dropdownArrowIcon.value\n              })\n            ]\n          : null\n      )\n    })\n\n    return useField(state)\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}