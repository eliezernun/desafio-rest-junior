{"ast":null,"code":"import { ref } from 'vue';\nconst columns = [{\n  name: 'name',\n  required: true,\n  label: 'Dessert (100g serving)',\n  align: 'left',\n  field: row => row.name,\n  format: val => `${val}`,\n  sortable: true\n}, {\n  name: 'calories',\n  align: 'center',\n  label: 'Email',\n  field: 'calories',\n  sortable: true\n}, {\n  name: 'fat',\n  label: 'Telefone',\n  field: 'fat',\n  sortable: true\n}, {\n  name: 'carbs',\n  label: 'Cep',\n  field: 'carbs'\n}];\nconst rows = [{\n  name: 'Frozen Yogurt',\n  calories: 159,\n  fat: 6.0,\n  carbs: 24,\n  protein: 4.0,\n  sodium: 87,\n  calcium: '14%',\n  iron: '1%'\n}, {\n  name: 'Ice cream sandwich',\n  calories: 237,\n  fat: 9.0,\n  carbs: 37,\n  protein: 4.3,\n  sodium: 129,\n  calcium: '8%',\n  iron: '1%'\n}, {\n  name: 'Eclair',\n  calories: 262,\n  fat: 16.0,\n  carbs: 23,\n  protein: 6.0,\n  sodium: 337,\n  calcium: '6%',\n  iron: '7%'\n}, {\n  name: 'Cupcake',\n  calories: 305,\n  fat: 3.7,\n  carbs: 67,\n  protein: 4.3,\n  sodium: 413,\n  calcium: '3%',\n  iron: '8%'\n}, {\n  name: 'Gingerbread',\n  calories: 356,\n  fat: 16.0,\n  carbs: 49,\n  protein: 3.9,\n  sodium: 327,\n  calcium: '7%',\n  iron: '16%'\n}, {\n  name: 'Jelly bean',\n  calories: 375,\n  fat: 0.0,\n  carbs: 94,\n  protein: 0.0,\n  sodium: 50,\n  calcium: '0%',\n  iron: '0%'\n}, {\n  name: 'Lollipop',\n  calories: 392,\n  fat: 0.2,\n  carbs: 98,\n  protein: 0,\n  sodium: 38,\n  calcium: '0%',\n  iron: '2%'\n}, {\n  name: 'Honeycomb',\n  calories: 408,\n  fat: 3.2,\n  carbs: 87,\n  protein: 6.5,\n  sodium: 562,\n  calcium: '0%',\n  iron: '45%'\n}, {\n  name: 'Donut',\n  calories: 452,\n  fat: 25.0,\n  carbs: 51,\n  protein: 4.9,\n  sodium: 326,\n  calcium: '2%',\n  iron: '22%'\n}, {\n  name: 'KitKat',\n  calories: 518,\n  fat: 26.0,\n  carbs: 65,\n  protein: 7,\n  sodium: 54,\n  calcium: '12%',\n  iron: '6%'\n}];\nexport default {\n  setup() {\n    return {\n      visibleColumns: ref(['calories', 'desc', 'fat', 'carbs', 'protein', 'sodium', 'calcium', 'iron']),\n      columns,\n      rows,\n      text: ref(''),\n      ph: ref(''),\n      dense: ref(false)\n    };\n  }\n};","map":{"version":3,"names":["ref","columns","name","required","label","align","field","row","format","val","sortable","rows","calories","fat","carbs","protein","sodium","calcium","iron","setup","visibleColumns","text","ph","dense"],"sources":["C:\\Users\\PC01\\Documents\\Desafio_Eliezer_Embracon\\front_end\\desafio\\src\\components\\TabelaClientes.vue"],"sourcesContent":["<template>\n  <div class=\"q-pa-md\">\n    <q-table\n      flat bordered\n      :rows=\"rows\"\n      :columns=\"columns\"\n      row-key=\"name\"\n      :visible-columns=\"visibleColumns\">\n\n\n      <template v-slot:top>\n        <q-input outlined label=\"Buscar cliente\"  >\n\n          <template v-slot:append>\n            <q-icon name=\"search\" @click=\"nome-cliente\" class=\"cursor-pointer\" />\n          </template>\n\n         </q-input>\n      </template>\n\n    </q-table>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\n\nconst columns = [\n  {\n    name: 'name',\n    required: true,\n    label: 'Dessert (100g serving)',\n    align: 'left',\n    field: row => row.name,\n    format: val => `${val}`,\n    sortable: true\n  },\n  { name: 'calories', align: 'center', label: 'Email', field: 'calories', sortable: true },\n  { name: 'fat', label: 'Telefone', field: 'fat', sortable: true },\n  { name: 'carbs', label: 'Cep', field: 'carbs' }\n]\n\nconst rows = [\n  {\n    name: 'Frozen Yogurt',\n    calories: 159,\n    fat: 6.0,\n    carbs: 24,\n    protein: 4.0,\n    sodium: 87,\n    calcium: '14%',\n    iron: '1%'\n  },\n  {\n    name: 'Ice cream sandwich',\n    calories: 237,\n    fat: 9.0,\n    carbs: 37,\n    protein: 4.3,\n    sodium: 129,\n    calcium: '8%',\n    iron: '1%'\n  },\n  {\n    name: 'Eclair',\n    calories: 262,\n    fat: 16.0,\n    carbs: 23,\n    protein: 6.0,\n    sodium: 337,\n    calcium: '6%',\n    iron: '7%'\n  },\n  {\n    name: 'Cupcake',\n    calories: 305,\n    fat: 3.7,\n    carbs: 67,\n    protein: 4.3,\n    sodium: 413,\n    calcium: '3%',\n    iron: '8%'\n  },\n  {\n    name: 'Gingerbread',\n    calories: 356,\n    fat: 16.0,\n    carbs: 49,\n    protein: 3.9,\n    sodium: 327,\n    calcium: '7%',\n    iron: '16%'\n  },\n  {\n    name: 'Jelly bean',\n    calories: 375,\n    fat: 0.0,\n    carbs: 94,\n    protein: 0.0,\n    sodium: 50,\n    calcium: '0%',\n    iron: '0%'\n  },\n  {\n    name: 'Lollipop',\n    calories: 392,\n    fat: 0.2,\n    carbs: 98,\n    protein: 0,\n    sodium: 38,\n    calcium: '0%',\n    iron: '2%'\n  },\n  {\n    name: 'Honeycomb',\n    calories: 408,\n    fat: 3.2,\n    carbs: 87,\n    protein: 6.5,\n    sodium: 562,\n    calcium: '0%',\n    iron: '45%'\n  },\n  {\n    name: 'Donut',\n    calories: 452,\n    fat: 25.0,\n    carbs: 51,\n    protein: 4.9,\n    sodium: 326,\n    calcium: '2%',\n    iron: '22%'\n  },\n  {\n    name: 'KitKat',\n    calories: 518,\n    fat: 26.0,\n    carbs: 65,\n    protein: 7,\n    sodium: 54,\n    calcium: '12%',\n    iron: '6%'\n  }\n]\n\nexport default {\n  setup () {\n    return {\n      visibleColumns: ref([ 'calories', 'desc', 'fat', 'carbs', 'protein', 'sodium', 'calcium', 'iron' ]),\n      columns,\n      rows,\n      text: ref(''),\n      ph: ref(''),\n      dense: ref(false)\n    }\n  }\n}\n\n\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}