{"ast":null,"code":"import { ref } from 'vue';\nconst columns = [{\n  name: 'name',\n  label: 'Nome Sobrenome',\n  align: 'left',\n  field: row => row.name,\n  format: val => `${val}`,\n  sortable: true\n}, {\n  name: 'email',\n  align: 'center',\n  label: 'Email',\n  field: 'email'\n}, {\n  name: 'telefone',\n  align: 'center',\n  label: 'Telefone',\n  field: 'telefone'\n}, {\n  name: 'cep',\n  align: 'center',\n  label: 'Cep',\n  field: 'cep'\n}];\nconst rows = [{\n  name: 'Letícia Reis',\n  email: 'le@gmail.com',\n  telefone: '(15) 99876-3456',\n  cep: '18.044-000'\n}, {\n  name: 'Jordan Bellford',\n  email: 'jordi@gmail.com',\n  telefone: '(15) 99765-4352',\n  cep: '18.190-000'\n}];\nconst editarCliente = cliente => {\n  // Lógica para editar o cliente\n  console.log('Editar:', cliente);\n};\nconst excluirCliente = cliente => {\n  // Lógica para excluir o cliente\n  console.log('Excluir:', cliente);\n};\nconst exibirMaisInformacoes = cliente => {\n  // Lógica para exibir mais informações do cliente\n  console.log('Mais Informações:', cliente);\n};\nexport default {\n  setup() {\n    return {\n      visibleColumns: ref(['name', 'email', 'telefone', 'cep']),\n      columns,\n      rows,\n      editarCliente,\n      excluirCliente,\n      exibirMaisInformacoes\n    };\n  }\n};","map":{"version":3,"names":["ref","columns","name","label","align","field","row","format","val","sortable","rows","email","telefone","cep","editarCliente","cliente","console","log","excluirCliente","exibirMaisInformacoes","setup","visibleColumns"],"sources":["C:\\Users\\PC01\\Documents\\Desafio_Eliezer_Embracon\\front_end\\desafio\\src\\components\\TabelaClientes.vue"],"sourcesContent":["<template>\n  <div class=\"q-pa-md\">\n    <q-table\n     \n      :rows=\"rows\"\n      :columns=\"columns\"\n      :visible-columns=\"visibleColumns\"\n      row-key=\"name\"\n      >\n\n\n      <template v-slot:top>\n        <q-input outlined label=\"Buscar cliente\"  >\n\n          <template v-slot:append>\n            <q-icon name=\"search\" @click=\"nome-cliente\" class=\"cursor-pointer\" />\n          </template>\n\n         </q-input>\n      </template>\n      \n      <template v-slot:body-cell=\"props\">\n        <q-tr :props=\"props\">\n          \n          <q-td auto-width>\n            <q-btn @click=\"editarCliente(props.row.name )\" icon=\"edit\" class=\"q-mr-xs\" />\n            <q-btn @click=\"excluirCliente(props.row.name )\" icon=\"delete\" class=\"q-mr-xs\" />\n            <q-btn @click=\"exibirMaisInformacoes(props.row.name )\" icon=\"info\" />\n          </q-td>\n          <template>\n  <div class=\"q-pa-md\">\n    <q-table\n      flat bordered\n      title=\"Treats\"\n      :rows=\"rows\"\n      :columns=\"columns\"\n      row-key=\"name\"\n    >\n\n      <template v-slot:header=\"props\">\n        <q-tr :props=\"props\">\n          <q-th auto-width />\n          <q-th\n            v-for=\"col in props.cols\"\n            :key=\"col.name\"\n            :props=\"props\"\n          >\n            {{ col.label }}\n          </q-th>\n        </q-tr>\n      </template>\n\n      <template v-slot:body=\"props\">\n        <q-tr :props=\"props\">\n          <q-td auto-width>\n            <q-btn size=\"sm\" color=\"accent\" round dense @click=\"props.expand = !props.expand\" :icon=\"props.expand ? 'remove' : 'add'\" />\n          </q-td>\n          <q-td\n            v-for=\"col in props.cols\"\n            :key=\"col.name\"\n            :props=\"props\"\n          >\n            {{ col.value }}\n          </q-td>\n        </q-tr>\n        <q-tr v-show=\"props.expand\" :props=\"props\">\n          <q-td colspan=\"100%\">\n            <div class=\"text-left\">This is expand slot for row above: {{ props.row.name }}.</div>\n          </q-td>\n        </q-tr>\n      </template>\n\n    </q-table>\n  </div>\n</template>\n\n<script>\nconst columns = [\n  {\n    name: 'name',\n    required: true,\n    label: 'Dessert (100g serving)',\n    align: 'left',\n    field: row => row.name,\n    format: val => `${val}`,\n    sortable: true\n  },\n  { name: 'calories', align: 'center', label: 'Calories', field: 'calories', sortable: true },\n  { name: 'fat', label: 'Fat (g)', field: 'fat', sortable: true },\n  { name: 'carbs', label: 'Carbs (g)', field: 'carbs' },\n  { name: 'protein', label: 'Protein (g)', field: 'protein' },\n  { name: 'sodium', label: 'Sodium (mg)', field: 'sodium' },\n  { name: 'calcium', label: 'Calcium (%)', field: 'calcium', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) },\n  { name: 'iron', label: 'Iron (%)', field: 'iron', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) }\n]\n\nconst rows = [\n  {\n    name: 'Frozen Yogurt',\n    calories: 159,\n    fat: 6.0,\n    carbs: 24,\n    protein: 4.0,\n    sodium: 87,\n    calcium: '14%',\n    iron: '1%'\n  },\n  {\n    name: 'Ice cream sandwich',\n    calories: 237,\n    fat: 9.0,\n    carbs: 37,\n    protein: 4.3,\n    sodium: 129,\n    calcium: '8%',\n    iron: '1%'\n  },\n  {\n    name: 'Eclair',\n    calories: 262,\n    fat: 16.0,\n    carbs: 23,\n    protein: 6.0,\n    sodium: 337,\n    calcium: '6%',\n    iron: '7%'\n  },\n  {\n    name: 'Cupcake',\n    calories: 305,\n    fat: 3.7,\n    carbs: 67,\n    protein: 4.3,\n    sodium: 413,\n    calcium: '3%',\n    iron: '8%'\n  },\n  {\n    name: 'Gingerbread',\n    calories: 356,\n    fat: 16.0,\n    carbs: 49,\n    protein: 3.9,\n    sodium: 327,\n    calcium: '7%',\n    iron: '16%'\n  },\n  {\n    name: 'Jelly bean',\n    calories: 375,\n    fat: 0.0,\n    carbs: 94,\n    protein: 0.0,\n    sodium: 50,\n    calcium: '0%',\n    iron: '0%'\n  },\n  {\n    name: 'Lollipop',\n    calories: 392,\n    fat: 0.2,\n    carbs: 98,\n    protein: 0,\n    sodium: 38,\n    calcium: '0%',\n    iron: '2%'\n  },\n  {\n    name: 'Honeycomb',\n    calories: 408,\n    fat: 3.2,\n    carbs: 87,\n    protein: 6.5,\n    sodium: 562,\n    calcium: '0%',\n    iron: '45%'\n  },\n  {\n    name: 'Donut',\n    calories: 452,\n    fat: 25.0,\n    carbs: 51,\n    protein: 4.9,\n    sodium: 326,\n    calcium: '2%',\n    iron: '22%'\n  },\n  {\n    name: 'KitKat',\n    calories: 518,\n    fat: 26.0,\n    carbs: 65,\n    protein: 7,\n    sodium: 54,\n    calcium: '12%',\n    iron: '6%'\n  }\n]\n\nexport default {\n  setup () {\n    return {\n      columns,\n      rows\n    }\n  }\n}\n</script>\n\n        </q-tr>\n      </template>\n\n    </q-table>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\n\nconst columns = [ \n{\n    name: 'name',\n    label: 'Nome Sobrenome',\n    align: 'left',\n    field: row => row.name,\n    format: val => `${val}`,\n    sortable: true\n  },\n  { name: 'email', align: 'center', label: 'Email', field: 'email'},\n  { name: 'telefone', align: 'center', label: 'Telefone', field: 'telefone' },\n  { name: 'cep', align: 'center', label: 'Cep', field: 'cep'},  \n]\n\nconst rows = [\n  {\n    name: 'Letícia Reis',email: 'le@gmail.com',telefone: '(15) 99876-3456',cep: '18.044-000',\n  },\n  {\n    name:'Jordan Bellford',email: 'jordi@gmail.com',telefone: '(15) 99765-4352',cep: '18.190-000'\n  }\n]\n\nconst editarCliente = (cliente) => {\n      // Lógica para editar o cliente\n      console.log('Editar:', cliente);\n    }\n\n    const excluirCliente = (cliente) => {\n      // Lógica para excluir o cliente\n      console.log('Excluir:', cliente);\n    }\n\n    const exibirMaisInformacoes = (cliente) => {\n      // Lógica para exibir mais informações do cliente\n      console.log('Mais Informações:', cliente);\n    }\n\n\nexport default {\n  setup () {\n    return {\n      visibleColumns: ref(['name', 'email', 'telefone', 'cep']),\n      columns,\n      rows,\n      editarCliente,\n      excluirCliente,\n      exibirMaisInformacoes\n    }\n  }\n}\n\n\n</script>\n"],"mappings":"AAyNA,SAASA,GAAE,QAAS,KAAI;AAExB,MAAMC,OAAM,GAAI,CAChB;EACIC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,gBAAgB;EACvBC,KAAK,EAAE,MAAM;EACbC,KAAK,EAAEC,GAAE,IAAKA,GAAG,CAACJ,IAAI;EACtBK,MAAM,EAAEC,GAAE,IAAM,GAAEA,GAAI,EAAC;EACvBC,QAAQ,EAAE;AACZ,CAAC,EACD;EAAEP,IAAI,EAAE,OAAO;EAAEE,KAAK,EAAE,QAAQ;EAAED,KAAK,EAAE,OAAO;EAAEE,KAAK,EAAE;AAAO,CAAC,EACjE;EAAEH,IAAI,EAAE,UAAU;EAAEE,KAAK,EAAE,QAAQ;EAAED,KAAK,EAAE,UAAU;EAAEE,KAAK,EAAE;AAAW,CAAC,EAC3E;EAAEH,IAAI,EAAE,KAAK;EAAEE,KAAK,EAAE,QAAQ;EAAED,KAAK,EAAE,KAAK;EAAEE,KAAK,EAAE;AAAK,CAAC,CAC7D;AAEA,MAAMK,IAAG,GAAI,CACX;EACER,IAAI,EAAE,cAAc;EAACS,KAAK,EAAE,cAAc;EAACC,QAAQ,EAAE,iBAAiB;EAACC,GAAG,EAAE;AAC9E,CAAC,EACD;EACEX,IAAI,EAAC,iBAAiB;EAACS,KAAK,EAAE,iBAAiB;EAACC,QAAQ,EAAE,iBAAiB;EAACC,GAAG,EAAE;AACnF,EACF;AAEA,MAAMC,aAAY,GAAKC,OAAO,IAAK;EAC7B;EACAC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,OAAO,CAAC;AACjC;AAEA,MAAMG,cAAa,GAAKH,OAAO,IAAK;EAClC;EACAC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,OAAO,CAAC;AAClC;AAEA,MAAMI,qBAAoB,GAAKJ,OAAO,IAAK;EACzC;EACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,OAAO,CAAC;AAC3C;AAGJ,eAAe;EACbK,KAAIA,CAAA,EAAK;IACP,OAAO;MACLC,cAAc,EAAErB,GAAG,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;MACzDC,OAAO;MACPS,IAAI;MACJI,aAAa;MACbI,cAAc;MACdC;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}