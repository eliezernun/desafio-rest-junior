{"ast":null,"code":"import { api } from '@/boot/axios';\nimport useQuasar from 'quasar/src/composables/use-quasar.js';\n;\nimport { ref, onMounted } from 'vue';\nexport default {\n  __name: 'FormularioCliente',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const $q = useQuasar();\n    /*\r\n    const nome = ref(null);\r\n    const sobrenome = ref(null);\r\n    const email = ref(null);\r\n    const telefone = ref(null);\r\n    const cep = ref(null);\r\n    \r\n    \r\n    \r\n    const { cliente } = defineProps(['cliente']);\r\n    const nome = ref(cliente.nome || '');\r\n    const sobrenome = ref(cliente.sobrenome || '');\r\n    const email = ref(cliente.email || '');\r\n    const telefone = ref(cliente.telefone || '');\r\n    const cep = ref(cliente.cep || '');\r\n    \r\n    const onSubmit = async () => {\r\n      try {\r\n        await api.put(`/clientes/${cliente.id}`, {\r\n          nome: nome.value,\r\n          sobrenome: sobrenome.value,\r\n          email: email.value,\r\n          telefone: telefone.value,\r\n          cep: cep.value\r\n        });\r\n    \r\n        $q.notify({\r\n          color: 'green-4',\r\n          textColor: 'white',\r\n          icon: 'cloud_done',\r\n          message: 'Cliente salvo com sucesso'\r\n        });\r\n    \r\n      } catch (error) {\r\n        $q.notify({\r\n          color: 'red-5',\r\n          textColor: 'white',\r\n          icon: 'warning',\r\n          message: 'Erro ao salvar cliente'\r\n        });\r\n      }\r\n    };\r\n    \r\n    /*\r\n    const onSubmit = async () => {\r\n      try {\r\n        \r\n        await api.post(\"/clientes\", {\r\n          nome: nome.value,\r\n          sobrenome: sobrenome.value,\r\n          email: email.value,\r\n          telefone: telefone.value,\r\n          cep: cep.value\r\n        });\r\n    \r\n        $q.notify({\r\n          color: 'green-4',\r\n          textColor: 'white',\r\n          icon: 'cloud_done',\r\n          message: 'Cliente salvo com sucesso'\r\n        });\r\n    \r\n        nome.value = '';\r\n        sobrenome.value = '';\r\n        email.value = '';\r\n        telefone.value = '';\r\n        cep.value = '';\r\n    \r\n      } catch (error) {\r\n        $q.notify({\r\n          color: 'red-5',\r\n          textColor: 'white',\r\n          icon: 'warning',\r\n          message: 'Erro ao salvar cliente'\r\n        });\r\n      }\r\n    };\r\n    */\n\n    const __returned__ = {\n      $q,\n      get api() {\n        return api;\n      },\n      get useQuasar() {\n        return useQuasar;\n      },\n      ref,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["api","useQuasar","ref","onMounted","$q"],"sources":["C:/Users/PC01/Documents/Desafio_Eliezer_Embracon/front_end/desafio/src/components/FormularioCliente.vue"],"sourcesContent":["<template>\r\n  <div class=\"q-pa-md\">\r\n    <q-form\r\n      @submit=\"onSubmit\"\r\n    >\r\n      <div class=\"row\">\r\n        <div class=\"col-6 q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"nome\"\r\n            label=\"Seu nome *\"\r\n            hint=\"Nome\"\r\n            lazy-rules\r\n            :rules=\"[val => val && val.length > 0 || 'Por favor digite seu nome']\"\r\n          />\r\n        </div>\r\n        <div class=\"col-6 q-pl-xs q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"sobrenome\"\r\n            label=\"Seu sobrenome *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite seu sobrenome'\r\n            ]\"\r\n          />\r\n        </div>\r\n        <div class=\"col-6 q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"email\"\r\n            label=\"Seu email *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite um email vÃ¡lido'\r\n            ]\"\r\n          />\r\n        </div>\r\n        <div class=\"col-3 q-pl-xs q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"telefone\"\r\n            label=\"Seu telefone *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite seu telefone'\r\n            ]\"\r\n          />\r\n        </div>\r\n        <div class=\"col-3 q-pl-xs q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"cep\"\r\n            label=\"Seu CEP *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite seu CEP '\r\n            ]\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <q-btn label=\"Salvar\" type=\"submit\" color=\"primary\"/>\r\n      </div>\r\n    </q-form>\r\n    \r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { api } from '@/boot/axios';\r\nimport { useQuasar } from 'quasar';\r\nimport { ref, onMounted } from 'vue';\r\n\r\n\r\nconst $q = useQuasar();\r\n/*\r\nconst nome = ref(null);\r\nconst sobrenome = ref(null);\r\nconst email = ref(null);\r\nconst telefone = ref(null);\r\nconst cep = ref(null);\r\n\r\n\r\n\r\nconst { cliente } = defineProps(['cliente']);\r\nconst nome = ref(cliente.nome || '');\r\nconst sobrenome = ref(cliente.sobrenome || '');\r\nconst email = ref(cliente.email || '');\r\nconst telefone = ref(cliente.telefone || '');\r\nconst cep = ref(cliente.cep || '');\r\n\r\nconst onSubmit = async () => {\r\n  try {\r\n    await api.put(`/clientes/${cliente.id}`, {\r\n      nome: nome.value,\r\n      sobrenome: sobrenome.value,\r\n      email: email.value,\r\n      telefone: telefone.value,\r\n      cep: cep.value\r\n    });\r\n\r\n    $q.notify({\r\n      color: 'green-4',\r\n      textColor: 'white',\r\n      icon: 'cloud_done',\r\n      message: 'Cliente salvo com sucesso'\r\n    });\r\n\r\n  } catch (error) {\r\n    $q.notify({\r\n      color: 'red-5',\r\n      textColor: 'white',\r\n      icon: 'warning',\r\n      message: 'Erro ao salvar cliente'\r\n    });\r\n  }\r\n};\r\n\r\n/*\r\nconst onSubmit = async () => {\r\n  try {\r\n    \r\n    await api.post(\"/clientes\", {\r\n      nome: nome.value,\r\n      sobrenome: sobrenome.value,\r\n      email: email.value,\r\n      telefone: telefone.value,\r\n      cep: cep.value\r\n    });\r\n\r\n    $q.notify({\r\n      color: 'green-4',\r\n      textColor: 'white',\r\n      icon: 'cloud_done',\r\n      message: 'Cliente salvo com sucesso'\r\n    });\r\n\r\n    nome.value = '';\r\n    sobrenome.value = '';\r\n    email.value = '';\r\n    telefone.value = '';\r\n    cep.value = '';\r\n\r\n  } catch (error) {\r\n    $q.notify({\r\n      color: 'red-5',\r\n      textColor: 'white',\r\n      icon: 'warning',\r\n      message: 'Erro ao salvar cliente'\r\n    });\r\n  }\r\n};\r\n*/\r\n\r\n</script>\r\n"],"mappings":"AAwEA,SAASA,GAAG,QAAQ,cAAc;AAClC,OAAOC,SAAS,MAAM,sCAAc;AAAA;AACpC,SAASC,GAAG,EAAEC,SAAS,QAAQ,KAAK;;;;;;;IAGpC,MAAMC,EAAE,GAAGH,SAAS,CAAC,CAAC;IACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}