{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, ref, onActivated, onDeactivated, onMounted, getCurrentInstance, nextTick, provide } from 'vue';\nimport { createComponent } from '../../utils/private/create.js';\nimport { stopAndPrevent } from '../../utils/event.js';\nimport { addFocusFn } from '../../utils/private/focus-manager.js';\nimport { hSlot } from '../../utils/private/render.js';\nimport { formKey } from '../../utils/private/symbols.js';\nimport { vmIsDestroyed } from '../../utils/private/vm.js';\nexport default createComponent({\n  name: 'QForm',\n  props: {\n    autofocus: Boolean,\n    noErrorFocus: Boolean,\n    noResetFocus: Boolean,\n    greedy: Boolean,\n    onSubmit: Function\n  },\n  emits: ['reset', 'validationSuccess', 'validationError'],\n  setup(props, {\n    slots,\n    emit\n  }) {\n    const vm = getCurrentInstance();\n    const rootRef = ref(null);\n    let validateIndex = 0;\n    const registeredComponents = [];\n    function validate(shouldFocus) {\n      const focus = typeof shouldFocus === 'boolean' ? shouldFocus : props.noErrorFocus !== true;\n      const index = ++validateIndex;\n      const emitEvent = (res, ref) => {\n        emit('validation' + (res === true ? 'Success' : 'Error'), ref);\n      };\n      const validateComponent = comp => {\n        const valid = comp.validate();\n        return typeof valid.then === 'function' ? valid.then(valid => ({\n          valid,\n          comp\n        }), err => ({\n          valid: false,\n          comp,\n          err\n        })) : Promise.resolve({\n          valid,\n          comp\n        });\n      };\n      const errorsPromise = props.greedy === true ? Promise.all(registeredComponents.map(validateComponent)).then(res => res.filter(r => r.valid !== true)) : registeredComponents.reduce((acc, comp) => acc.then(() => {\n        return validateComponent(comp).then(r => {\n          if (r.valid === false) {\n            return Promise.reject(r);\n          }\n        });\n      }), Promise.resolve()).catch(error => [error]);\n      return errorsPromise.then(errors => {\n        if (errors === void 0 || errors.length === 0) {\n          index === validateIndex && emitEvent(true);\n          return true;\n        }\n\n        // if not outdated already\n        if (index === validateIndex) {\n          const {\n            comp,\n            err\n          } = errors[0];\n          err !== void 0 && console.error(err);\n          emitEvent(false, comp);\n          if (focus === true) {\n            // Try to focus first mounted and active component\n            const activeError = errors.find(({\n              comp\n            }) => typeof comp.focus === 'function' && vmIsDestroyed(comp.$) === false);\n            if (activeError !== void 0) {\n              activeError.comp.focus();\n            }\n          }\n        }\n        return false;\n      });\n    }\n    function resetValidation() {\n      validateIndex++;\n      registeredComponents.forEach(comp => {\n        typeof comp.resetValidation === 'function' && comp.resetValidation();\n      });\n    }\n    function submit(evt) {\n      evt !== void 0 && stopAndPrevent(evt);\n      const index = validateIndex + 1;\n      validate().then(val => {\n        // if not outdated && validation succeeded\n        if (index === validateIndex && val === true) {\n          if (props.onSubmit !== void 0) {\n            emit('submit', evt);\n          } else if (evt !== void 0 && evt.target !== void 0 && typeof evt.target.submit === 'function') {\n            evt.target.submit();\n          }\n        }\n      });\n    }\n    function reset(evt) {\n      evt !== void 0 && stopAndPrevent(evt);\n      emit('reset');\n      nextTick(() => {\n        // allow userland to reset values before\n        resetValidation();\n        if (props.autofocus === true && props.noResetFocus !== true) {\n          focus();\n        }\n      });\n    }\n    function focus() {\n      addFocusFn(() => {\n        if (rootRef.value === null) {\n          return;\n        }\n        const target = rootRef.value.querySelector('[autofocus][tabindex], [data-autofocus][tabindex]') || rootRef.value.querySelector('[autofocus] [tabindex], [data-autofocus] [tabindex]') || rootRef.value.querySelector('[autofocus], [data-autofocus]') || Array.prototype.find.call(rootRef.value.querySelectorAll('[tabindex]'), el => el.tabIndex > -1);\n        target !== null && target !== void 0 && target.focus({\n          preventScroll: true\n        });\n      });\n    }\n    provide(formKey, {\n      bindComponent(vmProxy) {\n        registeredComponents.push(vmProxy);\n      },\n      unbindComponent(vmProxy) {\n        const index = registeredComponents.indexOf(vmProxy);\n        if (index > -1) {\n          registeredComponents.splice(index, 1);\n        }\n      }\n    });\n    let shouldActivate = false;\n    onDeactivated(() => {\n      shouldActivate = true;\n    });\n    onActivated(() => {\n      shouldActivate === true && props.autofocus === true && focus();\n    });\n    onMounted(() => {\n      props.autofocus === true && focus();\n    });\n\n    // expose public methods\n    Object.assign(vm.proxy, {\n      validate,\n      resetValidation,\n      submit,\n      reset,\n      focus,\n      getValidationComponents: () => registeredComponents\n    });\n    return () => h('form', {\n      class: 'q-form',\n      ref: rootRef,\n      onSubmit: submit,\n      onReset: reset\n    }, hSlot(slots.default));\n  }\n});","map":{"version":3,"names":["h","ref","onActivated","onDeactivated","onMounted","getCurrentInstance","nextTick","provide","createComponent","stopAndPrevent","addFocusFn","hSlot","formKey","vmIsDestroyed","name","props","autofocus","Boolean","noErrorFocus","noResetFocus","greedy","onSubmit","Function","emits","setup","slots","emit","vm","rootRef","validateIndex","registeredComponents","validate","shouldFocus","focus","index","emitEvent","res","validateComponent","comp","valid","then","err","Promise","resolve","errorsPromise","all","map","filter","r","reduce","acc","reject","catch","error","errors","length","console","activeError","find","$","resetValidation","forEach","submit","evt","val","target","reset","value","querySelector","Array","prototype","call","querySelectorAll","el","tabIndex","preventScroll","bindComponent","vmProxy","push","unbindComponent","indexOf","splice","shouldActivate","Object","assign","proxy","getValidationComponents","class","onReset","default"],"sources":["C:/Users/PC01/Documents/Desafio_Eliezer_Embracon/front_end/desafio/node_modules/quasar/src/components/form/QForm.js"],"sourcesContent":["import { h, ref, onActivated, onDeactivated, onMounted, getCurrentInstance, nextTick, provide } from 'vue'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { stopAndPrevent } from '../../utils/event.js'\nimport { addFocusFn } from '../../utils/private/focus-manager.js'\nimport { hSlot } from '../../utils/private/render.js'\nimport { formKey } from '../../utils/private/symbols.js'\nimport { vmIsDestroyed } from '../../utils/private/vm.js'\n\nexport default createComponent({\n  name: 'QForm',\n\n  props: {\n    autofocus: Boolean,\n    noErrorFocus: Boolean,\n    noResetFocus: Boolean,\n    greedy: Boolean,\n\n    onSubmit: Function\n  },\n\n  emits: [ 'reset', 'validationSuccess', 'validationError' ],\n\n  setup (props, { slots, emit }) {\n    const vm = getCurrentInstance()\n    const rootRef = ref(null)\n\n    let validateIndex = 0\n    const registeredComponents = []\n\n    function validate (shouldFocus) {\n      const focus = typeof shouldFocus === 'boolean'\n        ? shouldFocus\n        : props.noErrorFocus !== true\n\n      const index = ++validateIndex\n\n      const emitEvent = (res, ref) => {\n        emit('validation' + (res === true ? 'Success' : 'Error'), ref)\n      }\n\n      const validateComponent = comp => {\n        const valid = comp.validate()\n\n        return typeof valid.then === 'function'\n          ? valid.then(\n            valid => ({ valid, comp }),\n            err => ({ valid: false, comp, err })\n          )\n          : Promise.resolve({ valid, comp })\n      }\n\n      const errorsPromise = props.greedy === true\n        ? Promise\n          .all(registeredComponents.map(validateComponent))\n          .then(res => res.filter(r => r.valid !== true))\n        : registeredComponents\n          .reduce(\n            (acc, comp) => acc.then(() => {\n              return validateComponent(comp).then(r => {\n                if (r.valid === false) { return Promise.reject(r) }\n              })\n            }),\n            Promise.resolve()\n          )\n          .catch(error => [ error ])\n\n      return errorsPromise.then(errors => {\n        if (errors === void 0 || errors.length === 0) {\n          index === validateIndex && emitEvent(true)\n          return true\n        }\n\n        // if not outdated already\n        if (index === validateIndex) {\n          const { comp, err } = errors[ 0 ]\n\n          err !== void 0 && console.error(err)\n          emitEvent(false, comp)\n\n          if (focus === true) {\n            // Try to focus first mounted and active component\n            const activeError = errors.find(({ comp }) => (\n              typeof comp.focus === 'function'\n              && vmIsDestroyed(comp.$) === false\n            ))\n\n            if (activeError !== void 0) {\n              activeError.comp.focus()\n            }\n          }\n        }\n\n        return false\n      })\n    }\n\n    function resetValidation () {\n      validateIndex++\n\n      registeredComponents.forEach(comp => {\n        typeof comp.resetValidation === 'function' && comp.resetValidation()\n      })\n    }\n\n    function submit (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      const index = validateIndex + 1\n\n      validate().then(val => {\n        // if not outdated && validation succeeded\n        if (index === validateIndex && val === true) {\n          if (props.onSubmit !== void 0) {\n            emit('submit', evt)\n          }\n          else if (evt !== void 0 && evt.target !== void 0 && typeof evt.target.submit === 'function') {\n            evt.target.submit()\n          }\n        }\n      })\n    }\n\n    function reset (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      emit('reset')\n\n      nextTick(() => { // allow userland to reset values before\n        resetValidation()\n        if (props.autofocus === true && props.noResetFocus !== true) {\n          focus()\n        }\n      })\n    }\n\n    function focus () {\n      addFocusFn(() => {\n        if (rootRef.value === null) { return }\n\n        const target = rootRef.value.querySelector('[autofocus][tabindex], [data-autofocus][tabindex]')\n          || rootRef.value.querySelector('[autofocus] [tabindex], [data-autofocus] [tabindex]')\n          || rootRef.value.querySelector('[autofocus], [data-autofocus]')\n          || Array.prototype.find.call(rootRef.value.querySelectorAll('[tabindex]'), el => el.tabIndex > -1)\n\n        target !== null && target !== void 0 && target.focus({ preventScroll: true })\n      })\n    }\n\n    provide(formKey, {\n      bindComponent (vmProxy) {\n        registeredComponents.push(vmProxy)\n      },\n\n      unbindComponent (vmProxy) {\n        const index = registeredComponents.indexOf(vmProxy)\n        if (index > -1) {\n          registeredComponents.splice(index, 1)\n        }\n      }\n    })\n\n    let shouldActivate = false\n\n    onDeactivated(() => {\n      shouldActivate = true\n    })\n\n    onActivated(() => {\n      shouldActivate === true && props.autofocus === true && focus()\n    })\n\n    onMounted(() => {\n      props.autofocus === true && focus()\n    })\n\n    // expose public methods\n    Object.assign(vm.proxy, {\n      validate,\n      resetValidation,\n      submit,\n      reset,\n      focus,\n      getValidationComponents: () => registeredComponents\n    })\n\n    return () => h('form', {\n      class: 'q-form',\n      ref: rootRef,\n      onSubmit: submit,\n      onReset: reset\n    }, hSlot(slots.default))\n  }\n})\n"],"mappings":";AAAA,SAASA,CAAC,EAAEC,GAAG,EAAEC,WAAW,EAAEC,aAAa,EAAEC,SAAS,EAAEC,kBAAkB,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,KAAK;AAE1G,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,UAAU,QAAQ,sCAAsC;AACjE,SAASC,KAAK,QAAQ,+BAA+B;AACrD,SAASC,OAAO,QAAQ,gCAAgC;AACxD,SAASC,aAAa,QAAQ,2BAA2B;AAEzD,eAAeL,eAAe,CAAC;EAC7BM,IAAI,EAAE,OAAO;EAEbC,KAAK,EAAE;IACLC,SAAS,EAAEC,OAAO;IAClBC,YAAY,EAAED,OAAO;IACrBE,YAAY,EAAEF,OAAO;IACrBG,MAAM,EAAEH,OAAO;IAEfI,QAAQ,EAAEC;EACZ,CAAC;EAEDC,KAAK,EAAE,CAAE,OAAO,EAAE,mBAAmB,EAAE,iBAAiB,CAAE;EAE1DC,KAAKA,CAAET,KAAK,EAAE;IAAEU,KAAK;IAAEC;EAAK,CAAC,EAAE;IAC7B,MAAMC,EAAE,GAAGtB,kBAAkB,CAAC,CAAC;IAC/B,MAAMuB,OAAO,GAAG3B,GAAG,CAAC,IAAI,CAAC;IAEzB,IAAI4B,aAAa,GAAG,CAAC;IACrB,MAAMC,oBAAoB,GAAG,EAAE;IAE/B,SAASC,QAAQA,CAAEC,WAAW,EAAE;MAC9B,MAAMC,KAAK,GAAG,OAAOD,WAAW,KAAK,SAAS,GAC1CA,WAAW,GACXjB,KAAK,CAACG,YAAY,KAAK,IAAI;MAE/B,MAAMgB,KAAK,GAAG,EAAEL,aAAa;MAE7B,MAAMM,SAAS,GAAGA,CAACC,GAAG,EAAEnC,GAAG,KAAK;QAC9ByB,IAAI,CAAC,YAAY,IAAIU,GAAG,KAAK,IAAI,GAAG,SAAS,GAAG,OAAO,CAAC,EAAEnC,GAAG,CAAC;MAChE,CAAC;MAED,MAAMoC,iBAAiB,GAAGC,IAAI,IAAI;QAChC,MAAMC,KAAK,GAAGD,IAAI,CAACP,QAAQ,CAAC,CAAC;QAE7B,OAAO,OAAOQ,KAAK,CAACC,IAAI,KAAK,UAAU,GACnCD,KAAK,CAACC,IAAI,CACVD,KAAK,KAAK;UAAEA,KAAK;UAAED;QAAK,CAAC,CAAC,EAC1BG,GAAG,KAAK;UAAEF,KAAK,EAAE,KAAK;UAAED,IAAI;UAAEG;QAAI,CAAC,CACrC,CAAC,GACCC,OAAO,CAACC,OAAO,CAAC;UAAEJ,KAAK;UAAED;QAAK,CAAC,CAAC;MACtC,CAAC;MAED,MAAMM,aAAa,GAAG7B,KAAK,CAACK,MAAM,KAAK,IAAI,GACvCsB,OAAO,CACNG,GAAG,CAACf,oBAAoB,CAACgB,GAAG,CAACT,iBAAiB,CAAC,CAAC,CAChDG,IAAI,CAACJ,GAAG,IAAIA,GAAG,CAACW,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACT,KAAK,KAAK,IAAI,CAAC,CAAC,GAC/CT,oBAAoB,CACnBmB,MAAM,CACL,CAACC,GAAG,EAAEZ,IAAI,KAAKY,GAAG,CAACV,IAAI,CAAC,MAAM;QAC5B,OAAOH,iBAAiB,CAACC,IAAI,CAAC,CAACE,IAAI,CAACQ,CAAC,IAAI;UACvC,IAAIA,CAAC,CAACT,KAAK,KAAK,KAAK,EAAE;YAAE,OAAOG,OAAO,CAACS,MAAM,CAACH,CAAC,CAAC;UAAC;QACpD,CAAC,CAAC;MACJ,CAAC,CAAC,EACFN,OAAO,CAACC,OAAO,CAAC,CAClB,CAAC,CACAS,KAAK,CAACC,KAAK,IAAI,CAAEA,KAAK,CAAE,CAAC;MAE9B,OAAOT,aAAa,CAACJ,IAAI,CAACc,MAAM,IAAI;QAClC,IAAIA,MAAM,KAAK,KAAK,CAAC,IAAIA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;UAC5CrB,KAAK,KAAKL,aAAa,IAAIM,SAAS,CAAC,IAAI,CAAC;UAC1C,OAAO,IAAI;QACb;;QAEA;QACA,IAAID,KAAK,KAAKL,aAAa,EAAE;UAC3B,MAAM;YAAES,IAAI;YAAEG;UAAI,CAAC,GAAGa,MAAM,CAAE,CAAC,CAAE;UAEjCb,GAAG,KAAK,KAAK,CAAC,IAAIe,OAAO,CAACH,KAAK,CAACZ,GAAG,CAAC;UACpCN,SAAS,CAAC,KAAK,EAAEG,IAAI,CAAC;UAEtB,IAAIL,KAAK,KAAK,IAAI,EAAE;YAClB;YACA,MAAMwB,WAAW,GAAGH,MAAM,CAACI,IAAI,CAAC,CAAC;cAAEpB;YAAK,CAAC,KACvC,OAAOA,IAAI,CAACL,KAAK,KAAK,UAAU,IAC7BpB,aAAa,CAACyB,IAAI,CAACqB,CAAC,CAAC,KAAK,KAC9B,CAAC;YAEF,IAAIF,WAAW,KAAK,KAAK,CAAC,EAAE;cAC1BA,WAAW,CAACnB,IAAI,CAACL,KAAK,CAAC,CAAC;YAC1B;UACF;QACF;QAEA,OAAO,KAAK;MACd,CAAC,CAAC;IACJ;IAEA,SAAS2B,eAAeA,CAAA,EAAI;MAC1B/B,aAAa,EAAE;MAEfC,oBAAoB,CAAC+B,OAAO,CAACvB,IAAI,IAAI;QACnC,OAAOA,IAAI,CAACsB,eAAe,KAAK,UAAU,IAAItB,IAAI,CAACsB,eAAe,CAAC,CAAC;MACtE,CAAC,CAAC;IACJ;IAEA,SAASE,MAAMA,CAAEC,GAAG,EAAE;MACpBA,GAAG,KAAK,KAAK,CAAC,IAAItD,cAAc,CAACsD,GAAG,CAAC;MAErC,MAAM7B,KAAK,GAAGL,aAAa,GAAG,CAAC;MAE/BE,QAAQ,CAAC,CAAC,CAACS,IAAI,CAACwB,GAAG,IAAI;QACrB;QACA,IAAI9B,KAAK,KAAKL,aAAa,IAAImC,GAAG,KAAK,IAAI,EAAE;UAC3C,IAAIjD,KAAK,CAACM,QAAQ,KAAK,KAAK,CAAC,EAAE;YAC7BK,IAAI,CAAC,QAAQ,EAAEqC,GAAG,CAAC;UACrB,CAAC,MACI,IAAIA,GAAG,KAAK,KAAK,CAAC,IAAIA,GAAG,CAACE,MAAM,KAAK,KAAK,CAAC,IAAI,OAAOF,GAAG,CAACE,MAAM,CAACH,MAAM,KAAK,UAAU,EAAE;YAC3FC,GAAG,CAACE,MAAM,CAACH,MAAM,CAAC,CAAC;UACrB;QACF;MACF,CAAC,CAAC;IACJ;IAEA,SAASI,KAAKA,CAAEH,GAAG,EAAE;MACnBA,GAAG,KAAK,KAAK,CAAC,IAAItD,cAAc,CAACsD,GAAG,CAAC;MAErCrC,IAAI,CAAC,OAAO,CAAC;MAEbpB,QAAQ,CAAC,MAAM;QAAE;QACfsD,eAAe,CAAC,CAAC;QACjB,IAAI7C,KAAK,CAACC,SAAS,KAAK,IAAI,IAAID,KAAK,CAACI,YAAY,KAAK,IAAI,EAAE;UAC3Dc,KAAK,CAAC,CAAC;QACT;MACF,CAAC,CAAC;IACJ;IAEA,SAASA,KAAKA,CAAA,EAAI;MAChBvB,UAAU,CAAC,MAAM;QACf,IAAIkB,OAAO,CAACuC,KAAK,KAAK,IAAI,EAAE;UAAE;QAAO;QAErC,MAAMF,MAAM,GAAGrC,OAAO,CAACuC,KAAK,CAACC,aAAa,CAAC,mDAAmD,CAAC,IAC1FxC,OAAO,CAACuC,KAAK,CAACC,aAAa,CAAC,qDAAqD,CAAC,IAClFxC,OAAO,CAACuC,KAAK,CAACC,aAAa,CAAC,+BAA+B,CAAC,IAC5DC,KAAK,CAACC,SAAS,CAACZ,IAAI,CAACa,IAAI,CAAC3C,OAAO,CAACuC,KAAK,CAACK,gBAAgB,CAAC,YAAY,CAAC,EAAEC,EAAE,IAAIA,EAAE,CAACC,QAAQ,GAAG,CAAC,CAAC,CAAC;QAEpGT,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,IAAIA,MAAM,CAAChC,KAAK,CAAC;UAAE0C,aAAa,EAAE;QAAK,CAAC,CAAC;MAC/E,CAAC,CAAC;IACJ;IAEApE,OAAO,CAACK,OAAO,EAAE;MACfgE,aAAaA,CAAEC,OAAO,EAAE;QACtB/C,oBAAoB,CAACgD,IAAI,CAACD,OAAO,CAAC;MACpC,CAAC;MAEDE,eAAeA,CAAEF,OAAO,EAAE;QACxB,MAAM3C,KAAK,GAAGJ,oBAAoB,CAACkD,OAAO,CAACH,OAAO,CAAC;QACnD,IAAI3C,KAAK,GAAG,CAAC,CAAC,EAAE;UACdJ,oBAAoB,CAACmD,MAAM,CAAC/C,KAAK,EAAE,CAAC,CAAC;QACvC;MACF;IACF,CAAC,CAAC;IAEF,IAAIgD,cAAc,GAAG,KAAK;IAE1B/E,aAAa,CAAC,MAAM;MAClB+E,cAAc,GAAG,IAAI;IACvB,CAAC,CAAC;IAEFhF,WAAW,CAAC,MAAM;MAChBgF,cAAc,KAAK,IAAI,IAAInE,KAAK,CAACC,SAAS,KAAK,IAAI,IAAIiB,KAAK,CAAC,CAAC;IAChE,CAAC,CAAC;IAEF7B,SAAS,CAAC,MAAM;MACdW,KAAK,CAACC,SAAS,KAAK,IAAI,IAAIiB,KAAK,CAAC,CAAC;IACrC,CAAC,CAAC;;IAEF;IACAkD,MAAM,CAACC,MAAM,CAACzD,EAAE,CAAC0D,KAAK,EAAE;MACtBtD,QAAQ;MACR6B,eAAe;MACfE,MAAM;MACNI,KAAK;MACLjC,KAAK;MACLqD,uBAAuB,EAAEA,CAAA,KAAMxD;IACjC,CAAC,CAAC;IAEF,OAAO,MAAM9B,CAAC,CAAC,MAAM,EAAE;MACrBuF,KAAK,EAAE,QAAQ;MACftF,GAAG,EAAE2B,OAAO;MACZP,QAAQ,EAAEyC,MAAM;MAChB0B,OAAO,EAAEtB;IACX,CAAC,EAAEvD,KAAK,CAACc,KAAK,CAACgE,OAAO,CAAC,CAAC;EAC1B;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}