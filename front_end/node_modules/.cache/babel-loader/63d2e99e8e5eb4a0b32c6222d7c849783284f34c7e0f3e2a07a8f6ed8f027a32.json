{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createBlock as _createBlock, createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"q-pa-md\"\n};\nconst _hoisted_2 = {\n  class: \"q-pa-md\"\n};\nconst _hoisted_3 = {\n  class: \"text-left\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_icon = _resolveComponent(\"q-icon\");\n  const _component_q_input = _resolveComponent(\"q-input\");\n  const _component_q_btn = _resolveComponent(\"q-btn\");\n  const _component_q_td = _resolveComponent(\"q-td\");\n  const _component_q_th = _resolveComponent(\"q-th\");\n  const _component_q_tr = _resolveComponent(\"q-tr\");\n  const _component_q_table = _resolveComponent(\"q-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_q_table, {\n    rows: $setup.rows,\n    columns: $setup.columns,\n    \"visible-columns\": $setup.visibleColumns,\n    \"row-key\": \"name\"\n  }, {\n    top: _withCtx(() => [_createVNode(_component_q_input, {\n      outlined: \"\",\n      label: \"Buscar cliente\"\n    }, {\n      append: _withCtx(() => [_createVNode(_component_q_icon, {\n        name: \"search\",\n        onClick: _cache[0] || (_cache[0] = $event => _ctx.nome - _ctx.cliente),\n        class: \"cursor-pointer\"\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    \"body-cell\": _withCtx(props => [_createVNode(_component_q_tr, {\n      props: props\n    }, {\n      default: _withCtx(() => [_createVNode(_component_q_td, {\n        \"auto-width\": \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_q_btn, {\n          onClick: $event => $setup.editarCliente(props.row.name),\n          icon: \"edit\",\n          class: \"q-mr-xs\"\n        }, null, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_q_btn, {\n          onClick: $event => $setup.excluirCliente(props.row.name),\n          icon: \"delete\",\n          class: \"q-mr-xs\"\n        }, null, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_q_btn, {\n          onClick: $event => $setup.exibirMaisInformacoes(props.row.name),\n          icon: \"info\"\n        }, null, 8 /* PROPS */, [\"onClick\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */), _createElementVNode(\"template\", null, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_q_table, {\n        flat: \"\",\n        bordered: \"\",\n        title: \"Treats\",\n        rows: $setup.rows,\n        columns: $setup.columns,\n        \"row-key\": \"name\"\n      }, {\n        header: _withCtx(props => [_createVNode(_component_q_tr, {\n          props: props\n        }, {\n          default: _withCtx(() => [_createVNode(_component_q_th, {\n            \"auto-width\": \"\"\n          }), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(props.cols, col => {\n            return _openBlock(), _createBlock(_component_q_th, {\n              key: col.name,\n              props: props\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(col.label), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"])]),\n        body: _withCtx(props => [_createVNode(_component_q_tr, {\n          props: props\n        }, {\n          default: _withCtx(() => [_createVNode(_component_q_td, {\n            \"auto-width\": \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_q_btn, {\n              size: \"sm\",\n              color: \"accent\",\n              round: \"\",\n              dense: \"\",\n              onClick: $event => props.expand = !props.expand,\n              icon: props.expand ? 'remove' : 'add'\n            }, null, 8 /* PROPS */, [\"onClick\", \"icon\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(props.cols, col => {\n            return _openBlock(), _createBlock(_component_q_td, {\n              key: col.name,\n              props: props\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(col.value), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"]), _withDirectives(_createVNode(_component_q_tr, {\n          props: props\n        }, {\n          default: _withCtx(() => [_createVNode(_component_q_td, {\n            colspan: \"100%\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, \"This is expand slot for row above: \" + _toDisplayString(props.row.name) + \".\", 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"]), [[_vShow, props.expand]])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"rows\", \"columns\"])])])]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"rows\", \"columns\", \"visible-columns\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_q_table","rows","$setup","columns","visibleColumns","top","_withCtx","_component_q_input","outlined","label","append","_component_q_icon","name","onClick","_cache","$event","_ctx","nome","cliente","_","props","_component_q_tr","default","_component_q_td","_component_q_btn","editarCliente","row","icon","excluirCliente","exibirMaisInformacoes","_createElementVNode","_hoisted_2","flat","bordered","title","header","_component_q_th","_Fragment","_renderList","cols","col","_createBlock","key","_createTextVNode","_toDisplayString","body","size","color","round","dense","expand","value","colspan","_hoisted_3"],"sources":["C:\\Users\\PC01\\Documents\\Desafio_Eliezer_Embracon\\front_end\\desafio\\src\\components\\TabelaClientes.vue"],"sourcesContent":["<template>\n  <div class=\"q-pa-md\">\n    <q-table\n     \n      :rows=\"rows\"\n      :columns=\"columns\"\n      :visible-columns=\"visibleColumns\"\n      row-key=\"name\"\n      >\n\n\n      <template v-slot:top>\n        <q-input outlined label=\"Buscar cliente\"  >\n\n          <template v-slot:append>\n            <q-icon name=\"search\" @click=\"nome-cliente\" class=\"cursor-pointer\" />\n          </template>\n\n         </q-input>\n      </template>\n      \n      <template v-slot:body-cell=\"props\">\n        <q-tr :props=\"props\">\n          \n          <q-td auto-width>\n            <q-btn @click=\"editarCliente(props.row.name )\" icon=\"edit\" class=\"q-mr-xs\" />\n            <q-btn @click=\"excluirCliente(props.row.name )\" icon=\"delete\" class=\"q-mr-xs\" />\n            <q-btn @click=\"exibirMaisInformacoes(props.row.name )\" icon=\"info\" />\n          </q-td>\n          <template>\n  <div class=\"q-pa-md\">\n    <q-table\n      flat bordered\n      title=\"Treats\"\n      :rows=\"rows\"\n      :columns=\"columns\"\n      row-key=\"name\"\n    >\n\n      <template v-slot:header=\"props\">\n        <q-tr :props=\"props\">\n          <q-th auto-width />\n          <q-th\n            v-for=\"col in props.cols\"\n            :key=\"col.name\"\n            :props=\"props\"\n          >\n            {{ col.label }}\n          </q-th>\n        </q-tr>\n      </template>\n\n      <template v-slot:body=\"props\">\n        <q-tr :props=\"props\">\n          <q-td auto-width>\n            <q-btn size=\"sm\" color=\"accent\" round dense @click=\"props.expand = !props.expand\" :icon=\"props.expand ? 'remove' : 'add'\" />\n          </q-td>\n          <q-td\n            v-for=\"col in props.cols\"\n            :key=\"col.name\"\n            :props=\"props\"\n          >\n            {{ col.value }}\n          </q-td>\n        </q-tr>\n        <q-tr v-show=\"props.expand\" :props=\"props\">\n          <q-td colspan=\"100%\">\n            <div class=\"text-left\">This is expand slot for row above: {{ props.row.name }}.</div>\n          </q-td>\n        </q-tr>\n      </template>\n\n    </q-table>\n  </div>\n</template>\n\n<script>\nconst columns = [\n  {\n    name: 'name',\n    required: true,\n    label: 'Dessert (100g serving)',\n    align: 'left',\n    field: row => row.name,\n    format: val => `${val}`,\n    sortable: true\n  },\n  { name: 'calories', align: 'center', label: 'Calories', field: 'calories', sortable: true },\n  { name: 'fat', label: 'Fat (g)', field: 'fat', sortable: true },\n  { name: 'carbs', label: 'Carbs (g)', field: 'carbs' },\n  { name: 'protein', label: 'Protein (g)', field: 'protein' },\n  { name: 'sodium', label: 'Sodium (mg)', field: 'sodium' },\n  { name: 'calcium', label: 'Calcium (%)', field: 'calcium', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) },\n  { name: 'iron', label: 'Iron (%)', field: 'iron', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) }\n]\n\nconst rows = [\n  {\n    name: 'Frozen Yogurt',\n    calories: 159,\n    fat: 6.0,\n    carbs: 24,\n    protein: 4.0,\n    sodium: 87,\n    calcium: '14%',\n    iron: '1%'\n  },\n  {\n    name: 'Ice cream sandwich',\n    calories: 237,\n    fat: 9.0,\n    carbs: 37,\n    protein: 4.3,\n    sodium: 129,\n    calcium: '8%',\n    iron: '1%'\n  },\n  {\n    name: 'Eclair',\n    calories: 262,\n    fat: 16.0,\n    carbs: 23,\n    protein: 6.0,\n    sodium: 337,\n    calcium: '6%',\n    iron: '7%'\n  },\n  {\n    name: 'Cupcake',\n    calories: 305,\n    fat: 3.7,\n    carbs: 67,\n    protein: 4.3,\n    sodium: 413,\n    calcium: '3%',\n    iron: '8%'\n  },\n  {\n    name: 'Gingerbread',\n    calories: 356,\n    fat: 16.0,\n    carbs: 49,\n    protein: 3.9,\n    sodium: 327,\n    calcium: '7%',\n    iron: '16%'\n  },\n  {\n    name: 'Jelly bean',\n    calories: 375,\n    fat: 0.0,\n    carbs: 94,\n    protein: 0.0,\n    sodium: 50,\n    calcium: '0%',\n    iron: '0%'\n  },\n  {\n    name: 'Lollipop',\n    calories: 392,\n    fat: 0.2,\n    carbs: 98,\n    protein: 0,\n    sodium: 38,\n    calcium: '0%',\n    iron: '2%'\n  },\n  {\n    name: 'Honeycomb',\n    calories: 408,\n    fat: 3.2,\n    carbs: 87,\n    protein: 6.5,\n    sodium: 562,\n    calcium: '0%',\n    iron: '45%'\n  },\n  {\n    name: 'Donut',\n    calories: 452,\n    fat: 25.0,\n    carbs: 51,\n    protein: 4.9,\n    sodium: 326,\n    calcium: '2%',\n    iron: '22%'\n  },\n  {\n    name: 'KitKat',\n    calories: 518,\n    fat: 26.0,\n    carbs: 65,\n    protein: 7,\n    sodium: 54,\n    calcium: '12%',\n    iron: '6%'\n  }\n]\n\nexport default {\n  setup () {\n    return {\n      columns,\n      rows\n    }\n  }\n}\n</script>\n\n        </q-tr>\n      </template>\n\n    </q-table>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\n\nconst columns = [ \n{\n    name: 'name',\n    label: 'Nome Sobrenome',\n    align: 'left',\n    field: row => row.name,\n    format: val => `${val}`,\n    sortable: true\n  },\n  { name: 'email', align: 'center', label: 'Email', field: 'email'},\n  { name: 'telefone', align: 'center', label: 'Telefone', field: 'telefone' },\n  { name: 'cep', align: 'center', label: 'Cep', field: 'cep'},  \n]\n\nconst rows = [\n  {\n    name: 'Letícia Reis',email: 'le@gmail.com',telefone: '(15) 99876-3456',cep: '18.044-000',\n  },\n  {\n    name:'Jordan Bellford',email: 'jordi@gmail.com',telefone: '(15) 99765-4352',cep: '18.190-000'\n  }\n]\n\nconst editarCliente = (cliente) => {\n      // Lógica para editar o cliente\n      console.log('Editar:', cliente);\n    }\n\n    const excluirCliente = (cliente) => {\n      // Lógica para excluir o cliente\n      console.log('Excluir:', cliente);\n    }\n\n    const exibirMaisInformacoes = (cliente) => {\n      // Lógica para exibir mais informações do cliente\n      console.log('Mais Informações:', cliente);\n    }\n\n\nexport default {\n  setup () {\n    return {\n      visibleColumns: ref(['name', 'email', 'telefone', 'cep']),\n      columns,\n      rows,\n      editarCliente,\n      excluirCliente,\n      exibirMaisInformacoes\n    }\n  }\n}\n\n\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}