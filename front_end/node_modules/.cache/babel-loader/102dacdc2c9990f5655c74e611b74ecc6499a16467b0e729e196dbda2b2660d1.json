{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"q-pa-md\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"flex-center\"\n};\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"col-6 q-mb-md\"\n};\nconst _hoisted_5 = {\n  class: \"col-6 q-pl-xs q-mb-md\"\n};\nconst _hoisted_6 = {\n  class: \"col-6 q-mb-md\"\n};\nconst _hoisted_7 = {\n  class: \"col-3 q-pl-xs q-mb-md\"\n};\nconst _hoisted_8 = {\n  class: \"col-3 q-pl-xs q-mb-md\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_spinner = _resolveComponent(\"q-spinner\");\n  const _component_q_input = _resolveComponent(\"q-input\");\n  const _component_q_btn = _resolveComponent(\"q-btn\");\n  const _component_q_form = _resolveComponent(\"q-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_q_spinner, {\n    size: \"80px\",\n    color: \"primary\"\n  })])) : (_openBlock(), _createBlock(_component_q_form, {\n    key: 1,\n    onSubmit: $setup.onSubmit\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_q_input, {\n      filled: \"\",\n      modelValue: $setup.nome,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.nome = $event),\n      label: \"Seu nome *\",\n      hint: \"Nome\",\n      \"lazy-rules\": \"\",\n      rules: [val => val && val.length > 0 || 'Por favor digite seu nome']\n    }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_q_input, {\n      filled: \"\",\n      modelValue: $setup.sobrenome,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.sobrenome = $event),\n      label: \"Seu sobrenome *\",\n      \"lazy-rules\": \"\",\n      rules: [val => val !== null && val !== '' || 'Por favor digite seu sobrenome']\n    }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_q_input, {\n      filled: \"\",\n      modelValue: $setup.email,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.email = $event),\n      label: \"Seu email *\",\n      \"lazy-rules\": \"\",\n      rules: [val => val !== null && val !== '' || 'Por favor digite um email válido']\n    }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_q_input, {\n      filled: \"\",\n      modelValue: $setup.telefone,\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.telefone = $event),\n      label: \"Seu telefone *\",\n      \"lazy-rules\": \"\",\n      rules: [val => val !== null && val !== '' || 'Por favor digite seu telefone']\n    }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_q_input, {\n      filled: \"\",\n      modelValue: $setup.cep,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.cep = $event),\n      label: \"Seu CEP *\",\n      \"lazy-rules\": \"\",\n      rules: [val => val !== null && val !== '' || 'Por favor digite seu CEP ']\n    }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])])]), _createElementVNode(\"div\", null, [_createVNode(_component_q_btn, {\n      label: \"Salvar\",\n      type: \"submit\",\n      color: \"primary\"\n    })])]),\n    _: 1 /* STABLE */\n  }))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$setup","loading","_hoisted_2","_createVNode","_component_q_spinner","size","color","_createBlock","_component_q_form","onSubmit","default","_withCtx","_createElementVNode","_hoisted_3","_hoisted_4","_component_q_input","filled","modelValue","nome","_cache","$event","label","hint","rules","val","length","_hoisted_5","sobrenome","_hoisted_6","email","_hoisted_7","telefone","_hoisted_8","cep","_component_q_btn","type","_"],"sources":["C:\\Users\\PC01\\Documents\\Desafio_Eliezer_Embracon\\front_end\\desafio\\src\\components\\FormularioCliente.vue"],"sourcesContent":["<template>\r\n  <div class=\"q-pa-md\">\r\n    <div class=\"flex-center\" v-if=\"loading\">\r\n      <q-spinner  size=\"80px\" color=\"primary\" />\r\n    </div>\r\n    <q-form\r\n      @submit=\"onSubmit\"\r\n    v-else>\r\n      <div class=\"row\">\r\n        <div class=\"col-6 q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"nome\"\r\n            label=\"Seu nome *\"\r\n            hint=\"Nome\"\r\n            lazy-rules\r\n            :rules=\"[val => val && val.length > 0 || 'Por favor digite seu nome']\"\r\n          />\r\n        </div>\r\n        <div class=\"col-6 q-pl-xs q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"sobrenome\"\r\n            label=\"Seu sobrenome *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite seu sobrenome'\r\n            ]\"\r\n          />\r\n        </div>\r\n        <div class=\"col-6 q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"email\"\r\n            label=\"Seu email *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite um email válido'\r\n            ]\"\r\n          />\r\n        </div>\r\n        <div class=\"col-3 q-pl-xs q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"telefone\"\r\n            label=\"Seu telefone *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite seu telefone'\r\n            ]\"\r\n          />\r\n        </div>\r\n        <div class=\"col-3 q-pl-xs q-mb-md\">\r\n          <q-input\r\n            filled\r\n            v-model=\"cep\"\r\n            label=\"Seu CEP *\"\r\n            lazy-rules\r\n            :rules=\"[\r\n              val => val !== null && val !== '' || 'Por favor digite seu CEP '\r\n            ]\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <q-btn label=\"Salvar\" type=\"submit\" color=\"primary\"/>\r\n      </div>\r\n    </q-form>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { api } from '@/boot/axios';\r\nimport { useQuasar } from 'quasar';\r\nimport {  ref, onMounted } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\n\r\nconst $q = useQuasar();\r\nconst nome = ref(null);\r\nconst sobrenome = ref(null);\r\nconst email = ref(null);\r\nconst telefone = ref(null);\r\nconst cep = ref(null);\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst clientId = ref('');\r\nconst loading = ref(false);\r\n\r\nconst buscarCliente = async (clientId) => {\r\n  try {\r\n    const response = await api.get(`/clientes/${clientId.value}`);\r\n    const dadosCliente = response.data;\r\n    \r\n      nome.value =  dadosCliente.nome,\r\n      sobrenome.value = dadosCliente.sobrenome,\r\n      email.value = dadosCliente.email,\r\n      telefone.value = dadosCliente.telefone,\r\n      cep.value = dadosCliente.endereco.cep.replace(\"-\", \"\")\r\n\r\n    \r\n  } catch (error) {\r\n    console.error('Erro ao buscar cliente:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst onSubmit = async () => {\r\n  if (clientId.value != null) {\r\n    await editarCliente();\r\n    \r\n  } else {\r\n    await criarCliente();\r\n  }\r\n};\r\n\r\nconst editarCliente = async () => {\r\n  try {\r\n    loading.value = true;\r\n    await api.put(`/clientes/${clientId.value}`, {\r\n      nome: nome.value,\r\n      sobrenome: sobrenome.value,\r\n      email: email.value,\r\n      telefone: telefone.value,\r\n      cep: cep.value\r\n    });\r\n\r\n    notificarSucesso('Cliente editado com sucesso');\r\n    limparCampos();\r\n    setTimeout(() => {\r\n      loading.value = false;\r\n      router.push('/clientes/list');\r\n    }, 1000);\r\n  } catch (error) {\r\n    notificarErro('Erro ao editar cliente');\r\n  }\r\n};\r\n\r\nconst criarCliente = async () => {\r\n  try {\r\n    await api.post(`/clientes`, {\r\n      nome: nome.value,\r\n      sobrenome: sobrenome.value,\r\n      email: email.value,\r\n      telefone: telefone.value,\r\n      cep: cep.value\r\n    });\r\n\r\n    notificarSucesso('Cliente criado com sucesso');\r\n    limparCampos();\r\n   \r\n\r\n  } catch (error) {\r\n    notificarErro('Erro ao criar cliente');\r\n  }\r\n};\r\n\r\nconst notificarSucesso = (mensagem) => {\r\n  $q.notify({\r\n    color: 'green-4',\r\n    textColor: 'white',\r\n    icon: 'cloud_done',\r\n    message: mensagem\r\n  });\r\n};\r\n\r\nconst notificarErro = (mensagem) => {\r\n  $q.notify({\r\n    color: 'red-5',\r\n    textColor: 'white',\r\n    icon: 'warning',\r\n    message: mensagem\r\n  });\r\n};\r\n\r\nconst limparCampos = () => {\r\n  nome.value = '';\r\n  sobrenome.value = '';\r\n  email.value = '';\r\n  telefone.value = '';\r\n  cep.value = '';\r\n};\r\n\r\n\r\n\r\nonMounted(() => {\r\n  \r\n  clientId.value = route.params.id;\r\n  clientId.value !== undefined && clientId.value !== null && clientId.value !== '' && buscarCliente(clientId);\r\n});\r\n\r\n\r\n\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;EADtBC,GAAA;EAESD,KAAK,EAAC;;;EAMJA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAe;;EAUrBA,KAAK,EAAC;AAAuB;;EAW7BA,KAAK,EAAC;AAAe;;EAWrBA,KAAK,EAAC;AAAuB;;EAW7BA,KAAK,EAAC;AAAuB;;;;;;uBAnDxCE,mBAAA,CAoEM,OApENC,UAoEM,GAnE2BC,MAAA,CAAAC,OAAO,I,cAAtCH,mBAAA,CAEM,OAFNI,UAEM,GADJC,YAAA,CAA0CC,oBAAA;IAA9BC,IAAI,EAAC,MAAM;IAACC,KAAK,EAAC;yBAEhCC,YAAA,CA+DSC,iBAAA;IApEbX,GAAA;IAMOY,QAAM,EAAET,MAAA,CAAAS;;IANfC,OAAA,EAAAC,QAAA,CAQM,MAuDM,CAvDNC,mBAAA,CAuDM,OAvDNC,UAuDM,GAtDJD,mBAAA,CASM,OATNE,UASM,GARJX,YAAA,CAOEY,kBAAA;MANAC,MAAM,EAAN,EAAM;MAXlBC,UAAA,EAYqBjB,MAAA,CAAAkB,IAAI;MAZzB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAYqBpB,MAAA,CAAAkB,IAAI,GAAAE,MAAA;MACbC,KAAK,EAAC,YAAY;MAClBC,IAAI,EAAC,MAAM;MACX,YAAU,EAAV,EAAU;MACTC,KAAK,GAAGC,GAAG,IAAIA,GAAG,IAAIA,GAAG,CAACC,MAAM;wDAGrCb,mBAAA,CAUM,OAVNc,UAUM,GATJvB,YAAA,CAQEY,kBAAA;MAPAC,MAAM,EAAN,EAAM;MArBlBC,UAAA,EAsBqBjB,MAAA,CAAA2B,SAAS;MAtB9B,uBAAAR,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAsBqBpB,MAAA,CAAA2B,SAAS,GAAAP,MAAA;MAClBC,KAAK,EAAC,iBAAiB;MACvB,YAAU,EAAV,EAAU;MACTE,KAAK,GAAmBC,GAAG,IAAIA,GAAG,aAAaA,GAAG;wDAKvDZ,mBAAA,CAUM,OAVNgB,UAUM,GATJzB,YAAA,CAQEY,kBAAA;MAPAC,MAAM,EAAN,EAAM;MAhClBC,UAAA,EAiCqBjB,MAAA,CAAA6B,KAAK;MAjC1B,uBAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiCqBpB,MAAA,CAAA6B,KAAK,GAAAT,MAAA;MACdC,KAAK,EAAC,aAAa;MACnB,YAAU,EAAV,EAAU;MACTE,KAAK,GAAmBC,GAAG,IAAIA,GAAG,aAAaA,GAAG;wDAKvDZ,mBAAA,CAUM,OAVNkB,UAUM,GATJ3B,YAAA,CAQEY,kBAAA;MAPAC,MAAM,EAAN,EAAM;MA3ClBC,UAAA,EA4CqBjB,MAAA,CAAA+B,QAAQ;MA5C7B,uBAAAZ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA4CqBpB,MAAA,CAAA+B,QAAQ,GAAAX,MAAA;MACjBC,KAAK,EAAC,gBAAgB;MACtB,YAAU,EAAV,EAAU;MACTE,KAAK,GAAmBC,GAAG,IAAIA,GAAG,aAAaA,GAAG;wDAKvDZ,mBAAA,CAUM,OAVNoB,UAUM,GATJ7B,YAAA,CAQEY,kBAAA;MAPAC,MAAM,EAAN,EAAM;MAtDlBC,UAAA,EAuDqBjB,MAAA,CAAAiC,GAAG;MAvDxB,uBAAAd,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAuDqBpB,MAAA,CAAAiC,GAAG,GAAAb,MAAA;MACZC,KAAK,EAAC,WAAW;MACjB,YAAU,EAAV,EAAU;MACTE,KAAK,GAAmBC,GAAG,IAAIA,GAAG,aAAaA,GAAG;0DAOzDZ,mBAAA,CAEM,cADJT,YAAA,CAAqD+B,gBAAA;MAA9Cb,KAAK,EAAC,QAAQ;MAACc,IAAI,EAAC,QAAQ;MAAC7B,KAAK,EAAC;;IAlElD8B,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}