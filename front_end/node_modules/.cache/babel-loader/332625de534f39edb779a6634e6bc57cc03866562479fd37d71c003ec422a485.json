{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"q-pa-md\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_btn = _resolveComponent(\"q-btn\");\n  const _component_q_toolbar = _resolveComponent(\"q-toolbar\");\n  const _component_q_table = _resolveComponent(\"q-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_q_table, {\n    flat: \"\",\n    bordered: \"\",\n    rows: $setup.rows,\n    columns: $setup.columns,\n    \"row-key\": \"name\",\n    \"visible-columns\": $setup.visibleColumns\n  }, {\n    top: _withCtx(() => [_createVNode(_component_q_toolbar, {\n      class: _normalizeClass([\"col-8\", _ctx.$q.dark.isActive ? 'bg-grey-9 text-white' : 'bg-grey-3'])\n    }, {\n      default: _withCtx(() => [_createVNode(_component_q_btn, {\n        flat: \"\",\n        round: \"\",\n        dense: \"\",\n        icon: \"search\"\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"class\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"rows\", \"columns\", \"visible-columns\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_q_table","flat","bordered","rows","$setup","columns","visibleColumns","top","_withCtx","_component_q_toolbar","_normalizeClass","_ctx","$q","dark","isActive","default","_component_q_btn","round","dense","icon","_"],"sources":["C:\\Users\\PC01\\Documents\\Desafio_Eliezer_Embracon\\front_end\\desafio\\src\\components\\TabelaClientes.vue"],"sourcesContent":["<template>\n  <div class=\"q-pa-md\">\n    <q-table\n      flat bordered\n      :rows=\"rows\"\n      :columns=\"columns\"\n      row-key=\"name\"\n      :visible-columns=\"visibleColumns\"\n    >\n      <template v-slot:top>\n\n        <q-toolbar class=\"col-8\" :class=\"$q.dark.isActive ? 'bg-grey-9 text-white' : 'bg-grey-3'\">\n        \n        <q-btn flat round dense icon=\"search\" />\n        </q-toolbar>\n      </template>\n\n    </q-table>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\n\nconst columns = [\n  {\n    name: 'name',\n    required: true,\n    label: 'Dessert (100g serving)',\n    align: 'left',\n    field: row => row.name,\n    format: val => `${val}`,\n    sortable: true\n  },\n  { name: 'calories', align: 'center', label: 'Calories', field: 'calories', sortable: true },\n  { name: 'fat', label: 'Fat (g)', field: 'fat', sortable: true },\n  { name: 'carbs', label: 'Carbs (g)', field: 'carbs' },\n  { name: 'protein', label: 'Protein (g)', field: 'protein' },\n  { name: 'sodium', label: 'Sodium (mg)', field: 'sodium' },\n  { name: 'calcium', label: 'Calcium (%)', field: 'calcium', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) },\n  { name: 'iron', label: 'Iron (%)', field: 'iron', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) }\n]\n\nconst rows = [\n  {\n    name: 'Frozen Yogurt',\n    calories: 159,\n    fat: 6.0,\n    carbs: 24,\n    protein: 4.0,\n    sodium: 87,\n    calcium: '14%',\n    iron: '1%'\n  },\n  {\n    name: 'Ice cream sandwich',\n    calories: 237,\n    fat: 9.0,\n    carbs: 37,\n    protein: 4.3,\n    sodium: 129,\n    calcium: '8%',\n    iron: '1%'\n  },\n  {\n    name: 'Eclair',\n    calories: 262,\n    fat: 16.0,\n    carbs: 23,\n    protein: 6.0,\n    sodium: 337,\n    calcium: '6%',\n    iron: '7%'\n  },\n  {\n    name: 'Cupcake',\n    calories: 305,\n    fat: 3.7,\n    carbs: 67,\n    protein: 4.3,\n    sodium: 413,\n    calcium: '3%',\n    iron: '8%'\n  },\n  {\n    name: 'Gingerbread',\n    calories: 356,\n    fat: 16.0,\n    carbs: 49,\n    protein: 3.9,\n    sodium: 327,\n    calcium: '7%',\n    iron: '16%'\n  },\n  {\n    name: 'Jelly bean',\n    calories: 375,\n    fat: 0.0,\n    carbs: 94,\n    protein: 0.0,\n    sodium: 50,\n    calcium: '0%',\n    iron: '0%'\n  },\n  {\n    name: 'Lollipop',\n    calories: 392,\n    fat: 0.2,\n    carbs: 98,\n    protein: 0,\n    sodium: 38,\n    calcium: '0%',\n    iron: '2%'\n  },\n  {\n    name: 'Honeycomb',\n    calories: 408,\n    fat: 3.2,\n    carbs: 87,\n    protein: 6.5,\n    sodium: 562,\n    calcium: '0%',\n    iron: '45%'\n  },\n  {\n    name: 'Donut',\n    calories: 452,\n    fat: 25.0,\n    carbs: 51,\n    protein: 4.9,\n    sodium: 326,\n    calcium: '2%',\n    iron: '22%'\n  },\n  {\n    name: 'KitKat',\n    calories: 518,\n    fat: 26.0,\n    carbs: 65,\n    protein: 7,\n    sodium: 54,\n    calcium: '12%',\n    iron: '6%'\n  }\n]\n\nexport default {\n  setup () {\n    return {\n      visibleColumns: ref([ 'calories', 'desc', 'fat', 'carbs', 'protein', 'sodium', 'calcium', 'iron' ]),\n      columns,\n      rows\n    }\n  }\n}\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;;;;uBAApBC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJC,YAAA,CAeUC,kBAAA;IAdRC,IAAI,EAAJ,EAAI;IAACC,QAAQ,EAAR,EAAQ;IACZC,IAAI,EAAEC,MAAA,CAAAD,IAAI;IACVE,OAAO,EAAED,MAAA,CAAAC,OAAO;IACjB,SAAO,EAAC,MAAM;IACb,iBAAe,EAAED,MAAA,CAAAE;;IAEDC,GAAG,EAAAC,QAAA,CAElB,MAGY,CAHZT,YAAA,CAGYU,oBAAA;MAHDb,KAAK,EAXxBc,eAAA,EAWyB,OAAO,EAASC,IAAA,CAAAC,EAAE,CAACC,IAAI,CAACC,QAAQ;;MAXzDC,OAAA,EAAAP,QAAA,CAaQ,MAAwC,CAAxCT,YAAA,CAAwCiB,gBAAA;QAAjCf,IAAI,EAAJ,EAAI;QAACgB,KAAK,EAAL,EAAK;QAACC,KAAK,EAAL,EAAK;QAACC,IAAI,EAAC;;MAbrCC,CAAA;;IAAAA,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}